{
  "openapi": "3.0.0",
  "info": {
    "title": "Selector AI Query Language",
    "description": "Selector Software Query Language Queries OpenAPI 3.0",
    "contact": {
      "name": "Selector AI",
      "url": "http://www.selector.ai",
      "email": "info@selector.ai"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://demo2.selector.ai/api/collab2-slack",
      "variables": {}
    }
  ],
  "paths": {
    "/command": {
      "post": {
        "tags": [
          "S2QL"
        ],
        "summary": "post_command_command_post",
        "description": "Executes a S2QL query and returns the results. The server responds with both the data resulting from the query, and any relevant metadata about the query's execution.",
        "operationId": "post_command_command_post",
        "security": [{
                        "bearerAuth": []
                    }],
        "parameters": [],
        "requestBody": {
          "description": "Allows S2QL queries to be executed via the API.\nUseful for PingMesh metrics/kpis over given timeframes between given hosts and sites.\n\n**Query Construction:**\n- *Signle Value*: \n  - {QUERYABLE} as threshold-violation-matrix where src_hostname={HOSTNAME}, dst_hostname={HOSTNAME}, timestamp >= {Start time UTC value}, timestamp <= {End time UTC value}\n- *Time-series values*\n  - {QUERYABLE} as line-plot where src_hostname={HOSTNAME}, dst_hostname={HOSTNAME}, timestamp >= {Start time UTC value}, timestamp <= {End time UTC value}\n- By default the *Signle Value* is returned if the *as* keyword is not used\n\n**Acceptable {QUERYABLE} for Pingmesh KPI/metrics:**\n- latency\n- jitter\n- packet_loss_pct\n\n**Violations**: Additional filter labels can be used to filter based on violated events only. We can append these to the S2QL\n- where {QUERYABLE}_violation > 0\n- The lable can take 2 values:\n  - Violated : 1\n  - Not Violated: 0\n  \n**The 'where' keyword** is **optional** which can be used to filter the data based on labels. Many labels are supported, but some useful ones are:\n- dst_hostname : Filter based on destination host \n- src_hostname : Filter based on source host \n- timestamp : Filter data for desirable timeframes \n- pingmesh_instance : Filter based on Pingmesh Instance\n- latency_violation : Filter based on violated latency events\n- jitter_violation : Filter based on violated jitter events\n- packet_loss_pct_violation : Filter based on violated packet loss events\n \n\n**Default time:** If no timestamp is given then default time window of 5 minutes is used\n\n\n**Optional timeframes can be included with no time offset:**\n- in the last 5 minutes\n- in the last hour\n- in the last day\n- in the last two days",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/S2QLCommands"
                  },
                  {
                    "description": "Allows S2QL queries to be executed via the API.\nUseful for PingMesh metrics/kpis over given timeframes between given hosts and sites.\n\n**Query Construction:**\n- *Signle Value*: \n  - {QUERYABLE} as threshold-violation-matrix where src_hostname={HOSTNAME}, dst_hostname={HOSTNAME}, timestamp >= {Start time UTC value}, timestamp <= {End time UTC value}\n- *Time-series values*\n  - {QUERYABLE} as line-plot where src_hostname={HOSTNAME}, dst_hostname={HOSTNAME}, timestamp >= {Start time UTC value}, timestamp <= {End time UTC value}\n- By default the *Signle Value* is returned if the *as* keyword is not used\n\n**Acceptable {QUERYABLE} for Pingmesh KPI/metrics:**\n- latency\n- jitter\n- packet_loss_pct\n\n**Violations**: Additional filter labels can be used to filter based on violated events only. We can append these to the S2QL\n- where {QUERYABLE}_violation > 0\n- The lable can take 2 values:\n  - Violated : 1\n  - Not Violated: 0\n  \n**The 'where' keyword** is **optional** which can be used to filter the data based on labels. Many labels are supported, but some useful ones are:\n- dst_hostname : Filter based on destination host \n- src_hostname : Filter based on source host \n- timestamp : Filter data for desirable timeframes \n- pingmesh_instance : Filter based on Pingmesh Instance\n- latency_violation : Filter based on violated latency events\n- jitter_violation : Filter based on violated jitter events\n- packet_loss_pct_violation : Filter based on violated packet loss events\n \n\n**Default time:** If no timestamp is given then default time window of 5 minutes is used\n\n\n**Optional timeframes can be included with no time offset:**\n- in the last 5 minutes\n- in the last hour\n- in the last day\n- in the last two days",
                    "example": {
                      "command": "#select packet_loss_pct as threshold-violation-matrix"
                    }
                  }
                ]
              },
              "examples": {
                "packet_loss_pct": {
                  "summary": "Packet Loss % - Get packet loss percentage for default time (last 5 minutes)",
                  "value": {
                    "command": "#select packet_loss_pct as threshold-violation-matrix"
                  }
                },
                "packet_loss_pct_violation": {
                  "summary": "Packet Loss % - Get violated packet loss percentage events",
                  "value": {
                    "command": "#select packet_loss_pct as threshold-violation-matrix where packet_loss_pct_violation > 0"
                  }
                },
                "packet_loss_pct_last_hour": {
                  "summary": "Packet Loss % - Get package loss percentage in last hour",
                  "value": {
                    "command": "#select packet_loss in the last 1 hr"
                  }
                },
                "packet_loss_pct_timeframe": {
                  "summary": "Packet Loss % - Get package loss percentage in a timeframe",
                  "value": {
                    "command": "#select packet_loss where timestamp >= {{start_time}}, timestamp <= {{end_time}}"
                  }
                },
                "packet_loss_pct_inst": {
                  "summary": "Packet Loss % - Displays packet loss percentage for a given Pingmesh instance",
                  "value": {
                    "command": "#select packet_loss_pct where pingmesh_instance= __auto__{{ PATTERN }}"
                  }
                },
                "jitter_from_host": {
                  "summary": "Jitter - jitter from host",
                  "value": {
                    "command": "#select jitter where src_hostname={{hostname}}"
                  }
                },
                "jitter_to_host": {
                  "summary": "Jitter - jitter to host",
                  "value": {
                    "command": "#select jitter where dst_hostname={{hostname}}"
                  }
                },
                "jitter_between_hostnames": {
                  "summary": "Jitter - jitter between hosts",
                  "value": {
                    "command": "#select jitter where src_hostname={{hostname1}}, dst_hostname={{hostname2}}"
                  }
                },
                "jitter_violations_between_hosts_in_timeframe": {
                  "summary": "Jitter - jitter violation between hosts in timeframe",
                  "value": {
                    "command": "#select jitter where src_hostname={{hostname1}}, dst_hostname={{hostname2}}, timestamp >= {{start_time}}, timestamp <= {{end_time}}, jitter_violation > 0"
                  }
                },
                "latency_from_hostname": {
                  "summary": "Latency - latency from host",
                  "value": {
                    "command": "#select latency where src_hostname={{hostname}}"
                  }
                },
                "latency_to_host": {
                  "summary": "Latency - latency to host",
                  "value": {
                    "command": "#select latency where dst_hostname={{hostname}}"
                  }
                },
                "latency_between_hosts": {
                  "summary": "Latency - latency between hosts",
                  "value": {
                    "command": "#select latency where src_hostname={{hostname1}}, dst_hostname={{hostname2}}"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
                "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
    "schemas": {
      "S2QLCommands": {
        "title": "S2QLCommands",
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "description": "Specify the S2QL Query to be used in the API call."
          }
        },
        "description": "schema for query semantics"
      },
      "CommandResponse": {
        "title": "CommandResponse",
        "required": [
          "meta"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/CommandResponseMeta"
          },
          "data": {},
          "rank": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandRank"
            },
            "description": ""
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CommandAnalysis"
              },
              {
                "type": "object"
              }
            ]
          }
        }
      },
      "CommandResponseMeta": {
        "title": "CommandResponseMeta",
        "required": [
          "render",
          "query",
          "s2ml_render",
          "color-map"
        ],
        "type": "object",
        "properties": {
          "render": {
            "type": "string"
          },
          "threshold": {
            "$ref": "#/components/schemas/Threshold"
          },
          "query": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RulesQuery"
              },
              {
                "description": "schema for query semantics"
              }
            ]
          },
          "s2ml_render": {
            "$ref": "#/components/schemas/S2mlRender"
          },
          "color-map": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorMap"
            },
            "description": ""
          },
          "color-map-for-violation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorMap"
            },
            "description": ""
          },
          "hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "CommandRank": {
        "title": "CommandRank",
        "required": [
          "index"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CommandAnalysis": {
        "title": "CommandAnalysis",
        "required": [
          "overview",
          "columns"
        ],
        "type": "object",
        "properties": {
          "overview": {
            "$ref": "#/components/schemas/CommandOverview"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandAnalysisColumn"
            },
            "description": ""
          }
        }
      },
      "CommandAnalysisColumn": {
        "title": "CommandAnalysisColumn",
        "required": [
          "column",
          "analysis"
        ],
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "analysis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandAnalysisColumnAnalysis"
            },
            "description": ""
          }
        }
      },
      "CommandAnalysisColumnAnalysis": {
        "title": "CommandAnalysisColumnAnalysis",
        "required": [
          "type",
          "distribution",
          "top"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "distribution": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandAnalysisColumnAnalysisDistribution"
            },
            "description": ""
          },
          "top": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          }
        }
      },
      "CommandAnalysisColumnAnalysisDistribution": {
        "title": "CommandAnalysisColumnAnalysisDistribution",
        "required": [
          "range",
          "count"
        ],
        "type": "object",
        "properties": {
          "range": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CommandOverview": {
        "title": "CommandOverview",
        "required": [
          "total_observations"
        ],
        "type": "object",
        "properties": {
          "total_observations": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Threshold": {
        "title": "Threshold",
        "required": [
          "baseline",
          "t0",
          "t1"
        ],
        "type": "object",
        "properties": {
          "baseline": {
            "type": "string"
          },
          "t0": {
            "type": "integer",
            "format": "int32"
          },
          "t1": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RulesQuery": {
        "title": "RulesQuery",
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": ""
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": ""
          },
          "filter_set": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "table": {
            "type": "string"
          },
          "render": {
            "type": "string"
          },
          "groupby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "default": []
          },
          "rank": {
            "type": "object"
          },
          "showby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "default": []
          },
          "analyze": {
            "type": "object"
          },
          "s2ql": {
            "type": "string"
          },
          "utc_offset_sec": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "forecast": {
            "type": "boolean",
            "default": false
          },
          "sampling": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "bins": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "description": "schema for query semantics"
      },
      "S2mlRender": {
        "title": "S2mlRender",
        "required": [
          "table_actions",
          "widget_scale",
          "fields"
        ],
        "type": "object",
        "properties": {
          "annotate": {
            "$ref": "#/components/schemas/S2mlRenderAnnotate"
          },
          "color-map": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "columns": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "values": {
            "type": "string"
          },
          "types": {
            "type": "object"
          },
          "render_formatter": {
            "type": "string"
          },
          "row_limit": {
            "type": "integer",
            "format": "int32"
          },
          "table_actions": {
            "type": "object"
          },
          "widget_scale": {
            "$ref": "#/components/schemas/WidgetScale"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "x-axis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/AxisDescriptor"
              }
            ]
          },
          "y-axis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/AxisDescriptor"
              }
            ]
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "nbins": {
            "type": "integer",
            "format": "int32"
          },
          "stack-field": {
            "type": "string"
          }
        }
      },
      "S2mlRenderAnnotate": {
        "title": "S2mlRenderAnnotate",
        "required": [
          "multiplier",
          "values"
        ],
        "type": "object",
        "properties": {
          "multiplier": {
            "type": "integer",
            "format": "int32"
          },
          "units": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        }
      },
      "ColorMap": {
        "title": "ColorMap",
        "required": [
          "code",
          "color",
          "color_light",
          "color_dark",
          "status",
          "legend_name",
          "is_violated"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "color": {
            "type": "string"
          },
          "color_light": {
            "$ref": "#/components/schemas/ColorSpec"
          },
          "color_dark": {
            "$ref": "#/components/schemas/ColorSpec"
          },
          "status": {
            "type": "string"
          },
          "legend_name": {
            "type": "string"
          },
          "is_violated": {
            "type": "boolean"
          }
        }
      },
      "ColorSpec": {
        "title": "ColorSpec",
        "required": [
          "background",
          "text"
        ],
        "type": "object",
        "properties": {
          "background": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "WidgetScale": {
        "title": "WidgetScale",
        "required": [
          "width",
          "height"
        ],
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AxisDescriptor": {
        "title": "AxisDescriptor",
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "multiplier": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "description": ""
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "msg": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Analysis": {
        "title": "Analysis",
        "type": "object",
        "properties": {
          "overview": {
            "$ref": "#/components/schemas/CommandOverview"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandAnalysisColumn"
            },
            "description": ""
          }
        }
      },
      "X-Axis": {
        "title": "X-Axis",
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "multiplier": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Y-Axis": {
        "title": "Y-Axis",
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "multiplier": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  },
  "security": [
    {
      "apikey": []
    }
  ],
  "tags": [
    {
      "name": "S2QL",
      "description": "Selector Software Query Language queries"
    }
  ]
}