{
  "_id": "66d02d8221161b4df2717495",
  "name": "Cisco Meraki",
  "description": "Cisco Meraki Project has assets to Create Nework, Claim network devices and reset",
  "components": [
    {
      "iid": 0,
      "reference": "844e3437-74dc-4bed-a705-1565c0305cb2",
      "type": "workflow",
      "folder": "/Sample Use Cases/Create Network and Claim Devices - Reset",
      "document": {
        "name": "Create Network and Claim Devices - Reset",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -336,
              "y": -96
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -336,
              "y": 252
            }
          },
          "d856": {
            "name": "deleteNetwork",
            "canvasName": "deleteNetwork",
            "summary": "Delete a network",
            "description": "Delete a network",
            "location": "Adapter",
            "locationType": "Meraki",
            "app": "Meraki",
            "type": "automatic",
            "displayName": "Meraki",
            "variables": {
              "incoming": {
                "networkId": "$var.98a5.networkId",
                "adapter_id": "$var.98a5.merakiAdapter"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -336,
              "y": 132
            }
          },
          "98a5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Network and Claim Devices - Reset - Meraki",
            "description": "Create Network and Claim Devices - Reset - Meraki JST",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6568f434881ad4021315ede4",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "networkId": null,
                "merakiAdapter": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -336,
              "y": 24
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "98a5": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "d856": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "98a5": {
            "d856": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "properties": {
                "networkId": {
                  "type": "string",
                  "examples": ["L_123456789123456789"]
                },
                "merakiAdapter": {
                  "type": "string",
                  "examples": ["Meraki"]
                }
              },
              "required": []
            }
          },
          "required": ["formData"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "properties": {
                "networkId": {
                  "type": "string",
                  "examples": ["L_123456789123456789"]
                },
                "merakiAdapter": {
                  "type": "string",
                  "examples": ["Meraki"]
                }
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.21.0",
        "last_updated": "2025-01-24T10:53:01.000Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "d2346dc0-7292-4aca-95b7-f0db9da1d5f7",
      "type": "workflow",
      "folder": "/Sample Use Cases/Create Network and Claim Devices",
      "document": {
        "name": "Create Network and Claim Devices",
        "tasks": {
          "4265": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Network",
            "description": "Create Network Meraki",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d02d8221161b4df2717495: Create Network",
                "variables": {
                  "adapterId": {
                    "task": "81a2",
                    "value": "merakiAdapter"
                  },
                  "networkName": {
                    "task": "81a2",
                    "value": "networkName"
                  },
                  "timeZone": {
                    "task": "81a2",
                    "value": "timeZone"
                  },
                  "tags": {
                    "task": "81a2",
                    "value": "tags"
                  },
                  "productTypes": {
                    "task": "81a2",
                    "value": "productTypes"
                  },
                  "notes": {
                    "task": "81a2",
                    "value": "notes"
                  },
                  "organizationName": {
                    "task": "81a2",
                    "value": "organizationName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": -36
            }
          },
          "4900": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Network ID",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "createNetworkSuccess.response.id",
                "obj": "$var.4265.job_details"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": 72
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": -240
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": 300
            }
          },
          "81a2": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Network and Claim Devices - Meraki JST",
            "description": "Create Network and Claim Devices - Meraki JST",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65429b6faf3bfb0177c888eb",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "tags": null,
                "productTypes": null,
                "serials": null,
                "organizationName": null,
                "networkName": null,
                "timeZone": null,
                "notes": null,
                "merakiAdapter": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": -132
            }
          },
          "b53e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Claim Devices",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d02d8221161b4df2717495: Create Network and Claim Devices",
                "variables": {
                  "formData": {
                    "task": "job",
                    "value": "formData"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": 180
            }
          }
        },
        "transitions": {
          "4265": {
            "4900": {
              "state": "success",
              "type": "standard"
            }
          },
          "4900": {
            "b53e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "81a2": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "81a2": {
            "4265": {
              "state": "success",
              "type": "standard"
            }
          },
          "b53e": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "properties": {
                "productTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": ["appliance"]
                  }
                },
                "serials": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": ["Q3AL-NE8E-R4K6"]
                  }
                },
                "organizationName": {
                  "type": "string",
                  "examples": ["Itential Workshops"]
                },
                "networkName": {
                  "type": "string",
                  "examples": ["test"]
                },
                "timeZone": {
                  "type": "string",
                  "examples": ["America/Chicago"]
                },
                "notes": {
                  "type": "string",
                  "examples": ["my optional note"]
                },
                "merakiAdapter": {
                  "type": "string",
                  "examples": ["Meraki"]
                }
              },
              "required": []
            }
          },
          "required": ["formData"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "properties": {
                "productTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": ["appliance"]
                  }
                },
                "serials": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": ["Q3AL-NE8E-R4K6"]
                  }
                },
                "organizationName": {
                  "type": "string",
                  "examples": ["Itential Workshops"]
                },
                "networkName": {
                  "type": "string",
                  "examples": ["test"]
                },
                "timeZone": {
                  "type": "string",
                  "examples": ["America/Chicago"]
                },
                "notes": {
                  "type": "string",
                  "examples": ["my optional note"]
                },
                "merakiAdapter": {
                  "type": "string",
                  "examples": ["Meraki"]
                }
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T10:53:01.002Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.21.0",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "c620a319-67b7-4caf-86c7-e709f5d42808",
      "type": "workflow",
      "folder": "/",
      "document": {
        "name": "Claim Network Devices",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -624,
              "y": -36
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -624,
              "y": 336
            }
          },
          "180b": {
            "name": "claimNetworkDevices",
            "canvasName": "claimNetworkDevices",
            "summary": "Claim a device into a network",
            "description": "Claim a device into a network",
            "location": "Adapter",
            "locationType": "Meraki",
            "app": "Meraki",
            "type": "automatic",
            "displayName": "Meraki",
            "variables": {
              "incoming": {
                "networkId": "$var.job.networkId",
                "claimNetworkDevices": "$var.b364.object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.claimNetworkDevicesResult"
              },
              "error": "$var.job.claimNetworkDevicesError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -624,
              "y": 204
            }
          },
          "0952": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Error",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Could not claim Meraki Device(s)",
                "message": "",
                "body": "$var.180b.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -936,
              "y": 204
            }
          },
          "b364": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Build Claim Network Devices Payload",
            "description": "Builds claim network devices payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": {},
                "path": ["serials"],
                "value": "$var.job.serials"
              },
              "outgoing": {
                "object": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -624,
              "y": 84
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "b364": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "180b": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "0952": {
              "type": "standard",
              "state": "error"
            }
          },
          "0952": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "180b": {
              "type": "revert",
              "state": "success"
            }
          },
          "b364": {
            "180b": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "networkId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "serials": {
              "title": "value",
              "type": [
                "string",
                "number",
                "integer",
                "object",
                "array",
                "boolean"
              ],
              "examples": [
                {
                  "third": "last"
                }
              ]
            }
          },
          "required": ["networkId", "adapterId", "serials"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "networkId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "serials": {
              "title": "value",
              "type": [
                "string",
                "number",
                "integer",
                "object",
                "array",
                "boolean"
              ],
              "examples": [
                {
                  "third": "last"
                }
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "claimNetworkDevicesResult": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "claimNetworkDevicesError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T10:53:01.001Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.21.0",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "2e95692d-1775-4456-8504-0d5c4b4c9f21",
      "type": "workflow",
      "folder": "/Create Network",
      "document": {
        "name": "Create Network",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -516,
              "y": -444
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -516,
              "y": 12
            }
          },
          "d3a4": {
            "name": "getOrganizations",
            "canvasName": "getOrganizations",
            "summary": "List Organizations",
            "description": "List the organizations that the user has privileges on",
            "location": "Adapter",
            "locationType": "Meraki",
            "app": "Meraki",
            "type": "automatic",
            "displayName": "Meraki",
            "variables": {
              "incoming": {
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -516,
              "y": -336
            }
          },
          "47b4": {
            "name": "createOrganizationNetwork",
            "canvasName": "createOrganizationNetwork",
            "summary": "Create a network",
            "description": "Create a network",
            "location": "Adapter",
            "locationType": "Meraki",
            "app": "Meraki",
            "type": "automatic",
            "displayName": "Meraki",
            "variables": {
              "incoming": {
                "organizationId": "$var.91a0.organizationId",
                "createOrganizationNetwork": "$var.91a0.createNetworkPayload",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createNetworkSuccess"
              },
              "error": "$var.job.createNetworkError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -516,
              "y": -120
            }
          },
          "91a0": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Create Network Payload - Meraki",
            "description": "Builds payload for creating network in Meraki",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "654159c9af3bfb0177c888e9",
                "variableMap": {
                  "networkName": "$var.job.networkName",
                  "timeZone": "$var.job.timeZone",
                  "tags": "$var.job.tags",
                  "productTypes": "$var.job.productTypes",
                  "notes": "$var.job.notes",
                  "listOrganizations": "$var.d3a4.result",
                  "organizationName": "$var.job.organizationName"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "createNetworkPayload": null,
                "organizationId": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -516,
              "y": -228
            }
          },
          "925f": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Error",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Could not create Meraki Network",
                "message": "",
                "body": "$var.47b4.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -852,
              "y": -120
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "d3a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "d3a4": {
            "91a0": {
              "state": "success",
              "type": "standard"
            }
          },
          "47b4": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "925f": {
              "type": "standard",
              "state": "error"
            }
          },
          "91a0": {
            "47b4": {
              "state": "success",
              "type": "standard"
            }
          },
          "925f": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "47b4": {
              "state": "success",
              "type": "revert"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "networkName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "timeZone": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "tags": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "productTypes": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "notes": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "organizationName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "adapterId",
            "networkName",
            "timeZone",
            "tags",
            "productTypes",
            "notes",
            "organizationName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "networkName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "timeZone": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "tags": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "productTypes": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "notes": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "organizationName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createNetworkSuccess": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "createNetworkError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T10:53:01.001Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.21.0",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "67882a479a3b6ff0580cd983",
      "type": "jsonForm",
      "folder": "/Sample Use Cases/Create Network and Claim Devices",
      "document": {
        "id": "67882a479a3b6ff0580cd983",
        "created": "2023-11-01T18:20:06.884Z",
        "createdBy": "admin@itential",
        "lastUpdated": "2025-01-24T10:53:01.003Z",
        "lastUpdatedBy": "admin@itential",
        "name": "Create Network and Claim Devices (1)",
        "description": "",
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "6af16be1-3006-478a-b7c4-f9026c1fbb60",
              "type": "string",
              "title": "Organization Name",
              "description": "The Meraki Organization must be built prior to the Network creation.",
              "placeholder": "Select an Organization",
              "required": true,
              "enum": [],
              "enumNames": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "GET",
              "uniqueItems": false,
              "base": "/meraki",
              "href": "/getOrganizations",
              "sourcePointer": "/response",
              "sourceKeyPointer": "/name",
              "helper": "The Meraki Organization where the Network will be created."
            },
            {
              "nodeId": "b8a219b6-4e2c-4e33-99b8-eee1cef6fc80",
              "type": "string",
              "title": "Network Name",
              "description": "",
              "placeholder": "Enter network name",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "helper": "The name of the new Meraki Network."
            },
            {
              "nodeId": "eb8b127c-a4f1-44a8-a70c-b7b22c891f65",
              "type": "string",
              "widget": "textarea",
              "title": "Network Notes",
              "description": "A note that will be associated to the network.",
              "placeholder": "Enter text",
              "required": true,
              "customKey": "notes",
              "helper": "Add any notes or additional information about this network here."
            },
            {
              "nodeId": "468d3ec0-4e78-4a28-8d77-157389a317f6",
              "type": "string",
              "title": "Timezone",
              "description": "",
              "placeholder": "Select a timezone",
              "required": true,
              "enum": [
                {
                  "id": "e4b06036-75aa-4d49-a59f-e92a863117b2",
                  "label": "America/Chicago",
                  "value": "America/Chicago"
                },
                {
                  "id": "eb9999c2-48e5-412a-86a5-c14805e67456",
                  "label": "America/Denver",
                  "value": "America/Denver"
                },
                {
                  "id": "41ae759b-445e-4c12-b773-a2ed3145cbd1",
                  "label": "America/Los_Angeles",
                  "value": "America/Los_Angeles"
                },
                {
                  "id": "958af5b9-7f77-40c9-828f-da36019df1e7",
                  "label": "America/New_York",
                  "value": "America/New_York"
                }
              ],
              "enumNames": [
                {
                  "id": "e4b06036-75aa-4d49-a59f-e92a863117b2",
                  "label": "Chicago",
                  "value": "Chicago"
                },
                {
                  "id": "eb9999c2-48e5-412a-86a5-c14805e67456",
                  "label": "Denver",
                  "value": "Denver"
                },
                {
                  "id": "41ae759b-445e-4c12-b773-a2ed3145cbd1",
                  "label": "Los Angeles",
                  "value": "Los Angeles"
                },
                {
                  "id": "e743951b-4b30-4847-99f3-04e9872542ec",
                  "label": "New York",
                  "value": "New York"
                }
              ],
              "binding": false,
              "rel": "collection",
              "targetPointer": "/enum",
              "customKey": "timeZone",
              "helper": "Select a timezone for the network."
            },
            {
              "nodeId": "4dc35fb1-a806-4903-8a3f-b2e75685bbce",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "f4260eb8-6cb4-4a0d-a35d-684cc388da08",
                  "type": "string",
                  "title": "Tag",
                  "description": "A tag to be applied to the network.",
                  "placeholder": "Enter tags",
                  "required": false,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default",
                  "helper": "Enter a tag that will be associated to the Meraki Network."
                }
              ],
              "title": "Tags"
            },
            {
              "nodeId": "b6549a1f-4bbc-4cb4-8ea3-936d04da7cbd",
              "type": "string",
              "title": "Product Types",
              "description": "",
              "placeholder": "Choose one or more product types",
              "required": true,
              "enum": [
                {
                  "id": "cbf6be45-dbd1-4d84-b0aa-28fa8ff461b5",
                  "label": "appliance",
                  "value": "appliance"
                },
                {
                  "id": "16753eb2-8e6e-4ae4-b8de-f1dd8d38bc27",
                  "label": "camera",
                  "value": "camera"
                },
                {
                  "id": "a71940e3-6301-4c43-b394-60ebd3f7b3d4",
                  "label": "cellularGateway",
                  "value": "cellularGateway"
                },
                {
                  "id": "802b12f6-c097-4862-b750-5e991fb356d1",
                  "label": "sensor",
                  "value": "sensor"
                },
                {
                  "id": "95bb68e7-4698-41ae-9c0c-b1d199fa5cbb",
                  "label": "switch",
                  "value": "switch"
                },
                {
                  "id": "8d2e6986-46ac-48c5-871f-59b28be8a05e",
                  "label": "systemsManager",
                  "value": "systemsManager"
                },
                {
                  "id": "8a086c62-9077-46f6-a423-ae035a883dd4",
                  "label": "wireless",
                  "value": "wireless"
                }
              ],
              "enumNames": [
                {
                  "id": "cbf6be45-dbd1-4d84-b0aa-28fa8ff461b5",
                  "label": "Appliance",
                  "value": "Appliance"
                },
                {
                  "id": "16753eb2-8e6e-4ae4-b8de-f1dd8d38bc27",
                  "label": "Camera",
                  "value": "Camera"
                },
                {
                  "id": "a71940e3-6301-4c43-b394-60ebd3f7b3d4",
                  "label": "Cellular Gateway",
                  "value": "Cellular Gateway"
                },
                {
                  "id": "802b12f6-c097-4862-b750-5e991fb356d1",
                  "label": "Sensor",
                  "value": "Sensor"
                },
                {
                  "id": "f14501bc-bad2-4043-81d4-d653682856ed",
                  "label": "Switch",
                  "value": "Switch"
                },
                {
                  "id": "8d2e6986-46ac-48c5-871f-59b28be8a05e",
                  "label": "Systems Manager",
                  "value": "Systems Manager"
                },
                {
                  "id": "48894d35-1bd5-4424-8045-f17648a4e865",
                  "label": "Wireless",
                  "value": "Wireless"
                }
              ],
              "binding": false,
              "rel": "collection",
              "targetPointer": "/enum",
              "helper": "The product type(s) of the new network. If more than one type is included, the network will be a combined network.",
              "uniqueItems": true,
              "default": []
            },
            {
              "nodeId": "2e1adca1-959e-47cd-9071-deea7c8884e6",
              "type": "string",
              "title": "Claim Devices",
              "description": "",
              "placeholder": "Select an item",
              "required": true,
              "enum": [],
              "enumNames": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "POST",
              "uniqueItems": true,
              "base": "/Meraki",
              "href": "/getOrganizationInventory",
              "body": {
                "id": "00000000000000"
              },
              "sourcePointer": "/response",
              "sourceKeyPointer": "/serial",
              "labelKeyPointer": "",
              "minItems": 1,
              "customKey": "serials",
              "helper": "Select a devices to be claimed in the Meraki network."
            },
            {
              "nodeId": "93f0e1a4-654c-474b-b97b-e7030ab8fd91",
              "type": "string",
              "title": "Meraki Adapter",
              "description": "",
              "placeholder": "Select a Meraki adapter",
              "required": true,
              "enum": [],
              "enumNames": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "GET",
              "uniqueItems": false,
              "base": "/adapters",
              "originalHref": "/:name",
              "href": "/?",
              "sourcePointer": "/results",
              "sourceKeyPointer": "/data/name",
              "helper": "Select an adapter to use to connect to Cisco Meraki",
              "customKey": "merakiAdapter"
            }
          ]
        },
        "schema": {
          "title": "Create Network and Claim Devices",
          "description": "",
          "type": "object",
          "required": [
            "organizationName",
            "networkName",
            "notes",
            "timeZone",
            "productTypes",
            "serials",
            "merakiAdapter"
          ],
          "properties": {
            "organizationName": {
              "type": "string",
              "title": "Organization Name",
              "_id": "/properties/organizationName",
              "description": "The Meraki Organization must be built prior to the Network creation.",
              "enum": [],
              "enumNames": []
            },
            "networkName": {
              "type": "string",
              "title": "Network Name",
              "_id": "/properties/networkName",
              "description": ""
            },
            "notes": {
              "type": "string",
              "title": "Network Notes",
              "_id": "/properties/notes",
              "description": "A note that will be associated to the network."
            },
            "timeZone": {
              "type": "string",
              "title": "Timezone",
              "_id": "/properties/timeZone",
              "description": "",
              "enum": [
                "America/Chicago",
                "America/Denver",
                "America/Los_Angeles",
                "America/New_York"
              ],
              "enumNames": ["Chicago", "Denver", "Los Angeles", "New York"]
            },
            "tags": {
              "type": "array",
              "title": "Tags",
              "description": "",
              "items": {
                "type": "object",
                "required": [],
                "properties": {
                  "tag": {
                    "type": "string",
                    "title": "Tag",
                    "_id": "/properties/tags/items/properties/tag",
                    "description": "A tag to be applied to the network."
                  }
                }
              }
            },
            "productTypes": {
              "type": "array",
              "title": "Product Types",
              "_id": "/properties/productTypes",
              "uniqueItems": true,
              "description": "",
              "default": [],
              "items": {
                "type": "string",
                "enum": [
                  "appliance",
                  "camera",
                  "cellularGateway",
                  "sensor",
                  "switch",
                  "systemsManager",
                  "wireless"
                ],
                "enumNames": [
                  "Appliance",
                  "Camera",
                  "Cellular Gateway",
                  "Sensor",
                  "Switch",
                  "Systems Manager",
                  "Wireless"
                ]
              }
            },
            "serials": {
              "type": "array",
              "title": "Claim Devices",
              "_id": "/properties/serials",
              "uniqueItems": true,
              "description": "",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [],
                "enumNames": []
              }
            },
            "merakiAdapter": {
              "type": "string",
              "title": "Meraki Adapter",
              "_id": "/properties/merakiAdapter",
              "description": "",
              "enum": [],
              "enumNames": []
            }
          }
        },
        "uiSchema": {
          "organizationName": {
            "ui:placeholder": "Select an Organization",
            "ui:help": "The Meraki Organization where the Network will be created."
          },
          "networkName": {
            "ui:placeholder": "Enter network name",
            "ui:help": "The name of the new Meraki Network."
          },
          "notes": {
            "ui:placeholder": "Enter text",
            "ui:help": "Add any notes or additional information about this network here.",
            "ui:widget": "textarea"
          },
          "timeZone": {
            "ui:placeholder": "Select a timezone",
            "ui:help": "Select a timezone for the network."
          },
          "tags": {
            "items": {
              "tag": {
                "ui:placeholder": "Enter tags",
                "ui:help": "Enter a tag that will be associated to the Meraki Network."
              }
            }
          },
          "productTypes": {
            "ui:placeholder": "Choose one or more product types",
            "ui:optionLabel": "label",
            "ui:help": "The product type(s) of the new network. If more than one type is included, the network will be a combined network."
          },
          "serials": {
            "ui:placeholder": "Select an item",
            "ui:optionLabel": "label",
            "ui:help": "Select a devices to be claimed in the Meraki network."
          },
          "merakiAdapter": {
            "ui:placeholder": "Select a Meraki adapter",
            "ui:help": "Select an adapter to use to connect to Cisco Meraki"
          }
        },
        "bindingSchema": {
          "properties": {
            "organizationName": {
              "binding:method": "GET",
              "binding:link": {
                "$ref": "/links",
                "rel": "collection"
              },
              "binding:target": {
                "propertyPointer": "/enum"
              },
              "binding:hyperSchema": {
                "type": "object",
                "base": "/meraki",
                "links": [
                  {
                    "rel": "collection",
                    "href": "/getOrganizations",
                    "targetMediaType": "application/json",
                    "targetSchema": {
                      "$ref": "#"
                    },
                    "variables": []
                  }
                ]
              },
              "binding:source": {
                "propertyPointer": "/response",
                "keyPointer": "/name"
              }
            },
            "tags": {
              "items": {
                "properties": {}
              }
            },
            "serials": {
              "binding:method": "POST",
              "binding:link": {
                "$ref": "/links",
                "rel": "collection"
              },
              "binding:body": {
                "id": "00000000000000"
              },
              "binding:target": {
                "propertyPointer": "/items/enum"
              },
              "binding:hyperSchema": {
                "type": "object",
                "base": "/Meraki",
                "links": [
                  {
                    "rel": "collection",
                    "href": "/getOrganizationInventory",
                    "targetMediaType": "application/json",
                    "targetSchema": {
                      "$ref": "#"
                    },
                    "variables": []
                  }
                ]
              },
              "binding:source": {
                "propertyPointer": "/response",
                "keyPointer": "/serial"
              }
            },
            "merakiAdapter": {
              "binding:method": "GET",
              "binding:link": {
                "$ref": "/links",
                "rel": "collection"
              },
              "binding:target": {
                "propertyPointer": "/enum"
              },
              "binding:hyperSchema": {
                "type": "object",
                "base": "/adapters",
                "links": [
                  {
                    "rel": "collection",
                    "href": "/?",
                    "targetMediaType": "application/json",
                    "targetSchema": {
                      "$ref": "#"
                    },
                    "variables": []
                  }
                ]
              },
              "binding:source": {
                "propertyPointer": "/results",
                "keyPointer": "/data/name"
              }
            }
          }
        },
        "validationSchema": {
          "tags": {}
        },
        "version": "2020.1"
      }
    },
    {
      "iid": 5,
      "reference": "67882a479a3b6ff0580cd984",
      "type": "jsonForm",
      "folder": "/Sample Use Cases/Create Network and Claim Devices - Reset",
      "document": {
        "id": "67882a479a3b6ff0580cd984",
        "created": "2023-11-01T21:09:42.432Z",
        "createdBy": "admin@itential",
        "lastUpdated": "2025-01-24T10:53:01.006Z",
        "lastUpdatedBy": "admin@itential",
        "name": "Create Network and Claim Devices - Reset (1)",
        "description": "",
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "79317ec6-e2c8-4106-a2f0-fea5be9b6b25",
              "type": "string",
              "title": "Network Name",
              "description": "",
              "placeholder": "Select an item",
              "required": true,
              "enum": [],
              "enumNames": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "POST",
              "uniqueItems": false,
              "base": "/Meraki",
              "href": "/getOrganizationNetworks",
              "body": {
                "organizationId": "00000000000000",
                "configTemplateId": ""
              },
              "sourcePointer": "/response",
              "sourceKeyPointer": "/id",
              "labelKeyPointer": "/name",
              "customKey": "networkId",
              "helper": "Select a Meraki Network that will be deleted. Any claimed devices will be released."
            },
            {
              "nodeId": "263dc876-211c-4c2b-8ece-901834550cad",
              "type": "string",
              "title": "Meraki Adapter",
              "description": "",
              "placeholder": "Select a Meraki adapter",
              "required": true,
              "enum": [],
              "enumNames": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "customKey": "merakiAdapter",
              "helper": "Select an adapter to connect to Cisco Meraki",
              "method": "GET",
              "uniqueItems": false,
              "base": "/adapters",
              "originalHref": "/:name",
              "href": "/?",
              "sourcePointer": "/results",
              "sourceKeyPointer": "/data/name"
            }
          ]
        },
        "schema": {
          "title": "Create Network and Claim Devices - Reset",
          "description": "",
          "type": "object",
          "required": ["networkId", "merakiAdapter"],
          "properties": {
            "networkId": {
              "type": "string",
              "title": "Network Name",
              "_id": "/properties/networkId",
              "description": "",
              "enum": [],
              "enumNames": []
            },
            "merakiAdapter": {
              "type": "string",
              "title": "Meraki Adapter",
              "_id": "/properties/merakiAdapter",
              "description": "",
              "enum": [],
              "enumNames": []
            }
          }
        },
        "uiSchema": {
          "networkId": {
            "ui:placeholder": "Select an item",
            "ui:help": "Select a Meraki Network that will be deleted. Any claimed devices will be released."
          },
          "merakiAdapter": {
            "ui:placeholder": "Select a Meraki adapter",
            "ui:help": "Select an adapter to connect to Cisco Meraki"
          }
        },
        "bindingSchema": {
          "properties": {
            "networkId": [
              {
                "binding:method": "POST",
                "binding:link": {
                  "$ref": "/links",
                  "rel": "collection"
                },
                "binding:body": {
                  "organizationId": "00000000000000",
                  "configTemplateId": ""
                },
                "binding:target": {
                  "propertyPointer": "/enum"
                },
                "binding:hyperSchema": {
                  "type": "object",
                  "base": "/Meraki",
                  "links": [
                    {
                      "rel": "collection",
                      "href": "/getOrganizationNetworks",
                      "targetMediaType": "application/json",
                      "targetSchema": {
                        "$ref": "#"
                      },
                      "variables": []
                    }
                  ]
                },
                "binding:source": {
                  "propertyPointer": "/response",
                  "keyPointer": "/id"
                }
              },
              {
                "binding:method": "POST",
                "binding:link": {
                  "$ref": "/links",
                  "rel": "collection"
                },
                "binding:body": {
                  "organizationId": "00000000000000",
                  "configTemplateId": ""
                },
                "binding:target": {
                  "propertyPointer": "/enumNames"
                },
                "binding:hyperSchema": {
                  "type": "object",
                  "base": "/Meraki",
                  "links": [
                    {
                      "rel": "collection",
                      "href": "/getOrganizationNetworks",
                      "targetMediaType": "application/json",
                      "targetSchema": {
                        "$ref": "#"
                      },
                      "variables": []
                    }
                  ]
                },
                "binding:source": {
                  "propertyPointer": "/response",
                  "keyPointer": "/name"
                }
              }
            ],
            "merakiAdapter": {
              "binding:method": "GET",
              "binding:link": {
                "$ref": "/links",
                "rel": "collection"
              },
              "binding:target": {
                "propertyPointer": "/enum"
              },
              "binding:hyperSchema": {
                "type": "object",
                "base": "/adapters",
                "links": [
                  {
                    "rel": "collection",
                    "href": "/?",
                    "targetMediaType": "application/json",
                    "targetSchema": {
                      "$ref": "#"
                    },
                    "variables": []
                  }
                ]
              },
              "binding:source": {
                "propertyPointer": "/results",
                "keyPointer": "/data/name"
              }
            }
          }
        },
        "validationSchema": {},
        "version": "2020.1"
      }
    },
    {
      "iid": 6,
      "reference": "67882a46b320bf2f072b34ed",
      "type": "transformation",
      "folder": "/Sample Use Cases/Create Network and Claim Devices",
      "document": {
        "_id": "67882a46b320bf2f072b34ed",
        "name": "Create Network and Claim Devices (1)",
        "description": "",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "productTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["appliance"]
                }
              },
              "serials": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["Q3AL-NE8E-R4K6"]
                }
              },
              "organizationName": {
                "type": "string",
                "examples": ["Itential Workshops"]
              },
              "networkName": {
                "type": "string",
                "examples": ["test"]
              },
              "timeZone": {
                "type": "string",
                "examples": ["America/Chicago"]
              },
              "notes": {
                "type": "string",
                "examples": ["my optional note"]
              },
              "merakiAdapter": {
                "type": "string",
                "examples": ["Meraki"]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "tags",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["tag1"]
            }
          },
          {
            "$id": "productTypes",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["switch"]
            }
          },
          {
            "$id": "serials",
            "type": "array"
          },
          {
            "$id": "organizationName",
            "type": "string",
            "examples": ["Itential PreSales"]
          },
          {
            "$id": "networkName",
            "type": "string",
            "examples": ["Test"]
          },
          {
            "$id": "timeZone",
            "type": "string",
            "examples": ["America/Chicago"]
          },
          {
            "$id": "notes",
            "type": "string",
            "examples": ["my optional note"]
          },
          {
            "$id": "merakiAdapter",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/networkName"
            },
            "to": {
              "location": "outgoing",
              "name": "networkName",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/timeZone"
            },
            "to": {
              "location": "outgoing",
              "name": "timeZone",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/organizationName"
            },
            "to": {
              "location": "outgoing",
              "name": "organizationName",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/serials"
            },
            "to": {
              "location": "outgoing",
              "name": "serials",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/merakiAdapter"
            },
            "to": {
              "location": "outgoing",
              "name": "merakiAdapter",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/productTypes"
            },
            "to": {
              "location": "outgoing",
              "name": "productTypes",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/notes"
            },
            "to": {
              "location": "outgoing",
              "name": "notes",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 27,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 27,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [null, "tags"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 27,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "method",
            "library": "Logical",
            "method": "nullish",
            "args": [null, []],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 24,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 19,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "extractTag"],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 19,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "tags",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "tag"],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "extractTag",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "extractTag",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-15T21:36:06.842Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:53:01.006Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 7,
      "reference": "67882a46b320bf2f072b34ee",
      "type": "transformation",
      "folder": "/Sample Use Cases/Create Network and Claim Devices - Reset",
      "document": {
        "_id": "67882a46b320bf2f072b34ee",
        "name": "Create Network and Claim Devices - Reset (1)",
        "description": "",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "networkId": {
                "type": "string",
                "examples": ["L_123456789123456789"]
              },
              "merakiAdapter": {
                "type": "string",
                "examples": ["Meraki"]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "networkId",
            "type": "string"
          },
          {
            "$id": "merakiAdapter",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/networkId"
            },
            "to": {
              "location": "outgoing",
              "name": "networkId",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/merakiAdapter"
            },
            "to": {
              "location": "outgoing",
              "name": "merakiAdapter",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T21:36:06.845Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:53:01.007Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 8,
      "reference": "67882a46b320bf2f072b34ef",
      "type": "transformation",
      "folder": "/Create Network",
      "document": {
        "_id": "67882a46b320bf2f072b34ef",
        "name": "Build Create Network Payload (1)",
        "description": "",
        "incoming": [
          {
            "$id": "networkName",
            "type": "string",
            "examples": ["Network Name"]
          },
          {
            "$id": "timeZone",
            "type": "string",
            "examples": ["America/New_York"]
          },
          {
            "$id": "tags",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["tag1"]
            }
          },
          {
            "$id": "productTypes",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["appliance"]
            }
          },
          {
            "$id": "notes",
            "type": "string",
            "examples": ["my optional note"]
          },
          {
            "$id": "listOrganizations",
            "type": "object",
            "properties": {
              "response": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": ["1076949"]
                    },
                    "name": {
                      "type": "string",
                      "examples": ["Itential PreSales"]
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          },
          {
            "$id": "organizationName",
            "type": "string",
            "examples": ["Itential PreSales"]
          }
        ],
        "outgoing": [
          {
            "$id": "createNetworkPayload",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": ["Dev Test 1"]
              },
              "timeZone": {
                "type": "string",
                "examples": ["America/New_York"]
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["test2"]
                }
              },
              "productTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["appliance"]
                }
              },
              "notes": {
                "type": "string",
                "examples": ["my optional note"]
              }
            },
            "required": []
          },
          {
            "$id": "organizationId",
            "type": "string",
            "examples": ["123456"]
          }
        ],
        "steps": [
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "networkName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "createNetworkPayload",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "timeZone",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "createNetworkPayload",
              "ptr": "/timeZone"
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "tags",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "createNetworkPayload",
              "ptr": "/tags"
            },
            "context": "#"
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "productTypes",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "createNetworkPayload",
              "ptr": "/productTypes"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "listOrganizations",
              "ptr": "/response"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "organizationName",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "method",
            "library": "Array",
            "method": "find",
            "args": [null, "findOrganization", null],
            "view": {
              "row": 4,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 20,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [null, "id"],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "organizationId",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "notes",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "createNetworkPayload",
              "ptr": "/notes"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": ["1076949"]
                  },
                  "name": {
                    "type": "string",
                    "examples": ["Itential PreSales"]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": ["1076949"]
                    },
                    "name": {
                      "type": "string",
                      "examples": ["Itential PreSales"]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "string",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "findOrganization",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "findOrganization",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T21:36:06.855Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:53:01.006Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Create Network",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        }
      ]
    },
    {
      "iid": 2,
      "nodeType": "component"
    },
    {
      "nodeType": "folder",
      "name": "Sample Use Cases",
      "children": [
        {
          "nodeType": "folder",
          "name": "Create Network and Claim Devices",
          "children": [
            {
              "iid": 4,
              "nodeType": "component"
            },
            {
              "iid": 1,
              "nodeType": "component"
            },
            {
              "iid": 6,
              "nodeType": "component"
            }
          ]
        },
        {
          "nodeType": "folder",
          "name": "Create Network and Claim Devices - Reset",
          "children": [
            {
              "iid": 5,
              "nodeType": "component"
            },
            {
              "iid": 0,
              "nodeType": "component"
            },
            {
              "iid": 7,
              "nodeType": "component"
            }
          ]
        }
      ]
    }
  ],
  "created": "2024-08-29T08:12:50.933Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T10:53:00.990Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 44,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
