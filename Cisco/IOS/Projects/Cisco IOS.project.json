{
  "_id": "66d0304521161b4df2717497",
  "name": "Cisco IOS",
  "description": "Cisco IOS project includes assets for Software upgrade, Port Turn Up, Command Template Runner, and Push Configuration",
  "components": [
    {
      "iid": 0,
      "reference": "fbe10a65-5f31-43e5-b8a7-c64aff90dcae",
      "type": "workflow",
      "folder": "/Command Template Runner",
      "document": {
        "name": "Command Template Runner",
        "tasks": {
          "525": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1080,
              "y": 372
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 528,
              "y": -12
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 480,
              "y": 816
            }
          },
          "8ce4": {
            "name": "RunCommandTemplate",
            "canvasName": "RunCommandTemplate",
            "summary": "Run a Command Template against a device",
            "description": "Run a Command Template against a device",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "template": "$var.job.templateName",
                "variables": "$var.job.templateVariables",
                "devices": "$var.927c.pushedArray"
              },
              "outgoing": {
                "mop_template_results": "$var.job.templateResults"
              },
              "error": "$var.job.templateError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 528,
              "y": 204
            }
          },
          "81d8": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 816,
              "y": 744
            }
          },
          "f1a7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Template Error",
            "description": "Show the template failure message and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Template Errored",
                "message": "$var.a7f3.errorMessage",
                "body": "$var.8ce4.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Continue"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -132,
              "y": 816
            }
          },
          "543a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Errored and If Reattempting",
            "description": "Check if template errored and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 168,
              "y": 216
            }
          },
          "849c": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Reattempt Template",
            "description": "Reattempt the template after waiting the specified number of minutes",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "connection",
                "minutes": "$var.job.reattemptWaitTime",
                "attempts": "$var.job.reattemptQuantity"
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 168,
              "y": 372
            }
          },
          "f884": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Reattempting",
            "description": "Check if template failed and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 444,
              "y": 444
            }
          },
          "b1a0": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 660,
              "y": 336
            }
          },
          "927c": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Build Device Array",
            "description": "Put the device name into an array as required by the \"RunCommandTemplate\" task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.job.deviceName"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 528,
              "y": 96
            }
          },
          "fe84": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 828,
              "y": 468
            }
          },
          "6bd2": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Not Reattempting",
            "description": "Check if template failed and if not reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 840,
              "y": 216
            }
          },
          "9c18": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -156,
              "y": 216
            }
          },
          "955f": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 168,
              "y": 516
            }
          },
          "f36c": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 492,
              "y": 648
            }
          },
          "a7f3": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Command Template Runner Error Message",
            "description": "Create Command Template Runner error message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6553e5b9fb4afe017442d30c",
                "variableMap": {
                  "templateName": "$var.job.templateName"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "errorMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -132,
              "y": 648
            }
          },
          "580e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Template Errored",
            "description": "Check if template errored",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "8ce4",
                          "variable": "error"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 168,
              "y": 648
            }
          }
        },
        "transitions": {
          "525": {
            "81d8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "927c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "8ce4": {
            "525": {
              "type": "standard",
              "state": "success"
            },
            "543a": {
              "type": "standard",
              "state": "error"
            },
            "f884": {
              "type": "standard",
              "state": "success"
            },
            "b1a0": {
              "type": "standard",
              "state": "success"
            },
            "6bd2": {
              "type": "standard",
              "state": "success"
            }
          },
          "81d8": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f1a7": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "8ce4": {
              "type": "revert",
              "state": "success"
            }
          },
          "543a": {
            "849c": {
              "type": "standard",
              "state": "success"
            },
            "9c18": {
              "type": "standard",
              "state": "failure"
            }
          },
          "849c": {
            "8ce4": {
              "type": "revert",
              "state": "success"
            },
            "955f": {
              "state": "error",
              "type": "standard"
            }
          },
          "f884": {
            "849c": {
              "type": "standard",
              "state": "success"
            }
          },
          "b1a0": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "927c": {
            "8ce4": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe84": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "81d8": {
              "type": "standard",
              "state": "failure"
            }
          },
          "6bd2": {
            "fe84": {
              "state": "success",
              "type": "standard"
            }
          },
          "9c18": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "a7f3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "955f": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "580e": {
              "state": "failure",
              "type": "standard"
            }
          },
          "f36c": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "a7f3": {
            "f1a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "580e": {
            "f36c": {
              "state": "failure",
              "type": "standard"
            },
            "a7f3": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": ["test"]
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "deviceName": {
              "type": [
                "array",
                "string",
                "boolean",
                "integer",
                "number",
                "object"
              ],
              "title": "elementN",
              "examples": ["Device3"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "suppressSuccessMessage",
            "templateName",
            "templateVariables",
            "reattempt",
            "_id",
            "reattemptWaitTime",
            "reattemptQuantity",
            "deviceName",
            "suppressFailureMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "deviceName": {
              "type": [
                "array",
                "string",
                "boolean",
                "integer",
                "number",
                "object"
              ],
              "title": "elementN",
              "examples": ["Device3"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "initiator": {
              "type": "string"
            },
            "templateResults": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "all_pass_flag": {
                  "type": "boolean"
                },
                "evaluated": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "parameters": {
                  "type": "object",
                  "properties": {}
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rule": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "eval": {
                        "type": "string",
                        "examples": ["contains"]
                      },
                      "raw": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "result": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "device": {
                  "type": "string",
                  "examples": ["device1"]
                },
                "response": {
                  "type": "string",
                  "examples": ["version: 10.0.0"]
                },
                "result": {
                  "type": "boolean"
                }
              }
            },
            "templateError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.30.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated": "2025-01-24T10:47:51.536Z",
        "created": "2023-11-15T15:14:12.334Z",
        "canvasVersion": 3,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "c084d914-dca1-41c2-b1ff-a5febe2c1e15",
      "type": "workflow",
      "folder": "/Software Upgrade",
      "document": {
        "name": "Software Upgrade",
        "description": "Perform software upgrade of Cisco IOS device over IAG",
        "tasks": {
          "2113": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Verify After Reload",
            "description": "Verify device after reload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "Show Version"
                  },
                  "templateVariables": {
                    "editable": true,
                    "task": "dbdf",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": true
                  },
                  "reattemptWaitTime": {
                    "editable": true,
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "editable": true,
                    "task": "static",
                    "value": 20
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -900,
              "y": 1092
            }
          },
          "2457": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Pre-Checks",
            "description": "Run pre-checks",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Software Upgrade Checks"
                  },
                  "templateVariables": {
                    "editable": true,
                    "task": "dbdf",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "reattemptQuantity": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -900,
              "y": 756
            }
          },
          "4644": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Set Boot Marker",
            "description": "Set boot marker on device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Push Configuration to Device",
                "variables": {
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Set Boot Marker"
                  },
                  "templateVariables": {
                    "task": "dbdf",
                    "value": "variables"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "device": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -900,
              "y": 864
            }
          },
          "5380": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Reload",
            "description": "Run reload of device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Reload"
                  },
                  "templateVariables": {
                    "editable": true,
                    "task": "dbdf",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 0
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 0
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -900,
              "y": 972
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -900,
              "y": 432
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -900,
              "y": 1548
            }
          },
          "d597": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "File Verification",
            "description": "Run file verification",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: File Verification"
                  },
                  "templateVariables": {
                    "editable": true,
                    "task": "dbdf",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "reattemptQuantity": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -900,
              "y": 648
            }
          },
          "94f6": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Post-Checks",
            "description": "Run post-checks",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Software Upgrade Checks"
                  },
                  "templateVariables": {
                    "editable": true,
                    "task": "dbdf",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "reattemptQuantity": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -900,
              "y": 1200
            }
          },
          "ee0b": {
            "name": "runTemplatesDiff",
            "canvasName": "runTemplatesDiff",
            "summary": "Pre Post Compare",
            "description": "MOP Diff Config",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "pre": "$var.f4e7.return_data",
                "post": "$var.e96c.return_data"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/mop/task/runTemplatesDiff",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1224,
              "y": 1416
            }
          },
          "f4e7": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check",
            "description": "Query pre-check result",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.2457.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -744,
              "y": 1308
            }
          },
          "e96c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Post-Check",
            "description": "Query post-check result",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.94f6.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1032,
              "y": 1308
            }
          },
          "d78b": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Success Message",
            "description": "Check if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -900,
              "y": 1416
            }
          },
          "dbdf": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Software Upgrade - IOS",
            "description": "Software Upgrade - IOS",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "629f830ce1a5fe015b2d2f28",
                "variableMap": {
                  "version": "$var.job.version",
                  "flashMemory": "$var.job.flashMemory"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "variables": null
              }
            },
            "groups": [],
            "task_name": "Software Upgrade - IOS",
            "retrySettings": null,
            "nodeLocation": {
              "x": -900,
              "y": 540
            }
          }
        },
        "transitions": {
          "2113": {
            "94f6": {
              "type": "standard",
              "state": "success"
            }
          },
          "2457": {
            "4644": {
              "type": "standard",
              "state": "success"
            }
          },
          "4644": {
            "5380": {
              "type": "standard",
              "state": "success"
            }
          },
          "5380": {
            "2113": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "dbdf": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "d597": {
            "2457": {
              "type": "standard",
              "state": "success"
            }
          },
          "94f6": {
            "f4e7": {
              "type": "standard",
              "state": "success"
            },
            "e96c": {
              "type": "standard",
              "state": "success"
            }
          },
          "ee0b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f4e7": {
            "d78b": {
              "type": "standard",
              "state": "success"
            }
          },
          "e96c": {
            "d78b": {
              "type": "standard",
              "state": "success"
            }
          },
          "d78b": {
            "ee0b": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "dbdf": {
            "d597": {
              "type": "standard",
              "state": "success"
            }
          },
          "eb55": {},
          "f92": {},
          "90d3": {},
          "5fa1": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": "string",
              "examples": ["device"]
            },
            "version": {
              "type": "string",
              "examples": ["14%2E4"]
            },
            "flashMemory": {
              "type": "string",
              "examples": ["flash:"]
            }
          },
          "required": [
            "suppressFailureMessage",
            "suppressSuccessMessage",
            "deviceName",
            "version",
            "flashMemory"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": "string",
              "examples": ["device"]
            },
            "version": {
              "type": "string",
              "examples": ["14%2E4"]
            },
            "flashMemory": {
              "type": "string",
              "examples": ["flash:"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:47:51.537Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "b67e5bb0-2daa-4d24-b092-8fde9250c571",
      "type": "workflow",
      "folder": "/Push Configuration",
      "document": {
        "name": "Push Configuration to Device",
        "tasks": {
          "9722": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -1416,
              "y": 780
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1092,
              "y": 72
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1104,
              "y": 1188
            }
          },
          "ca47": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "Ansible Role itential_cli",
            "description": "Ansible Role itential_cli",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.582e.deviceList",
                "_groups": "",
                "command": "$var.582e.configurationList"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1104,
              "y": 768
            }
          },
          "b9ed": {
            "name": "renderJinjaTemplate",
            "canvasName": "renderJinjaTemplate",
            "summary": "Renders Device Configuration",
            "description": "Renders device configuration to push",
            "location": "Application",
            "locationType": null,
            "app": "TemplateBuilder",
            "type": "automatic",
            "displayName": "TemplateBuilder",
            "variables": {
              "incoming": {
                "name": "$var.job.templateName",
                "context": "$var.job.templateVariables"
              },
              "outgoing": {
                "renderedTemplate": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1092,
              "y": 372
            }
          },
          "7a4c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Error",
            "description": "Show configuration error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Configuration Error",
                "message": "$var.582e.deviceConfigurationPushFailedMessage",
                "body": "$var.ca47.stdout",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1416,
              "y": 936
            }
          },
          "f14d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Provision Succeeded",
            "description": "Check if provisioning configuration to device succeeded",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "ca47",
                          "variable": "stdout"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": []
                        },
                        "operator": "!=",
                        "query": "completed",
                        "rightQuery": ""
                      },
                      {
                        "query": "completed[0].response[*].status",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "ca47"
                        },
                        "operator": "!contains",
                        "operand_2": {
                          "variable": "FAILURE",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -1104,
              "y": 924
            }
          },
          "cba5": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Configuration",
            "description": "Show the proposed configuration and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Configuration",
                "message": "$var.582e.deviceConfigurationPushMessage",
                "body": "$var.582e.renderedTemplate",
                "variables": {},
                "btn_success": "Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -768,
              "y": 684
            }
          },
          "c4c9": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Success Message",
            "description": "Check if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -1104,
              "y": 648
            }
          },
          "da74": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -1404,
              "y": 372
            }
          },
          "9a05": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Jinja Template Error",
            "description": "Show configuration error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Jinja Template Error",
                "message": "The Jinja template had an error, retry or abort?",
                "body": "$var.b9ed.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1404,
              "y": 504
            }
          },
          "61a7": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1740,
              "y": 504
            }
          },
          "98a4": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1740,
              "y": 768
            }
          },
          "582e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Push Configuration Data",
            "description": "Process push configuration data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65566996fb4afe017442d30d",
                "variableMap": {
                  "renderedJinja2Template": "$var.b9ed.renderedTemplate",
                  "deviceName": "$var.job.device"
                },
                "options": ""
              },
              "outgoing": {
                "renderedTemplate": "$var.job.configurationToPush",
                "configurationList": null,
                "deviceList": null,
                "deviceConfigurationPushMessage": null,
                "deviceConfigurationPushFailedMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1104,
              "y": 540
            }
          },
          "ef0a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "SUCCESS"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1104,
              "y": 1056
            }
          },
          "f0d6": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Initialize Result of Push Configuration",
            "description": "Initialize result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "IN PROGRESS"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1092,
              "y": 216
            }
          },
          "3a05": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "FAILED"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1740,
              "y": 984
            }
          },
          "08e4": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "FAILED"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -768,
              "y": 816
            }
          }
        },
        "transitions": {
          "9722": {
            "7a4c": {
              "type": "standard",
              "state": "failure"
            },
            "98a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "f0d6": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "ca47": {
            "9722": {
              "type": "standard",
              "state": "error"
            },
            "f14d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b9ed": {
            "da74": {
              "type": "standard",
              "state": "error"
            },
            "582e": {
              "state": "success",
              "type": "standard"
            }
          },
          "7a4c": {
            "b9ed": {
              "type": "revert",
              "state": "success"
            },
            "98a4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f14d": {
            "9722": {
              "type": "standard",
              "state": "failure"
            },
            "ef0a": {
              "state": "success",
              "type": "standard"
            }
          },
          "cba5": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "08e4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c4c9": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "cba5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "da74": {
            "9a05": {
              "type": "standard",
              "state": "failure"
            },
            "61a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "9a05": {
            "b9ed": {
              "state": "success",
              "type": "revert"
            },
            "61a7": {
              "type": "standard",
              "state": "failure"
            }
          },
          "61a7": {
            "98a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "98a4": {
            "3a05": {
              "state": "success",
              "type": "standard"
            }
          },
          "582e": {
            "c4c9": {
              "state": "success",
              "type": "standard"
            }
          },
          "ef0a": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f0d6": {
            "b9ed": {
              "state": "success",
              "type": "standard"
            }
          },
          "3a05": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "08e4": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "ed0d": {},
          "7a2f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": "string",
              "examples": ["device"]
            }
          },
          "required": [
            "suppressFailureMessage",
            "templateName",
            "templateVariables",
            "suppressSuccessMessage",
            "device"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": "string",
              "examples": ["device"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "configurationToPush": {
              "$id": "renderedTemplate",
              "type": "string",
              "examples": ["test"]
            },
            "pushConfigurationResult": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:47:51.537Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "71a8188a-aa9e-4f4e-af89-470c4fd9f2cd",
      "type": "workflow",
      "folder": "/Port Turn Up",
      "document": {
        "name": "Port Turn Up",
        "tasks": {
          "8878": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Post-Checks",
            "description": "Run the IOS - Port Turn Up - Post-Checks command template against the device specified",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Post-Checks"
                  },
                  "templateVariables": {
                    "task": "cd3a",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "reattemptQuantity": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 2484,
              "y": 864
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 2484,
              "y": 276
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 2508,
              "y": 1296
            }
          },
          "936e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Configure Port",
            "description": "Render and apply the config to turn up the specified port",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Push Configuration to Device",
                "variables": {
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Port Turn Up"
                  },
                  "templateVariables": {
                    "task": "cd3a",
                    "value": "variables"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "device": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 2484,
              "y": 744
            }
          },
          "42d2": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Pre-Checks",
            "description": "Run the IOS - Port Turn Up - Pre-Checks command template against the device specified",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0304521161b4df2717497: Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "static",
                    "value": "@66d0304521161b4df2717497: Pre-Checks"
                  },
                  "templateVariables": {
                    "editable": true,
                    "task": "cd3a",
                    "value": "variables"
                  },
                  "reattempt": {
                    "editable": true,
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "reattemptQuantity": {
                    "editable": true,
                    "task": "static",
                    "value": ""
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "deviceName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 2484,
              "y": 504
            }
          },
          "8d0b": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Pre-Checks",
            "description": "Verify that the pre-checks were successful",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "templateResults.result",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "42d2"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2484,
              "y": 624
            }
          },
          "e76": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Pre-Check Failure",
            "description": "Show pre-check failure message and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Pre-Check Failure",
                "message": "Pre-Check has failed. Select \"Retry\" to retry pre-checks or select \"End Job\" to end the job without making changes to the device.",
                "body": "",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2148,
              "y": 756
            }
          },
          "fb74": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Success Message",
            "description": "Check if the user selected Auto Approve or not",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2484,
              "y": 972
            }
          },
          "1aa8": {
            "name": "runTemplatesDiff",
            "canvasName": "runTemplatesDiff",
            "summary": "Show Pre/Post-Check Comparison",
            "description": "Show the difference between the pre-check and post-check results",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "pre": "$var.e4f3.return_data",
                "post": "$var.643c.return_data"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/runTemplatesDiff",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2796,
              "y": 1176
            }
          },
          "e4f3": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check Results",
            "description": "Query pre-check results for comparison",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.42d2.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2796,
              "y": 972
            }
          },
          "643c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Post-Check Results",
            "description": "Query post-check results for comparison",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.8878.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2796,
              "y": 1080
            }
          },
          "cd3a": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Port Turn Up - IOS",
            "description": "Prepare incoming data for use in subsequent steps",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "629f6782e1a5fe015b2d2f24",
                "variableMap": {
                  "type": "$var.job.type",
                  "interface": "$var.job.interface",
                  "subInterface": "$var.job.subInterface",
                  "description": "$var.job.description",
                  "ipAddress": "$var.job.ipAddress",
                  "vlan": "$var.job.vlan",
                  "subnetMask": "$var.job.subnetMask"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "variables": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Provision Interface - IOS",
            "retrySettings": null,
            "nodeLocation": {
              "x": 2484,
              "y": 396
            }
          },
          "0335": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if the user selected Auto Approve or not",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2148,
              "y": 636
            }
          }
        },
        "transitions": {
          "6949": {},
          "8878": {
            "fb74": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "cd3a": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "936e": {
            "8878": {
              "type": "standard",
              "state": "success"
            }
          },
          "42d2": {
            "8d0b": {
              "type": "standard",
              "state": "success"
            }
          },
          "8d0b": {
            "936e": {
              "type": "standard",
              "state": "success"
            },
            "0335": {
              "state": "failure",
              "type": "standard"
            }
          },
          "e76": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "42d2": {
              "type": "revert",
              "state": "success"
            }
          },
          "fb74": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "e4f3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "1aa8": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "e4f3": {
            "643c": {
              "state": "success",
              "type": "standard"
            }
          },
          "643c": {
            "1aa8": {
              "type": "standard",
              "state": "success"
            }
          },
          "cd3a": {
            "42d2": {
              "type": "standard",
              "state": "success"
            }
          },
          "0335": {
            "e76": {
              "state": "failure",
              "type": "standard"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": "string",
              "examples": ["device"]
            },
            "type": {
              "type": "string",
              "examples": ["GigabitEthernet"]
            },
            "interface": {
              "type": "string",
              "examples": ["2"]
            },
            "subInterface": {
              "type": "string",
              "examples": ["100"]
            },
            "description": {
              "type": "string",
              "examples": ["my interface"]
            },
            "ipAddress": {
              "type": "string",
              "examples": ["10%2E10%2E10%2E10"],
              "format": "ipv4"
            },
            "vlan": {
              "type": "string",
              "examples": ["200"]
            },
            "subnetMask": {
              "type": "string"
            }
          },
          "required": [
            "suppressFailureMessage",
            "suppressSuccessMessage",
            "deviceName",
            "type",
            "interface",
            "subInterface",
            "description",
            "ipAddress",
            "vlan",
            "subnetMask"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": "string",
              "examples": ["device"]
            },
            "type": {
              "type": "string",
              "examples": ["GigabitEthernet"]
            },
            "interface": {
              "type": "string",
              "examples": ["2"]
            },
            "subInterface": {
              "type": "string",
              "examples": ["100"]
            },
            "description": {
              "type": "string",
              "examples": ["my interface"]
            },
            "ipAddress": {
              "type": "string",
              "examples": ["10%2E10%2E10%2E10"],
              "format": "ipv4"
            },
            "vlan": {
              "type": "string",
              "examples": ["200"]
            },
            "subnetMask": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.72.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:47:51.539Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "@66d0304521161b4df2717497: File Verification",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "File Verification",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show ver | i System image file is",
            "passRule": true,
            "rules": [
              {
                "rule": "<!version!>",
                "eval": "!contains",
                "severity": "error",
                "flags": {
                  "case": true
                }
              }
            ]
          },
          {
            "command": "dir <!flashMemory!><!version!>",
            "passRule": true,
            "rules": [
              {
                "rule": "No such file or directory",
                "eval": "!contains",
                "severity": "error"
              },
              {
                "rule": "Directory of <!flashMemory!>/<!version!>",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show running | inc boot",
            "passRule": true,
            "rules": [
              {
                "rule": "<!version!>",
                "eval": "!contains",
                "severity": "error"
              },
              {
                "rule": "boot system <!flashMemory!>",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724972860346,
        "createdBy": null,
        "lastUpdated": 1737715671543,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 5,
      "reference": "@66d0304521161b4df2717497: Post-Checks",
      "type": "mopCommandTemplate",
      "folder": "/Port Turn Up",
      "document": {
        "tags": [],
        "name": "Post-Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show interfaces <!type!> <!interface!>.<!subInterface!>",
            "passRule": true,
            "rules": [
              {
                "rule": "<!type!><!interface!>.<!subInterface!>.*\\s+.*(down|up)",
                "eval": "RegEx",
                "severity": "error",
                "flags": {
                  "global": true,
                  "multiline": true
                }
              }
            ]
          }
        ],
        "created": 1725006073315,
        "createdBy": null,
        "lastUpdated": 1737715671551,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 6,
      "reference": "@66d0304521161b4df2717497: Pre-Checks",
      "type": "mopCommandTemplate",
      "folder": "/Port Turn Up",
      "document": {
        "tags": [],
        "name": "Pre-Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show interfaces <!type!> <!interface!>.<!subInterface!>",
            "passRule": true,
            "rules": [
              {
                "rule": "Invalid input detected at '^' marker.",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1725006068052,
        "createdBy": null,
        "lastUpdated": 1737715671550,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 7,
      "reference": "@66d0304521161b4df2717497: Reload",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Reload",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "reload\ny",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724972864686,
        "createdBy": null,
        "lastUpdated": 1737715671551,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 8,
      "reference": "@66d0304521161b4df2717497: Show Version",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Show Version",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show version",
            "passRule": true,
            "rules": [
              {
                "rule": "Configuration",
                "eval": "contains",
                "severity": "error"
              },
              {
                "rule": "<!version!>",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724972868298,
        "createdBy": null,
        "lastUpdated": 1737715671555,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 9,
      "reference": "@66d0304521161b4df2717497: Software Upgrade Checks",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Software Upgrade Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show ver",
            "passRule": false,
            "rules": [
              {
                "rule": "Configuration register is 0x2102",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show ver",
            "ruleValues": [
              {
                "rule": "Configuration register is 0x2102",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show running",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error",
                "flags": {
                  "case": false
                }
              }
            ],
            "tempCommand": "show running",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error",
                "flags": {
                  "case": false
                }
              }
            ]
          },
          {
            "command": "show ip int br",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show ip int br",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show license",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show license",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show clock",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show clock",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show memory statistics",
            "passRule": true,
            "rules": [
              {
                "rule": "/Processor\\s+\\S+\\s+(\\d+)/",
                "eval": "#comparison",
                "severity": "error",
                "evaluator": "%",
                "percentage": 90,
                "ruleB": "/Processor\\s+\\S+\\s+\\S+\\s+(\\d+)/"
              },
              {
                "rule": "/Processor\\s+\\S+\\s+(\\d+)/",
                "eval": "#comparison",
                "severity": "warning",
                "ruleB": "/Processor\\s+\\S+\\s+\\S+\\s+(\\d+)/",
                "evaluator": "%",
                "percentage": 80
              },
              {
                "rule": "/Processor\\s+\\S+\\s+(\\d+)/",
                "eval": "#comparison",
                "severity": "info",
                "evaluator": "%",
                "ruleB": "/Processor\\s+\\S+\\s+\\S+\\s+(\\d+)/",
                "percentage": 70
              }
            ],
            "tempCommand": "show memory statistics",
            "ruleValues": [
              {
                "rule": "/Processor\\s+\\S+\\s+(\\d+)/",
                "eval": "#comparison",
                "severity": "error",
                "evaluator": "%",
                "percentage": 90,
                "ruleB": "/Processor\\s+\\S+\\s+\\d+\\s+(\\d+)/"
              },
              {
                "rule": "/Processor\\s+\\S+\\s+(\\d+)/",
                "eval": "#comparison",
                "severity": "warning",
                "ruleB": "/Processor\\s+\\S+\\s+\\d+\\s+(\\d+)/",
                "evaluator": "%",
                "percentage": 80
              },
              {
                "rule": "/Processor\\s+\\S+\\s+(\\d+)/",
                "eval": "#comparison",
                "severity": "info",
                "evaluator": "%",
                "ruleB": "/Processor\\s+\\S+\\s+\\d+\\s+(\\d+)/",
                "percentage": 70
              }
            ]
          },
          {
            "command": "show logging",
            "passRule": true,
            "rules": [
              {
                "rule": "Fatal",
                "eval": "!contains",
                "severity": "error",
                "flags": {
                  "case": true
                }
              }
            ],
            "tempCommand": "show logging",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show boot",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724972872106,
        "createdBy": null,
        "lastUpdated": 1737715671591,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 10,
      "reference": "67880835f921f091fd105010",
      "type": "template",
      "folder": "/Port Turn Up",
      "document": {
        "_id": "67880835f921f091fd105010",
        "command": "",
        "template": "conf t\ninterface {{type}}{{interface}}.{{subInterface}}\ndescription {{description}}\n{% if vlan %}\nencapsulation dot1Q {{vlan}}\n{% endif %}\nip address {{ipAddress}} {{subnetMask}}\nno shutdown\nexit\n",
        "type": "jinja2",
        "name": "Port Turn Up",
        "version": 1,
        "tags": [],
        "data": "{\n  \"type\": \"GigabitEthernet\",\n  \"interface\": \"1\",\n  \"subInterface\": \"100\",\n  \"description\":\"test\",\n  \"ipAddress\":\"10.0.0.2\",\n  \"subnetMask\": \"255.255.255.252\",\n  \"vlan\":\"100\"\n}",
        "group": "Cisco IOS Configs",
        "description": "",
        "created": "2023-11-09T16:55:03.867Z",
        "lastUpdated": "2025-01-24T10:47:51.544Z",
        "createdBy": null,
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false
        }
      }
    },
    {
      "iid": 11,
      "reference": "67880835f921f091fd105011",
      "type": "template",
      "folder": "/Software Upgrade",
      "document": {
        "_id": "67880835f921f091fd105011",
        "command": "",
        "name": "Set Boot Marker",
        "template": "conf t\n\nno boot system\nboot system {{flashMemory}}{{version}}\nexit\ncopy run start",
        "type": "jinja2",
        "version": 1,
        "tags": [],
        "data": "{\"flashMemory\":\"flash:\",\"version\":\"test.bin\"}",
        "group": "Cisco IOS Configs",
        "description": "",
        "created": "2022-06-07T02:10:57.001Z",
        "lastUpdated": "2025-01-24T10:47:51.548Z",
        "createdBy": null,
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false
        }
      }
    },
    {
      "iid": 12,
      "reference": "67880873b320bf2f072b34ec",
      "type": "transformation",
      "folder": "/Port Turn Up",
      "document": {
        "_id": "67880873b320bf2f072b34ec",
        "name": "Port Turn Up",
        "description": "",
        "incoming": [
          {
            "$id": "type",
            "type": "string",
            "examples": ["GigabitEthernet"]
          },
          {
            "$id": "interface",
            "type": "string",
            "examples": ["2"]
          },
          {
            "$id": "subInterface",
            "type": "string",
            "examples": ["100"]
          },
          {
            "$id": "description",
            "type": "string",
            "examples": ["my interface"]
          },
          {
            "$id": "ipAddress",
            "type": "string",
            "examples": ["10%2E10%2E10%2E10"],
            "format": "ipv4"
          },
          {
            "$id": "subnetMask",
            "type": "string"
          },
          {
            "$id": "vlan",
            "type": "string",
            "examples": ["200"]
          }
        ],
        "outgoing": [
          {
            "$id": "variables",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "examples": ["GigabitEthernet"]
              },
              "interface": {
                "type": "string",
                "examples": ["1"]
              },
              "subInterface": {
                "type": "string",
                "examples": ["100"]
              },
              "description": {
                "type": "string",
                "examples": ["test descr"]
              },
              "ipAddress": {
                "type": "string",
                "examples": ["10%2E10%2E10%2E10"],
                "format": "ipv4"
              },
              "subnetMask": {
                "type": "string",
                "examples": ["255%2E255%2E255%2E252"],
                "format": "ipv4"
              },
              "vlan": {
                "type": "string",
                "examples": ["200"]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "type",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/type"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/description"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ipAddress",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/ipAddress"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "subInterface",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/subInterface"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vlan",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/vlan"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "subnetMask",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/subnetMask"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "interface",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/interface"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T19:11:47.911Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:47:51.546Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 13,
      "reference": "66d02fffcddf0c8da2752c6c",
      "type": "transformation",
      "folder": "/Command Template Runner",
      "document": {
        "_id": "66d02fffcddf0c8da2752c6c",
        "name": "Create Command Template Runner Error Message",
        "description": "Create Command Template Runner error message",
        "incoming": [
          {
            "$id": "templateName",
            "type": "string",
            "examples": ["Template A"]
          }
        ],
        "outgoing": [
          {
            "$id": "errorMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "templateName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "The Command Template ${templateName} has errored. See details below. Select \"Retry\" to retry Command Template or select \"Continue\" to continue to end of job.",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "errorMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-15T19:10:45.427Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:47:51.542Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 14,
      "reference": "67880835b320bf2f072b34ea",
      "type": "transformation",
      "folder": "/Software Upgrade",
      "document": {
        "_id": "67880835b320bf2f072b34ea",
        "name": "Software Upgrade",
        "description": "",
        "incoming": [
          {
            "$id": "version",
            "type": "string",
            "examples": ["14%2E4"]
          },
          {
            "$id": "flashMemory",
            "type": "string",
            "examples": ["flash:"]
          }
        ],
        "outgoing": [
          {
            "$id": "variables",
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "examples": ["14%2E4"]
              },
              "flashMemory": {
                "type": "string",
                "examples": ["flash:"]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "version",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/version"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "flashMemory",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/flashMemory"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T19:10:45.431Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:47:51.546Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 15,
      "reference": "67880835b320bf2f072b34eb",
      "type": "transformation",
      "folder": "/Push Configuration",
      "document": {
        "_id": "67880835b320bf2f072b34eb",
        "name": "Process Push Configuration Data",
        "description": "Process push configuration data",
        "incoming": [
          {
            "$id": "renderedJinja2Template",
            "type": "object",
            "properties": {
              "renderedTemplate": {
                "type": "string",
                "examples": ["test"]
              }
            },
            "required": []
          },
          {
            "$id": "deviceName",
            "type": "string",
            "examples": ["device"]
          }
        ],
        "outgoing": [
          {
            "$id": "renderedTemplate",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "configurationList",
            "type": "array"
          },
          {
            "$id": "deviceList",
            "type": "array"
          },
          {
            "$id": "deviceConfigurationPushMessage",
            "type": "string"
          },
          {
            "$id": "deviceConfigurationPushFailedMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 2,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedJinja2Template",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 2,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 5,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "See configuration below to provision against the device \"${deviceName}\". Select \"Provision\" to attempt to push the configuration to the device or select \"End Job\" to skip pushing configuration and to end the job.",
            "args": [null],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configurationList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceConfigurationPushMessage",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedJinja2Template",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "outgoing",
              "name": "renderedTemplate",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "Pushing configuration to device \"${deviceName}\" failed. See details below. Select \"Retry\" to retry provisioning the configuration against the device or select \"End Job\" to end the job without pushing configuration to the device.\n\n\n\n\n\n\n",
            "args": [null],
            "view": {
              "row": 4,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 11,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceConfigurationPushFailedMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T19:10:45.433Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:47:51.547Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Software Upgrade",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 14,
          "nodeType": "component"
        },
        {
          "iid": 4,
          "nodeType": "component"
        },
        {
          "iid": 9,
          "nodeType": "component"
        },
        {
          "iid": 11,
          "nodeType": "component"
        },
        {
          "iid": 7,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Port Turn Up",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 12,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        },
        {
          "iid": 10,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Command Template Runner",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 13,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Push Configuration",
      "children": [
        {
          "iid": 2,
          "nodeType": "component"
        },
        {
          "iid": 15,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-29T08:24:37.228Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T10:47:51.616Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 42,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
