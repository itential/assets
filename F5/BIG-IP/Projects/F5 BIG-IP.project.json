{
  "_id": "66d0d77d21161b4df27174ce",
  "name": "F5 BIG-IP",
  "description": "F5 BIG-IP Project has assets for Create Pool and Members, Create Virtual Server",
  "components": [
    {
      "iid": 0,
      "reference": "858452dc-b15d-48bf-9c4d-4c589060f010",
      "type": "workflow",
      "folder": "/Create Pool and Members",
      "document": {
        "name": "Create Pool and Members",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -180,
              "y": 348
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -180,
              "y": 1536
            }
          },
          "751f": {
            "name": "sendRequest",
            "canvasName": "sendRequest",
            "summary": "Pre-Check",
            "description": "Get pool and members for pre-check on F5",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "host": "$var.job.host",
                "endpoint": "$var.74dc.validateEndpoint",
                "method": "GET",
                "params": "",
                "data": "",
                "headers": {
                  "accept": "application/json"
                },
                "cookies": "",
                "auth": {
                  "username": "{{username}}",
                  "password": "{{password}}"
                },
                "timeout": "",
                "allowRedirects": false,
                "proxies": "",
                "verify": false,
                "adapter_id": "$var.job.agAdapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -180,
              "y": 624
            }
          },
          "74dc": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pool and Members",
            "description": "Create Pool and Members input for F5 BIG-IP",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "629f2ed3e1a5fe015b2d2f1f",
                "variableMap": {
                  "name": "$var.job.name",
                  "description": "$var.job.description",
                  "partition": "$var.job.partition",
                  "members": "$var.job.members"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "provisionPayload": null,
                "validateEndpoint": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Create Pool and Members - BIG-IP",
            "retrySettings": null,
            "nodeLocation": {
              "x": -180,
              "y": 492
            }
          },
          "3b36": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Pre-Check Passes",
            "description": "Confirm the error from the pre-check is valid for not found or that the name of the pool and members do not exist in the response",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "preCheckResult",
                          "task": "job"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": "The requested Pool",
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "preCheckResult",
                          "task": "job"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": "was not found",
                          "task": "static"
                        }
                      }
                    ]
                  },
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "preCheckResult",
                          "task": "job"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "name",
                          "task": "job",
                          "editable": true
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -180,
              "y": 900
            }
          },
          "eb4c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Pre-Check Failure",
            "description": "Show pre-check failure and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Pre-Check Failure",
                "message": "The pre-check has failed, retry or continue to provision?",
                "body": "$var.job.preCheckResult",
                "variables": "",
                "btn_success": "Provision",
                "btn_failure": "Retry Pre-Check"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -636,
              "y": 900
            }
          },
          "4c40": {
            "name": "sendRequest",
            "canvasName": "sendRequest",
            "summary": "Create Pool and Members",
            "description": "Create the pool and associate the members to it",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "host": "$var.job.host",
                "endpoint": "/tm/ltm/pool",
                "method": "POST",
                "params": "",
                "data": "$var.74dc.provisionPayload",
                "headers": {
                  "accept": "application/json",
                  "content-type": "application/json"
                },
                "cookies": "",
                "auth": {
                  "username": "{{username}}",
                  "password": "{{password}}"
                },
                "timeout": "",
                "allowRedirects": false,
                "proxies": "",
                "verify": false,
                "adapter_id": "$var.job.agAdapterId"
              },
              "outgoing": {
                "result": "$var.job.createPoolMembersResult"
              },
              "error": "$var.job.createPoolMembersError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -180,
              "y": 1056
            }
          },
          "b007": {
            "name": "sendRequest",
            "canvasName": "sendRequest",
            "summary": "Post-Check",
            "description": "Get pool and members for post-check",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "host": "$var.job.host",
                "endpoint": "$var.74dc.validateEndpoint",
                "method": "GET",
                "params": "",
                "data": "",
                "headers": {
                  "accept": "application/json"
                },
                "cookies": "",
                "auth": {
                  "username": "{{username}}",
                  "password": "{{password}}"
                },
                "timeout": "",
                "allowRedirects": false,
                "proxies": "",
                "verify": false,
                "adapter_id": "$var.job.agAdapterId"
              },
              "outgoing": {
                "result": "$var.job.postCheckResult"
              },
              "error": "$var.job.postCheckError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -180,
              "y": 1236
            }
          },
          "160c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Post-Check Passes",
            "description": "Verify that the pool has been created and the members associated to it.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.name",
                        "operand_1": {
                          "variable": "result",
                          "task": "b007"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "name",
                          "task": "job",
                          "editable": true
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -180,
              "y": 1380
            }
          },
          "8e87": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Post-Check Failure",
            "description": "Show post-check failure and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Post-Check Failure",
                "message": "The post-check has failed, retry or end the job?",
                "body": "$var.b007.result",
                "variables": "",
                "btn_success": "Retry Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 264,
              "y": 1380
            }
          },
          "984b": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Provision Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Provision Failure",
                "message": "The provisioning step has failed, retry or end the job?",
                "body": "$var.4c40.error",
                "variables": "",
                "btn_success": "Retry Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -636,
              "y": 1056
            }
          },
          "f7a1": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check Result",
            "description": "Query pre-check response for found pool and members",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.name",
                "obj": "$var.751f.result"
              },
              "outgoing": {
                "return_data": "$var.job.preCheckResult"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -180,
              "y": 780
            }
          },
          "81bf": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check Result",
            "description": "Query pre-check response for error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "IAPerror.raw_response.response",
                "obj": "$var.751f.error"
              },
              "outgoing": {
                "return_data": "$var.job.preCheckResult"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -648,
              "y": 636
            }
          }
        },
        "transitions": {
          "7988": {},
          "workflow_start": {
            "74dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "751f": {
            "81bf": {
              "type": "standard",
              "state": "error"
            },
            "f7a1": {
              "type": "standard",
              "state": "success"
            }
          },
          "74dc": {
            "751f": {
              "type": "standard",
              "state": "success"
            }
          },
          "3b36": {
            "4c40": {
              "type": "standard",
              "state": "success"
            },
            "eb4c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "eb4c": {
            "751f": {
              "type": "revert",
              "state": "failure"
            },
            "4c40": {
              "type": "standard",
              "state": "success"
            }
          },
          "4c40": {
            "b007": {
              "type": "standard",
              "state": "success"
            },
            "984b": {
              "type": "standard",
              "state": "error"
            }
          },
          "b007": {
            "160c": {
              "type": "standard",
              "state": "success"
            }
          },
          "160c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "8e87": {
              "type": "standard",
              "state": "failure"
            }
          },
          "8e87": {
            "4c40": {
              "type": "revert",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "984b": {
            "4c40": {
              "type": "revert",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f7a1": {
            "3b36": {
              "type": "standard",
              "state": "success"
            }
          },
          "81bf": {
            "3b36": {
              "type": "standard",
              "state": "success"
            }
          },
          "d972": {},
          "ddb0": {},
          "5d99": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "host": {
              "title": "host",
              "type": "string",
              "examples": ["xr9kv-atl"]
            },
            "agAdapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "name": {
              "type": "string",
              "examples": ["test"]
            },
            "description": {
              "type": "string",
              "examples": ["test"]
            },
            "partition": {
              "type": "string",
              "examples": ["Common"]
            },
            "members": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["Server-test:443"]
                  },
                  "servicePort": {
                    "type": "number",
                    "examples": ["80"]
                  },
                  "address": {
                    "type": "string",
                    "examples": ["10%2E0%2E0%2E1"],
                    "format": "ipv4"
                  }
                },
                "required": []
              }
            }
          },
          "required": [
            "host",
            "agAdapterId",
            "name",
            "description",
            "partition",
            "members"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "host": {
              "title": "host",
              "type": "string",
              "examples": ["xr9kv-atl"]
            },
            "agAdapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "name": {
              "type": "string",
              "examples": ["test"]
            },
            "description": {
              "type": "string",
              "examples": ["test"]
            },
            "partition": {
              "type": "string",
              "examples": ["Common"]
            },
            "members": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["Server-test:443"]
                  },
                  "servicePort": {
                    "type": "number",
                    "examples": ["80"]
                  },
                  "address": {
                    "type": "string",
                    "examples": ["10%2E0%2E0%2E1"],
                    "format": "ipv4"
                  }
                },
                "required": []
              }
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "preCheckResult": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "createPoolMembersResult": {
              "title": "result",
              "type": "object",
              "properties": {
                "key": {
                  "title": "key",
                  "type": "string",
                  "examples": ["result"]
                },
                "response": {
                  "title": "response",
                  "type": "object",
                  "examples": [
                    {
                      "API": "AdoptAPet",
                      "Auth": "apiKey",
                      "Category": "Animals",
                      "Cors": "yes",
                      "Description": "Resource to help get pets adopted",
                      "HTTPS": true
                    }
                  ]
                },
                "status": {
                  "title": "status",
                  "type": "string",
                  "examples": ["200"]
                }
              },
              "examples": [
                {
                  "key": "result",
                  "response": {
                    "API": "AdoptAPet",
                    "Auth": "apiKey",
                    "Category": "Animals",
                    "Cors": "yes",
                    "Description": "Resource to help get pets adopted",
                    "HTTPS": true
                  },
                  "status": "200"
                }
              ],
              "required": ["key", "response", "status"]
            },
            "createPoolMembersError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "postCheckResult": {
              "title": "result",
              "type": "object",
              "properties": {
                "key": {
                  "title": "key",
                  "type": "string",
                  "examples": ["result"]
                },
                "response": {
                  "title": "response",
                  "type": "object",
                  "examples": [
                    {
                      "API": "AdoptAPet",
                      "Auth": "apiKey",
                      "Category": "Animals",
                      "Cors": "yes",
                      "Description": "Resource to help get pets adopted",
                      "HTTPS": true
                    }
                  ]
                },
                "status": {
                  "title": "status",
                  "type": "string",
                  "examples": ["200"]
                }
              },
              "examples": [
                {
                  "key": "result",
                  "response": {
                    "API": "AdoptAPet",
                    "Auth": "apiKey",
                    "Category": "Animals",
                    "Cors": "yes",
                    "Description": "Resource to help get pets adopted",
                    "HTTPS": true
                  },
                  "status": "200"
                }
              ],
              "required": ["key", "response", "status"]
            },
            "postCheckError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.72.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:57:59.685Z",
        "preAutomationTime": 363000,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "cae460ef-5417-45cb-a137-d847ef5c99b5",
      "type": "workflow",
      "folder": "/Create Virtual Server",
      "document": {
        "name": "Create Virtual Server",
        "tasks": {
          "3864": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check Result",
            "description": "Query pre-check response for found virtual server",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.name",
                "obj": "$var.751f.result"
              },
              "outgoing": {
                "return_data": "$var.job.preCheckResult"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -204,
              "y": 612
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -204,
              "y": 252
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -204,
              "y": 1308
            }
          },
          "751f": {
            "name": "sendRequest",
            "canvasName": "sendRequest",
            "summary": "Pre-Check",
            "description": "Get virtual server for pre-check on F5",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "host": "$var.job.host",
                "endpoint": "$var.74dc.validateEndpoint",
                "method": "GET",
                "params": "",
                "data": "",
                "headers": {
                  "accept": "application/json"
                },
                "cookies": "",
                "auth": {
                  "username": "{{username}}",
                  "password": "{{password}}"
                },
                "timeout": "",
                "allowRedirects": false,
                "proxies": "",
                "verify": false,
                "adapter_id": "$var.job.agAdapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -204,
              "y": 480
            }
          },
          "74dc": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Virtual Server",
            "description": "Create virtual server input for F5 BIG-IP",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "629f4d33e1a5fe015b2d2f20",
                "variableMap": {
                  "name": "$var.job.name",
                  "description": "$var.job.description",
                  "partition": "$var.job.partition",
                  "poolName": "$var.job.poolName",
                  "destinationAddress": "$var.job.destinationAddress",
                  "destinationPort": "$var.job.destinationPort"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "provisionPayload": null,
                "validateEndpoint": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Create Virtual Server - BIG-IP",
            "retrySettings": null,
            "nodeLocation": {
              "x": -204,
              "y": 372
            }
          },
          "3b36": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Pre-Check Passes",
            "description": "Confirm the error from the pre-check is valid for not found or that the name of the virtual server does not exist in the response",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "preCheckResult",
                          "task": "job"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": "The requested Virtual Server",
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "preCheckResult",
                          "task": "job"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": "was not found",
                          "task": "static"
                        }
                      }
                    ]
                  },
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "preCheckResult",
                          "task": "job"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "name",
                          "task": "job",
                          "editable": true
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -204,
              "y": 744
            }
          },
          "eb4c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Pre-Check Failure",
            "description": "Show pre-check failure and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Pre-Check Failure",
                "message": "The pre-check has failed, retry or continue to provision?",
                "body": "$var.job.preCheckResult",
                "variables": "",
                "btn_success": "Provision",
                "btn_failure": "Retry Pre-Check"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -636,
              "y": 732
            }
          },
          "4c40": {
            "name": "sendRequest",
            "canvasName": "sendRequest",
            "summary": "Create Virtual Server",
            "description": "Create the virtual server and associate it to a pool",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "host": "$var.job.host",
                "endpoint": "/tm/ltm/virtual",
                "method": "POST",
                "params": "",
                "data": "$var.74dc.provisionPayload",
                "headers": {
                  "accept": "application/json",
                  "content-type": "application/json"
                },
                "cookies": "",
                "auth": {
                  "username": "{{username}}",
                  "password": "{{password}}"
                },
                "timeout": "",
                "allowRedirects": false,
                "proxies": "",
                "verify": false,
                "adapter_id": "$var.job.agAdapterId"
              },
              "outgoing": {
                "result": "$var.job.createVirtualServerResult"
              },
              "error": "$var.job.createVirtualServerError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -204,
              "y": 876
            }
          },
          "b007": {
            "name": "sendRequest",
            "canvasName": "sendRequest",
            "summary": "Post-Check",
            "description": "Get virtual server for post-check",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "host": "$var.job.host",
                "endpoint": "$var.74dc.validateEndpoint",
                "method": "GET",
                "params": "",
                "data": "",
                "headers": {
                  "accept": "application/json"
                },
                "cookies": "",
                "auth": {
                  "username": "{{username}}",
                  "password": "{{password}}"
                },
                "timeout": "",
                "allowRedirects": false,
                "proxies": "",
                "verify": false,
                "adapter_id": "$var.job.agAdapterId"
              },
              "outgoing": {
                "result": "$var.job.postCheckResult"
              },
              "error": "$var.job.postCheckError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -204,
              "y": 1020
            }
          },
          "160c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Post-Check Passes",
            "description": "Verify that the virtual server has been created and is associated to the pool.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.name",
                        "operand_1": {
                          "variable": "result",
                          "task": "b007"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "name",
                          "task": "job",
                          "editable": true
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -204,
              "y": 1140
            }
          },
          "8e87": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Post-Check Failure",
            "description": "Show post-check failure and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Post-Check Failure",
                "message": "The post-check has failed, retry or end the job?",
                "body": "$var.b007.result",
                "variables": "",
                "btn_success": "Retry Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 168,
              "y": 1128
            }
          },
          "984b": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Provision Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Provision Failure",
                "message": "The provisioning step has failed, retry or end the job?",
                "body": "$var.4c40.error",
                "variables": "",
                "btn_success": "Retry Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -636,
              "y": 864
            }
          },
          "c333": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check Result",
            "description": "Query pre-check response for error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "IAPerror.raw_response.response",
                "obj": "$var.751f.error"
              },
              "outgoing": {
                "return_data": "$var.job.preCheckResult"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -648,
              "y": 480
            }
          }
        },
        "transitions": {
          "3864": {
            "3b36": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "74dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "751f": {
            "3864": {
              "type": "standard",
              "state": "success"
            },
            "c333": {
              "type": "standard",
              "state": "error"
            }
          },
          "74dc": {
            "751f": {
              "type": "standard",
              "state": "success"
            }
          },
          "3b36": {
            "4c40": {
              "type": "standard",
              "state": "success"
            },
            "eb4c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "eb4c": {
            "751f": {
              "type": "revert",
              "state": "failure"
            },
            "4c40": {
              "type": "standard",
              "state": "success"
            }
          },
          "4c40": {
            "b007": {
              "type": "standard",
              "state": "success"
            },
            "984b": {
              "type": "standard",
              "state": "error"
            }
          },
          "b007": {
            "160c": {
              "type": "standard",
              "state": "success"
            }
          },
          "160c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "8e87": {
              "type": "standard",
              "state": "failure"
            }
          },
          "8e87": {
            "4c40": {
              "type": "revert",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "984b": {
            "4c40": {
              "type": "revert",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c333": {
            "3b36": {
              "type": "standard",
              "state": "success"
            }
          },
          "d972": {},
          "ddb0": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "host": {
              "title": "host",
              "type": "string",
              "examples": ["xr9kv-atl"]
            },
            "agAdapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "name": {
              "type": "string",
              "examples": ["test"]
            },
            "description": {
              "type": "string",
              "examples": ["test"]
            },
            "partition": {
              "type": "string",
              "examples": ["Common"]
            },
            "poolName": {
              "type": "string",
              "examples": ["pool-test"]
            },
            "destinationAddress": {
              "type": "string",
              "examples": ["10%2E10%2E10%2E10"]
            },
            "destinationPort": {
              "type": "number",
              "examples": ["80"]
            }
          },
          "required": [
            "host",
            "agAdapterId",
            "name",
            "description",
            "partition",
            "poolName",
            "destinationAddress",
            "destinationPort"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "host": {
              "title": "host",
              "type": "string",
              "examples": ["xr9kv-atl"]
            },
            "agAdapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "name": {
              "type": "string",
              "examples": ["test"]
            },
            "description": {
              "type": "string",
              "examples": ["test"]
            },
            "partition": {
              "type": "string",
              "examples": ["Common"]
            },
            "poolName": {
              "type": "string",
              "examples": ["pool-test"]
            },
            "destinationAddress": {
              "type": "string",
              "examples": ["10%2E10%2E10%2E10"]
            },
            "destinationPort": {
              "type": "number",
              "examples": ["80"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "preCheckResult": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "createVirtualServerResult": {
              "title": "result",
              "type": "object",
              "properties": {
                "key": {
                  "title": "key",
                  "type": "string",
                  "examples": ["result"]
                },
                "response": {
                  "title": "response",
                  "type": "object",
                  "examples": [
                    {
                      "API": "AdoptAPet",
                      "Auth": "apiKey",
                      "Category": "Animals",
                      "Cors": "yes",
                      "Description": "Resource to help get pets adopted",
                      "HTTPS": true
                    }
                  ]
                },
                "status": {
                  "title": "status",
                  "type": "string",
                  "examples": ["200"]
                }
              },
              "examples": [
                {
                  "key": "result",
                  "response": {
                    "API": "AdoptAPet",
                    "Auth": "apiKey",
                    "Category": "Animals",
                    "Cors": "yes",
                    "Description": "Resource to help get pets adopted",
                    "HTTPS": true
                  },
                  "status": "200"
                }
              ],
              "required": ["key", "response", "status"]
            },
            "createVirtualServerError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "postCheckResult": {
              "title": "result",
              "type": "object",
              "properties": {
                "key": {
                  "title": "key",
                  "type": "string",
                  "examples": ["result"]
                },
                "response": {
                  "title": "response",
                  "type": "object",
                  "examples": [
                    {
                      "API": "AdoptAPet",
                      "Auth": "apiKey",
                      "Category": "Animals",
                      "Cors": "yes",
                      "Description": "Resource to help get pets adopted",
                      "HTTPS": true
                    }
                  ]
                },
                "status": {
                  "title": "status",
                  "type": "string",
                  "examples": ["200"]
                }
              },
              "examples": [
                {
                  "key": "result",
                  "response": {
                    "API": "AdoptAPet",
                    "Auth": "apiKey",
                    "Category": "Animals",
                    "Cors": "yes",
                    "Description": "Resource to help get pets adopted",
                    "HTTPS": true
                  },
                  "status": "200"
                }
              ],
              "required": ["key", "response", "status"]
            },
            "postCheckError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.72.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:57:59.687Z",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "f616c8fc-281f-475b-9966-f1343f78121a",
      "type": "workflow",
      "folder": "/Sample Use Cases/Create Pool, Members, and Virtual Server",
      "document": {
        "name": "Create Pool and Virtual Server",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1944,
              "y": 708
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1944,
              "y": 1176
            }
          },
          "1b9e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Pool and Members",
            "description": "Child Job to create pool and members",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d77d21161b4df27174ce: Create Pool and Members",
                "variables": {
                  "host": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "loadBalancer"
                  },
                  "name": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "poolName"
                  },
                  "description": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "poolDescription"
                  },
                  "partition": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "partition"
                  },
                  "members": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "poolMembers"
                  },
                  "agAdapterId": {
                    "task": "static",
                    "value": "Automation Gateway"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1944,
              "y": 936
            }
          },
          "d1bc": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Lab - Create Pool and Virtual Server - F5 JST",
            "description": "Lab - Create Pool and Virtual Server - F5 JST",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "629f559fe1a5fe015b2d2f21",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "loadBalancer": null,
                "poolName": null,
                "poolDescription": null,
                "poolMembers": null,
                "virtualServerName": null,
                "virtualServerDescription": null,
                "partition": null,
                "virtualServerDestinationAddress": null,
                "virtualServerDestinationPort": null
              }
            },
            "groups": [],
            "task_name": "Create Pool and Virtual Sever - F5",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1944,
              "y": 816
            }
          },
          "bc19": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Virtual Server",
            "description": "Child Job to create virtual server and attach to pool",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d77d21161b4df27174ce: Create Virtual Server",
                "variables": {
                  "host": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "loadBalancer"
                  },
                  "name": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "virtualServerName"
                  },
                  "description": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "virtualServerDescription"
                  },
                  "partition": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "partition"
                  },
                  "poolName": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "poolName"
                  },
                  "destinationAddress": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "virtualServerDestinationAddress"
                  },
                  "destinationPort": {
                    "editable": true,
                    "task": "d1bc",
                    "value": "virtualServerDestinationPort"
                  },
                  "agAdapterId": {
                    "task": "static",
                    "value": "Automation Gateway"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1944,
              "y": 1044
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "d1bc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "1b9e": {
            "bc19": {
              "type": "standard",
              "state": "success"
            }
          },
          "d1bc": {
            "1b9e": {
              "type": "standard",
              "state": "success"
            }
          },
          "bc19": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "properties": {
                "loadBalancer": {
                  "type": "string",
                  "examples": ["F5"]
                },
                "partition": {
                  "type": "string",
                  "examples": ["Common"]
                },
                "poolMembers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "examples": ["Member1"]
                      },
                      "servicePort": {
                        "type": "number",
                        "examples": ["80"]
                      },
                      "address": {
                        "type": "string",
                        "examples": ["30%2E0%2E0%2E1"],
                        "format": "ipv4"
                      }
                    },
                    "required": []
                  }
                },
                "poolName": {
                  "type": "string",
                  "examples": ["webserver"]
                },
                "poolDescription": {
                  "type": "string",
                  "examples": ["Main web server"]
                },
                "virtualServerName": {
                  "type": "string",
                  "examples": ["webserver-vs"]
                },
                "virtualServerDescription": {
                  "type": "string",
                  "examples": ["Web Server Virtual Server"]
                },
                "virtualServerDestinationAddress": {
                  "type": "string",
                  "examples": ["10%2E10%2E10%2E30"],
                  "format": "ipv4"
                },
                "virtualServerDestinationPort": {
                  "type": "number",
                  "examples": ["80"]
                }
              },
              "required": []
            }
          },
          "required": ["formData"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "properties": {
                "loadBalancer": {
                  "type": "string",
                  "examples": ["F5"]
                },
                "partition": {
                  "type": "string",
                  "examples": ["Common"]
                },
                "poolMembers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "examples": ["Member1"]
                      },
                      "servicePort": {
                        "type": "number",
                        "examples": ["80"]
                      },
                      "address": {
                        "type": "string",
                        "examples": ["30%2E0%2E0%2E1"],
                        "format": "ipv4"
                      }
                    },
                    "required": []
                  }
                },
                "poolName": {
                  "type": "string",
                  "examples": ["webserver"]
                },
                "poolDescription": {
                  "type": "string",
                  "examples": ["Main web server"]
                },
                "virtualServerName": {
                  "type": "string",
                  "examples": ["webserver-vs"]
                },
                "virtualServerDescription": {
                  "type": "string",
                  "examples": ["Web Server Virtual Server"]
                },
                "virtualServerDestinationAddress": {
                  "type": "string",
                  "examples": ["10%2E10%2E10%2E30"],
                  "format": "ipv4"
                },
                "virtualServerDestinationPort": {
                  "type": "number",
                  "examples": ["80"]
                }
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.72.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:57:59.688Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "629f4d33e1a5fe015b2d2f20",
      "type": "transformation",
      "folder": "/Create Virtual Server",
      "document": {
        "_id": "629f4d33e1a5fe015b2d2f20",
        "name": "Create Virtual Server",
        "description": "",
        "incoming": [
          {
            "$id": "name",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "description",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "partition",
            "type": "string",
            "examples": ["Common"]
          },
          {
            "$id": "poolName",
            "type": "string",
            "examples": ["pool-test"]
          },
          {
            "$id": "destinationAddress",
            "type": "string",
            "examples": ["10%2E10%2E10%2E10"]
          },
          {
            "$id": "destinationPort",
            "type": "number",
            "examples": ["80"]
          }
        ],
        "outgoing": [
          {
            "$id": "provisionPayload",
            "type": "object",
            "properties": {
              "partition": {
                "type": "string",
                "examples": ["Common"]
              },
              "name": {
                "type": "string",
                "examples": ["vs-Test3"]
              },
              "destination": {
                "type": "string",
                "examples": ["10%2E20%2E20%2E20:80"]
              },
              "pool": {
                "type": "string",
                "examples": ["Test3"]
              },
              "description": {
                "type": "string",
                "examples": ["my vs"]
              }
            },
            "required": []
          },
          {
            "$id": "validateEndpoint",
            "type": "string",
            "examples": ["/tm/ltm/pool/test"]
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": ["/tm/ltm/virtual/", null],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "validateEndpoint",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/name"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "partition",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/partition"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/description"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "poolName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/pool"
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Number",
            "method": "toString",
            "args": [null, null],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "destinationPort",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 13,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [null, ":", null],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "destinationAddress",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 13,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 13,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 13,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/destination"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-16T18:34:54.085Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:57:59.688Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 3,
      "reference": "629f2ed3e1a5fe015b2d2f1f",
      "type": "transformation",
      "folder": "/Create Pool and Members",
      "document": {
        "_id": "629f2ed3e1a5fe015b2d2f1f",
        "name": "Create Pool and Members",
        "description": "",
        "incoming": [
          {
            "$id": "name",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "description",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "partition",
            "type": "string",
            "examples": ["Common"]
          },
          {
            "$id": "members",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": ["Server-test:443"]
                },
                "servicePort": {
                  "type": "number",
                  "examples": ["80"]
                },
                "address": {
                  "type": "string",
                  "examples": ["10%2E0%2E0%2E1"],
                  "format": "ipv4"
                }
              },
              "required": []
            }
          }
        ],
        "outgoing": [
          {
            "$id": "provisionPayload",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": ["test-pool"]
              },
              "description": {
                "type": "string",
                "examples": ["a"]
              },
              "partition": {
                "type": "string",
                "examples": ["Common"]
              },
              "members": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": ["Server-Itential:443"]
                    },
                    "address": {
                      "type": "string",
                      "examples": ["10%2E0%2E0%2E1"],
                      "format": "ipv4"
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          },
          {
            "$id": "validateEndpoint",
            "type": "string",
            "examples": ["/tm/ltm/pool/test"]
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": ["/tm/ltm/pool/", null],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "validateEndpoint",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/name"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/description"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "partition",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/partition"
            }
          },
          {
            "id": 9,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "formatMembersArray"],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "members",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "provisionPayload",
              "ptr": "/members"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["Server-test:443"]
                  },
                  "servicePort": {
                    "type": "number",
                    "examples": ["80"]
                  },
                  "address": {
                    "type": "string",
                    "examples": ["10%2E0%2E0%2E1"],
                    "format": "ipv4"
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": ["Server-test:443"]
                    },
                    "servicePort": {
                      "type": "number",
                      "examples": ["80"]
                    },
                    "address": {
                      "type": "string",
                      "examples": ["10%2E0%2E0%2E1"],
                      "format": "ipv4"
                    }
                  },
                  "required": []
                },
                "optional": true
              }
            ],
            "outgoing": [
              {
                "$id": "newValue",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["node1:443"]
                  },
                  "address": {
                    "type": "string",
                    "examples": ["10%2E10%2E10%2E10"],
                    "format": "ipv4"
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [null, ":", null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/address"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/address"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Number",
                "method": "toString",
                "args": [null, null],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/servicePort"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/name"
                }
              }
            ],
            "functions": [],
            "name": "formatMembersArray",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "formatMembersArray",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-16T18:34:54.093Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:57:59.689Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 5,
      "reference": "629f559fe1a5fe015b2d2f21",
      "type": "transformation",
      "folder": "/Sample Use Cases/Create Pool, Members, and Virtual Server",
      "document": {
        "_id": "629f559fe1a5fe015b2d2f21",
        "name": "Create Pool Mapping",
        "description": "",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "loadBalancer": {
                "type": "string",
                "examples": ["F5"]
              },
              "partition": {
                "type": "string",
                "examples": ["Common"]
              },
              "poolMembers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": ["Member1"]
                    },
                    "servicePort": {
                      "type": "number",
                      "examples": ["80"]
                    },
                    "address": {
                      "type": "string",
                      "examples": ["30%2E0%2E0%2E1"],
                      "format": "ipv4"
                    }
                  },
                  "required": []
                }
              },
              "poolName": {
                "type": "string",
                "examples": ["webserver"]
              },
              "poolDescription": {
                "type": "string",
                "examples": ["Main web server"]
              },
              "virtualServerName": {
                "type": "string",
                "examples": ["webserver-vs"]
              },
              "virtualServerDescription": {
                "type": "string",
                "examples": ["Web Server Virtual Server"]
              },
              "virtualServerDestinationAddress": {
                "type": "string",
                "examples": ["10%2E10%2E10%2E30"],
                "format": "ipv4"
              },
              "virtualServerDestinationPort": {
                "type": "number",
                "examples": ["80"]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "loadBalancer",
            "type": "string",
            "examples": ["F5"]
          },
          {
            "$id": "poolName",
            "type": "string",
            "examples": ["webserver"]
          },
          {
            "$id": "poolDescription",
            "type": "string",
            "examples": ["Main web server"]
          },
          {
            "$id": "poolMembers",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": ["Member1"]
                },
                "servicePort": {
                  "type": "number",
                  "examples": ["80"]
                },
                "address": {
                  "type": "string",
                  "examples": ["30%2E0%2E0%2E1"],
                  "format": "ipv4"
                }
              },
              "required": []
            }
          },
          {
            "$id": "virtualServerName",
            "type": "string",
            "examples": ["webserver-vs"]
          },
          {
            "$id": "virtualServerDescription",
            "type": "string",
            "examples": ["Web Server Virtual Server"]
          },
          {
            "$id": "partition",
            "type": "string",
            "examples": ["Common"]
          },
          {
            "$id": "virtualServerDestinationAddress",
            "type": "string",
            "examples": ["10%2E10%2E10%2E30"],
            "format": "ipv4"
          },
          {
            "$id": "virtualServerDestinationPort",
            "type": "number",
            "examples": ["80"]
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/loadBalancer"
            },
            "to": {
              "location": "outgoing",
              "name": "loadBalancer",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/poolName"
            },
            "to": {
              "location": "outgoing",
              "name": "poolName",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/poolDescription"
            },
            "to": {
              "location": "outgoing",
              "name": "poolDescription",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/poolMembers"
            },
            "to": {
              "location": "outgoing",
              "name": "poolMembers",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/virtualServerName"
            },
            "to": {
              "location": "outgoing",
              "name": "virtualServerName",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/virtualServerDescription"
            },
            "to": {
              "location": "outgoing",
              "name": "virtualServerDescription",
              "ptr": ""
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/partition"
            },
            "to": {
              "location": "outgoing",
              "name": "partition",
              "ptr": ""
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/virtualServerDestinationAddress"
            },
            "to": {
              "location": "outgoing",
              "name": "virtualServerDestinationAddress",
              "ptr": ""
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/virtualServerDestinationPort"
            },
            "to": {
              "location": "outgoing",
              "name": "virtualServerDestinationPort",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-16T18:34:54.108Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:57:59.689Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 6,
      "reference": "629f52353f4bfc0146bbd337",
      "type": "jsonForm",
      "folder": "/Sample Use Cases/Create Pool, Members, and Virtual Server",
      "document": {
        "id": "629f52353f4bfc0146bbd337",
        "created": "2022-06-07T13:27:17.746Z",
        "createdBy": "admin@itential",
        "lastUpdated": "2025-01-24T10:57:59.689Z",
        "lastUpdatedBy": "admin@itential",
        "name": "Create Pool Input",
        "description": "",
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "39ee90f8-31f3-4876-bfbe-f32b58a48cc2",
              "type": "string",
              "title": "Load Balancer",
              "description": "",
              "placeholder": "Choose a Load Balancer",
              "required": true,
              "enum": [
                {
                  "id": "9142f084-5650-4b63-aef1-13ff66451756",
                  "label": "F5",
                  "value": "F5"
                }
              ],
              "binding": false,
              "rel": "collection",
              "targetPointer": "/enum",
              "readOnly": true,
              "default": "F5"
            },
            {
              "nodeId": "d6fc0b57-3eef-4de2-86c5-2a084edda585",
              "type": "string",
              "title": "Partition",
              "description": "",
              "placeholder": "Select a partition",
              "required": true,
              "enum": [
                {
                  "id": "56aa5fbd-2966-47ad-acd5-6580a6c945f1",
                  "label": "Common",
                  "value": "Common"
                }
              ],
              "binding": false,
              "rel": "collection",
              "targetPointer": "/enum",
              "readOnly": true,
              "default": "Common"
            },
            {
              "nodeId": "14bd677c-1bb5-4a23-8822-34fe274e4617",
              "type": "string",
              "title": "Pool Name",
              "description": "",
              "placeholder": "Enter pool name",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "251fb470-03c1-467a-b1eb-92f2af2f152f",
              "type": "string",
              "title": "Pool Description",
              "description": "",
              "placeholder": "Enter a description for the pool",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "3b2ee9ce-3dcd-4cc4-924a-a3b9558cbd41",
              "type": "array",
              "description": "",
              "placeholder": "",
              "required": false,
              "items": [
                {
                  "nodeId": "d353f856-f575-474e-9863-7e4399cdf7f0",
                  "type": "string",
                  "title": "Name",
                  "description": "",
                  "placeholder": "Enter Node Name",
                  "required": true,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default"
                },
                {
                  "nodeId": "e8e4d90c-9467-4e56-ae76-028a0321b2a1",
                  "type": "number",
                  "widget": "updown",
                  "title": "Service Port",
                  "description": "",
                  "placeholder": "Enter a logical port number",
                  "required": true,
                  "minimum": 1,
                  "maximum": 65635
                },
                {
                  "nodeId": "0d1492fb-3ebd-4592-9690-09f5977bda54",
                  "type": "string",
                  "title": "Address",
                  "description": "",
                  "placeholder": "Enter IPv4 Address",
                  "required": true,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default",
                  "format": "ipv4"
                }
              ],
              "title": "Pool Members"
            },
            {
              "nodeId": "bb1e226b-974e-4edf-8706-5c33f18ba95f",
              "type": "string",
              "title": "Virtual Server Name",
              "description": "",
              "placeholder": "Enter the name for virtual server",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "cc09482a-86b2-48c2-a53a-b2963a1eb054",
              "type": "string",
              "title": "Virtual Server Description",
              "description": "",
              "placeholder": "Enter a description for the virtual server",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "dd3d0372-82bc-494f-a461-e1d6020b5b7a",
              "type": "string",
              "title": "Virtual Server Destination Address",
              "description": "",
              "placeholder": "Enter destination address",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "format": "ipv4"
            },
            {
              "nodeId": "66e3788f-4308-499f-9362-080557ada616",
              "type": "number",
              "widget": "updown",
              "title": "Virtual Server Destination Port",
              "description": "",
              "placeholder": "Enter the virtual server destination port",
              "required": true,
              "minimum": 1,
              "maximum": 65635
            }
          ]
        },
        "schema": {
          "title": "Create Pool and Virtual Server - F5 Form",
          "description": "",
          "type": "object",
          "required": [
            "loadBalancer",
            "partition",
            "poolName",
            "poolDescription",
            "virtualServerName",
            "virtualServerDescription",
            "virtualServerDestinationAddress",
            "virtualServerDestinationPort"
          ],
          "properties": {
            "loadBalancer": {
              "type": "string",
              "title": "Load Balancer",
              "description": "",
              "default": "F5",
              "enum": ["F5"]
            },
            "partition": {
              "type": "string",
              "title": "Partition",
              "description": "",
              "default": "Common",
              "enum": ["Common"]
            },
            "poolName": {
              "type": "string",
              "title": "Pool Name",
              "description": ""
            },
            "poolDescription": {
              "type": "string",
              "title": "Pool Description",
              "description": ""
            },
            "poolMembers": {
              "type": "array",
              "title": "Pool Members",
              "description": "",
              "items": {
                "type": "object",
                "required": ["name", "servicePort", "address"],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name",
                    "description": ""
                  },
                  "servicePort": {
                    "type": "number",
                    "title": "Service Port",
                    "description": "",
                    "minimum": 1,
                    "maximum": 65635
                  },
                  "address": {
                    "type": "string",
                    "title": "Address",
                    "description": "",
                    "format": "ipv4"
                  }
                }
              }
            },
            "virtualServerName": {
              "type": "string",
              "title": "Virtual Server Name",
              "description": ""
            },
            "virtualServerDescription": {
              "type": "string",
              "title": "Virtual Server Description",
              "description": ""
            },
            "virtualServerDestinationAddress": {
              "type": "string",
              "title": "Virtual Server Destination Address",
              "description": "",
              "format": "ipv4"
            },
            "virtualServerDestinationPort": {
              "type": "number",
              "title": "Virtual Server Destination Port",
              "description": "",
              "minimum": 1,
              "maximum": 65635
            }
          }
        },
        "uiSchema": {
          "loadBalancer": {
            "ui:placeholder": "Choose a Load Balancer",
            "ui:disabled": true
          },
          "partition": {
            "ui:placeholder": "Select a partition",
            "ui:disabled": true
          },
          "poolName": {
            "ui:placeholder": "Enter pool name"
          },
          "poolDescription": {
            "ui:placeholder": "Enter a description for the pool"
          },
          "poolMembers": {
            "items": {
              "name": {
                "ui:placeholder": "Enter Node Name"
              },
              "servicePort": {
                "ui:placeholder": "Enter a logical port number",
                "ui:widget": "updown"
              },
              "address": {
                "ui:placeholder": "Enter IPv4 Address"
              }
            }
          },
          "virtualServerName": {
            "ui:placeholder": "Enter the name for virtual server"
          },
          "virtualServerDescription": {
            "ui:placeholder": "Enter a description for the virtual server"
          },
          "virtualServerDestinationAddress": {
            "ui:placeholder": "Enter destination address"
          },
          "virtualServerDestinationPort": {
            "ui:placeholder": "Enter the virtual server destination port",
            "ui:widget": "updown"
          }
        },
        "bindingSchema": {
          "properties": {
            "poolMembers": {
              "items": {
                "properties": {}
              }
            }
          }
        },
        "validationSchema": {
          "poolMembers": {}
        },
        "version": "2020.1"
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Create Pool and Members",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 3,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Create Virtual Server",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 2,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Sample Use Cases",
      "children": [
        {
          "nodeType": "folder",
          "name": "Create Pool, Members, and Virtual Server",
          "children": [
            {
              "iid": 6,
              "nodeType": "component"
            },
            {
              "iid": 4,
              "nodeType": "component"
            },
            {
              "iid": 5,
              "nodeType": "component"
            }
          ]
        }
      ]
    }
  ],
  "created": "2024-08-29T20:18:05.047Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T10:57:59.677Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 48,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
