{
  "_id": "66cf5d3521161b4df2717475",
  "name": "Apache Kafka 2.x",
  "description": "Usecase to produce message in Apache Kafka with inputs: topic (string), messages (array of string)",
  "components": [
    {
      "iid": 1,
      "reference": "134f50fc-408a-4028-a511-ee7ba6b67cd0",
      "type": "workflow",
      "folder": "/Produce Message",
      "document": {
        "name": "Produce Message",
        "tasks": {
          "359": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Send Message Status",
            "description": "Send message status",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "status",
                "value": "Failed"
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1212,
              "y": 984
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 876,
              "y": 732
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 876,
              "y": 1308
            }
          },
          "276b": {
            "name": "sendMessage",
            "canvasName": "sendMessage",
            "summary": "Send Message",
            "description": "Send messages on a topic",
            "location": "Adapter",
            "locationType": "Kafkav2",
            "app": "Kafkav2",
            "type": "automatic",
            "displayName": "Kafkav2",
            "variables": {
              "incoming": {
                "payloads": "$var.965c.produceMessageRequest",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.response"
              },
              "error": "$var.job.response",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 876,
              "y": 984
            }
          },
          "edf0": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Send Message Status",
            "description": "Send message status",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "status",
                "value": "Success"
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 876,
              "y": 1116
            }
          },
          "965c": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Produce Message Request - Kafkav2",
            "description": "Build produce message request",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65d3da1dda9691018dd3ec46",
                "variableMap": {
                  "topic": "$var.job.topic",
                  "messages": "$var.job.messages"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "produceMessageRequest": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 876,
              "y": 852
            }
          }
        },
        "transitions": {
          "359": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "965c": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "276b": {
            "359": {
              "state": "error",
              "type": "standard"
            },
            "edf0": {
              "state": "success",
              "type": "standard"
            }
          },
          "edf0": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "965c": {
            "276b": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "topic": {
              "type": "string",
              "examples": ["example-topic"]
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["adapterId", "topic", "messages"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "topic": {
              "type": "string",
              "examples": ["example-topic"]
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "response": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.44.64-2022.1.27.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-17T14:54:04.206Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "65d3da1dda9691018dd3ec46",
      "type": "transformation",
      "folder": "/Produce Message",
      "document": {
        "_id": "65d3da1dda9691018dd3ec46",
        "name": "Build Produce Message Request",
        "description": "Creates request object to produce a list of messages with Kafkav2",
        "incoming": [
          {
            "$id": "topic",
            "type": "string",
            "examples": ["example-topic"]
          },
          {
            "$id": "messages",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "outgoing": [
          {
            "$id": "produceMessageRequest",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "topic": {
                  "type": "string",
                  "examples": ["example-topic"]
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "examples": ["This is a test 1"]
                      }
                    },
                    "required": []
                  }
                }
              },
              "required": []
            }
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "messages",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "topic",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "mapMessageForKafkav2"],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "function",
            "function": "buildRequestBody",
            "args": [null, null],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/buildRequestObject"
            },
            "to": {
              "location": "declaration",
              "name": 6,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "produceMessageRequest",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "string",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "optional": true
              }
            ],
            "outgoing": [
              {
                "$id": "newValue",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "mapMessageForKafkav2",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "mapMessageForKafkav2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "topic",
                "type": "string"
              },
              {
                "$id": "messages",
                "type": "array"
              }
            ],
            "outgoing": [
              {
                "$id": "buildRequestObject",
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "topic",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "buildRequestObject",
                  "ptr": "/topic"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "messages",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "buildRequestObject",
                  "ptr": "/messages"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRequestBody",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRequestBody",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-15T19:59:47.240Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-17T14:54:04.207Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 4,
      "type": "workflow",
      "reference": "d13e3419-4528-4c53-854a-c082b6e89fb1",
      "folder": "/Consume Message",
      "document": {
        "tags": [],
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 0,
              "y": -500
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 0,
              "y": 500
            }
          },
          "aa1f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Kafka Payload",
            "description": "Query kafka message payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.job.payload"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 0,
              "y": -72
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "aa1f": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "aa1f": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "payload": {
              "title": "obj",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "name": "value"
                }
              ]
            }
          },
          "required": ["payload"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "payload": {
              "title": "obj",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-17T14:57:58.720Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.41.0",
        "canvasVersion": 3,
        "name": "Consume Message",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "groups": [],
        "migrationVersion": 3
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Produce Message",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 2,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Consume Message",
      "children": [
        {
          "iid": 4,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-28T17:24:05.402Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-17T14:57:58.728Z",
  "lastUpdatedBy": {
    "_id": "67531c63592f8c45f4eabe88",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 43,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
