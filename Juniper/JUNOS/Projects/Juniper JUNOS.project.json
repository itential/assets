{
  "_id": "66d0d43721161b4df27174c4",
  "name": "Juniper JUNOS",
  "description": "Juniper JUNOS Project has assets for Software Upgrade, Port Turn Up, Push configuration to device, and Command Template Runner",
  "components": [
    {
      "iid": 0,
      "reference": "1f7c3572-af10-487e-b7fd-51881dd69d32",
      "type": "workflow",
      "folder": "/Software Upgrade",
      "document": {
        "name": "Software Upgrade",
        "tasks": {
          "1405": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Reboot",
            "description": "Reboot",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: Reboot"
                  },
                  "templateVariables": {
                    "task": "abb5",
                    "value": "variables"
                  },
                  "devices": {
                    "task": "abb5",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -4212,
              "y": 816
            }
          },
          "2319": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check",
            "description": "Query Pre-Check from child job",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.8db5.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3984,
              "y": 1248
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -4212,
              "y": 324
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -4188,
              "y": 1572
            }
          },
          "8db5": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Pre-Check",
            "description": "JUNOS Pre-Checks",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: Software Upgrade Checks"
                  },
                  "templateVariables": {
                    "task": "abb5",
                    "value": "variables"
                  },
                  "devices": {
                    "task": "abb5",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -4212,
              "y": 564
            }
          },
          "441e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Validate System Up",
            "description": "Validate System Up",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: System Uptime"
                  },
                  "templateVariables": {
                    "task": "abb5",
                    "value": "variables"
                  },
                  "devices": {
                    "task": "abb5",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": true
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 20
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -4212,
              "y": 936
            }
          },
          "60cb": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Post Checks",
            "description": "Post Checks",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: Software Upgrade Checks"
                  },
                  "templateVariables": {
                    "task": "abb5",
                    "value": "variables"
                  },
                  "devices": {
                    "task": "abb5",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -4224,
              "y": 1056
            }
          },
          "a6ff": {
            "name": "runTemplatesDiff",
            "canvasName": "runTemplatesDiff",
            "summary": "Pre Post Compare",
            "description": "Pre Post Comparison",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "pre": "$var.2319.return_data",
                "post": "$var.596a.return_data"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/runTemplatesDiff",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -4704,
              "y": 1392
            }
          },
          "a647": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Add Package",
            "description": "Add Package",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: Add Package"
                  },
                  "templateVariables": {
                    "task": "abb5",
                    "value": "variables"
                  },
                  "devices": {
                    "task": "abb5",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -4212,
              "y": 696
            }
          },
          "596a": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Post-Check",
            "description": "Query Post-Check from child job",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.60cb.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -4404,
              "y": 1236
            }
          },
          "2fda": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Suppress Success",
            "description": "Verify suppress success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -4200,
              "y": 1392
            }
          },
          "abb5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Software Upgrade",
            "description": "Parse JUNOS software upgrade input.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "66d0d43721161b4df27174ca",
                "variableMap": {
                  "directory": "$var.job.directory",
                  "fileName": "$var.job.fileName",
                  "device": "$var.job.device"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "variables": null,
                "deviceArray": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -4212,
              "y": 444
            }
          }
        },
        "transitions": {
          "1405": {
            "441e": {
              "type": "standard",
              "state": "success"
            }
          },
          "2319": {
            "2fda": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "abb5": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "8db5": {
            "a647": {
              "state": "success",
              "type": "standard"
            }
          },
          "441e": {
            "60cb": {
              "type": "standard",
              "state": "success"
            }
          },
          "60cb": {
            "2319": {
              "state": "success",
              "type": "standard"
            },
            "596a": {
              "state": "success",
              "type": "standard"
            }
          },
          "a6ff": {
            "60cb": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "a647": {
            "1405": {
              "type": "standard",
              "state": "success"
            }
          },
          "596a": {
            "2fda": {
              "type": "standard",
              "state": "success"
            }
          },
          "2fda": {
            "a6ff": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "abb5": {
            "8db5": {
              "state": "success",
              "type": "standard"
            }
          },
          "3e6d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "directory": {
              "type": "string",
              "examples": ["/var/tmp"]
            },
            "fileName": {
              "type": "string",
              "examples": ["junos-install-vsrx3-x86-64-22.4R1.10.tgz"]
            },
            "device": {
              "type": "string"
            }
          },
          "required": [
            "suppressSuccessMessage",
            "suppressFailureMessage",
            "directory",
            "fileName",
            "device"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "directory": {
              "type": "string",
              "examples": ["/var/tmp"]
            },
            "fileName": {
              "type": "string",
              "examples": ["junos-install-vsrx3-x86-64-22.4R1.10.tgz"]
            },
            "device": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2025-01-24T14:48:04.131Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.40.5-2021.1.28.0",
        "preAutomationTime": 5400000,
        "sla": 900000,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "63489655-3234-4353-9609-a8737a93adba",
      "type": "workflow",
      "folder": "/Port Turn Up",
      "document": {
        "name": "Port Turn Up",
        "description": "\n\n{\n\n      \"suppressSuccessMessage\": true,\n      \"type\": \"GigabitEthernet\",\n      \"interface\": 1,\n      \"subnetMask\": \"255.255.255.252\",\n      \"customerInfo\": \"mycustomername-12345\",\n      \"device\": \"ios\",\n      \"subInterface\": \"112\",\n      \"description\": \"my desc\",\n      \"ipAddress\": \"110.0.0.1\",\n      \"vlan\": \"112\"\n    }\n  ",
        "tasks": {
          "8878": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Post Check",
            "description": "IOS Interface post-check",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "static",
                    "value": []
                  },
                  "templateName": {
                    "task": "static",
                    "value": ""
                  },
                  "templateVariables": {
                    "task": "static",
                    "value": []
                  },
                  "devices": {
                    "task": "static",
                    "value": []
                  },
                  "reattempt": {
                    "task": "static",
                    "value": []
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "static",
                    "value": []
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1416,
              "y": 1032
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1416,
              "y": 372
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1428,
              "y": 1584
            }
          },
          "936e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Port Turn Up",
            "description": "Port Turn Up",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Push Configuration to Device",
                "variables": {
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "deviceName": {
                    "task": "job",
                    "value": "device"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: Port Turn Up"
                  },
                  "templateVariables": {
                    "task": "cd3a",
                    "value": "variables"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1416,
              "y": 900
            }
          },
          "42d2": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Pre Check",
            "description": "Port Turn Up Pre Check",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0d43721161b4df27174c4: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0d43721161b4df27174c4: Pre Checks"
                  },
                  "templateVariables": {
                    "task": "cd3a",
                    "value": "variables"
                  },
                  "devices": {
                    "task": "cd3a",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1416,
              "y": 600
            }
          },
          "8d0b": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Eval Pre-Check",
            "description": "Eval Pre-Check",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "templateResults.result",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "42d2"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1416,
              "y": 732
            }
          },
          "e76": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Pre-Check Failure",
            "description": "The pre-check has failed",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Pre-Check Failure",
                "message": "Pre-Check has failed. Abort Job or Retry?",
                "body": "",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1008,
              "y": 732
            }
          },
          "fb74": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Suppress Success",
            "description": "Verify Suppress Success",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1416,
              "y": 1188
            }
          },
          "1aa8": {
            "name": "runTemplatesDiff",
            "canvasName": "runTemplatesDiff",
            "summary": "Compare Pre Post",
            "description": "MOP Diff Config",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "pre": "$var.e4f3.return_data",
                "post": "$var.643c.return_data"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/runTemplatesDiff",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1056,
              "y": 1428
            }
          },
          "e4f3": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre Check",
            "description": "Query Pre Check for diff",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.42d2.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1056,
              "y": 1188
            }
          },
          "643c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Post Check",
            "description": "Query Post Check for diff",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.8878.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1056,
              "y": 1308
            }
          },
          "c26d": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "End Job",
            "description": "End Job",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 672,
              "y": 1440
            }
          },
          "cd3a": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Port Turn Up",
            "description": "Port Turn Up - IOS",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "66d0d43721161b4df27174c9",
                "variableMap": {
                  "interface": "$var.job.interface",
                  "cidr": "$var.job.cidr",
                  "subInterface": "$var.job.subInterface",
                  "description": "$var.job.description",
                  "ipAddress": "$var.job.ipAddress",
                  "vlan": "$var.job.vlan",
                  "device": "$var.job.device"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "variables": null,
                "deviceArray": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Provision Interface - IOS",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1416,
              "y": 480
            }
          }
        },
        "transitions": {
          "6949": {},
          "8878": {
            "fb74": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "cd3a": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "936e": {
            "8878": {
              "type": "standard",
              "state": "success"
            }
          },
          "42d2": {
            "8d0b": {
              "type": "standard",
              "state": "success"
            }
          },
          "8d0b": {
            "936e": {
              "type": "standard",
              "state": "success"
            },
            "e76": {
              "type": "standard",
              "state": "failure"
            }
          },
          "e76": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "42d2": {
              "type": "revert",
              "state": "success"
            }
          },
          "fb74": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "e4f3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "1aa8": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "c26d": {
              "type": "standard",
              "state": "failure"
            }
          },
          "e4f3": {
            "643c": {
              "state": "success",
              "type": "standard"
            }
          },
          "643c": {
            "1aa8": {
              "type": "standard",
              "state": "success"
            }
          },
          "c26d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "cd3a": {
            "42d2": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": "string"
            },
            "interface": {
              "type": "string",
              "examples": ["1"]
            },
            "cidr": {
              "type": "string",
              "examples": ["30"]
            },
            "subInterface": {
              "type": "string",
              "examples": ["100"]
            },
            "description": {
              "type": "string",
              "examples": ["my interface"]
            },
            "ipAddress": {
              "type": "string",
              "examples": ["10%2E10%2E10%2E10"],
              "format": "ipv4"
            },
            "vlan": {
              "type": "string",
              "examples": ["200"]
            }
          },
          "required": [
            "suppressFailureMessage",
            "suppressSuccessMessage",
            "device",
            "interface",
            "cidr",
            "subInterface",
            "description",
            "ipAddress",
            "vlan"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": "string"
            },
            "interface": {
              "type": "string",
              "examples": ["1"]
            },
            "cidr": {
              "type": "string",
              "examples": ["30"]
            },
            "subInterface": {
              "type": "string",
              "examples": ["100"]
            },
            "description": {
              "type": "string",
              "examples": ["my interface"]
            },
            "ipAddress": {
              "type": "string",
              "examples": ["10%2E10%2E10%2E10"],
              "format": "ipv4"
            },
            "vlan": {
              "type": "string",
              "examples": ["200"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.30.0",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T14:48:04.133Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "83d598ff-9a7f-4cba-80df-40b964a66af4",
      "type": "workflow",
      "folder": "/Push Configuration",
      "document": {
        "name": "Push Configuration to Device",
        "tasks": {
          "3509": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Configuration Change Jinja - Juniper",
            "description": "Configuration Change Jinja - Juniper",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "641488cfe8f5ca00d76b525e",
                "variableMap": {
                  "jobId": "$var.job._id",
                  "deviceName": "$var.job.deviceName",
                  "renderedTemplate": "$var.b9ed.renderedTemplate"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "configDryRun": null,
                "configDryRunArray": null,
                "configCommit": null,
                "configCommitArray": null,
                "deviceArray": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Configuration Change Jinja - Juniper",
            "retrySettings": null,
            "nodeLocation": {
              "x": -2220,
              "y": 396
            }
          },
          "9604": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Config Dry Run",
            "description": "Query config dry run from output",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": true,
                "query": "completed[0].response[1].results.stdout_lines",
                "obj": "$var.a3e8.stdout"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2220,
              "y": 828
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2220,
              "y": 156
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2196,
              "y": 1968
            }
          },
          "ca47": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "Provision",
            "description": "Provision",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.3509.deviceArray",
                "_groups": "",
                "command": "$var.3509.configCommitArray"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2208,
              "y": 1536
            }
          },
          "b9ed": {
            "name": "renderJinjaTemplate",
            "canvasName": "renderJinjaTemplate",
            "summary": "Render Device Configuration",
            "description": "Render Device Configuration",
            "location": "Application",
            "locationType": null,
            "app": "TemplateBuilder",
            "type": "automatic",
            "displayName": "TemplateBuilder",
            "variables": {
              "incoming": {
                "name": "$var.job.templateName",
                "context": "$var.job.templateVariables"
              },
              "outgoing": {
                "renderedTemplate": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2220,
              "y": 264
            }
          },
          "7a4c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Commit Error",
            "description": "View IAG Error for Commit",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Commit Configuration Error",
                "message": "The configuration had an error, retry or abort?",
                "body": "$var.ca47.stdout",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1440,
              "y": 1536
            }
          },
          "f14d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Eval Success",
            "description": "Eval Success",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "completed[0].response[*].status",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "ca47"
                        },
                        "operator": "!contains",
                        "operand_2": {
                          "variable": "FAILURE",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2208,
              "y": 1680
            }
          },
          "cba5": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Dry Run",
            "description": "View Configuration dry run",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Configuration",
                "message": "Approve or Reject the proposed configuration.",
                "body": "$var.773f.scrubbed",
                "variables": {},
                "btn_success": "Provision",
                "btn_failure": "Retry"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2784,
              "y": 1380
            }
          },
          "c4c9": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Suppress Success",
            "description": "Verify Suppress Success",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2208,
              "y": 1380
            }
          },
          "a3e8": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "Config Dry Run",
            "description": "Ansible Role itential_cli to config dry run",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.3509.deviceArray",
                "_groups": "",
                "command": "$var.3509.configDryRunArray"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2220,
              "y": 528
            }
          },
          "773f": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Clean Dry Run Response",
            "description": "Clean Dry Run Response",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "64149390e8f5ca00d76b525f",
                "variableMap": {
                  "dryRunArray": "$var.9604.return_data"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "scrubbed": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Clean Dry Run Response",
            "retrySettings": null,
            "nodeLocation": {
              "x": -2220,
              "y": 960
            }
          },
          "a98a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Eval failure",
            "description": "Run an evaluation for failure",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "completed[0].response[*][status=FAILURE].status",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "a3e8"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "FAILURE",
                          "task": "static"
                        },
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2220,
              "y": 672
            }
          },
          "cd46": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Dry Run Error",
            "description": "View Dry Run Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Dry Run Configuration Error",
                "message": "The configuration had an error, retry or abort?",
                "body": "$var.a3e8.stdout",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2952,
              "y": 516
            }
          },
          "61bf": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "DryRun",
            "description": "get dryrun for job var",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "$var.773f.scrubbed",
                "outputType": "string",
                "variables": ""
              },
              "outgoing": {
                "output": "$var.job.dryRunOutput"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2208,
              "y": 1236
            }
          },
          "7edd": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Config Change",
            "description": "Config Change",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "$var.773f.scrubbed",
                "outputType": "string",
                "variables": ""
              },
              "outgoing": {
                "output": "$var.job.configChange"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2208,
              "y": 1104
            }
          },
          "718e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Suppress Failure",
            "description": "Verify Suppress Failure",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "true"
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -2580,
              "y": 528
            }
          },
          "45d4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Suppress Failure",
            "description": "Verify Suppress Failure",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "true"
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1824,
              "y": 1524
            }
          }
        },
        "transitions": {
          "3509": {
            "a3e8": {
              "type": "standard",
              "state": "success"
            }
          },
          "9604": {
            "773f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "b9ed": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "ca47": {
            "f14d": {
              "type": "standard",
              "state": "success"
            },
            "45d4": {
              "type": "standard",
              "state": "error"
            }
          },
          "b9ed": {
            "3509": {
              "type": "standard",
              "state": "success"
            }
          },
          "7a4c": {
            "b9ed": {
              "type": "revert",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f14d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "45d4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "cba5": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "b9ed": {
              "type": "revert",
              "state": "failure"
            }
          },
          "c4c9": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "cba5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "a3e8": {
            "a98a": {
              "type": "standard",
              "state": "success"
            },
            "718e": {
              "type": "standard",
              "state": "error"
            }
          },
          "773f": {
            "7edd": {
              "type": "standard",
              "state": "success"
            }
          },
          "a98a": {
            "9604": {
              "type": "standard",
              "state": "success"
            },
            "718e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "cd46": {
            "b9ed": {
              "type": "revert",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "61bf": {
            "c4c9": {
              "type": "standard",
              "state": "success"
            }
          },
          "7edd": {
            "61bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "718e": {
            "cd46": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "45d4": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "7a4c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ed0d": {},
          "7a2f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "_id",
            "deviceName",
            "templateName",
            "templateVariables",
            "suppressSuccessMessage",
            "suppressFailureMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "deviceName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "initiator": {
              "type": "string"
            },
            "dryRunOutput": {
              "title": "output",
              "type": ["array", "string", "boolean", "number", "object"]
            },
            "configChange": {
              "title": "output",
              "type": ["array", "string", "boolean", "number", "object"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2025-01-24T14:48:04.135Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.44.64-2022.1.27.0",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "c9a7c4c4-05b9-4da5-bd2a-bce5c5d1bd0f",
      "type": "workflow",
      "folder": "/Command Template Runner",
      "document": {
        "name": "Command Template Runner",
        "tasks": {
          "525": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 564,
              "y": 468
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 252,
              "y": 24
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 240,
              "y": 1248
            }
          },
          "8ce4": {
            "name": "RunCommandTemplate",
            "canvasName": "RunCommandTemplate",
            "summary": "Run Command Template against Device",
            "description": "Run a Command Template against a device",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "template": "$var.job.templateName",
                "variables": "$var.job.templateVariables",
                "devices": "$var.job.devices"
              },
              "outgoing": {
                "mop_template_results": "$var.job.templateResults"
              },
              "error": "$var.job.templateError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 264,
              "y": 192
            }
          },
          "81d8": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 564,
              "y": 684
            }
          },
          "f1a7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Template Error",
            "description": "Show the template failure message and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Template Errored",
                "message": "$var.a7f3.errorMessage",
                "body": "$var.8ce4.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Continue"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -804,
              "y": 1080
            }
          },
          "543a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Errored and If Reattempting",
            "description": "Check if template errored and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -276,
              "y": 228
            }
          },
          "849c": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Reattempt Template",
            "description": "Reattempt the template after waiting the specified number of minutes",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "connection",
                "minutes": "$var.job.reattemptWaitTime",
                "attempts": "$var.job.reattemptQuantity"
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -84,
              "y": 684
            }
          },
          "f884": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Reattempting",
            "description": "Check if template failed and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -84,
              "y": 360
            }
          },
          "b1a0": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 900,
              "y": 480
            }
          },
          "fe84": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 240,
              "y": 684
            }
          },
          "6bd2": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Not Reattempting",
            "description": "Check if template failed and if not reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 252,
              "y": 468
            }
          },
          "9c18": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -624,
              "y": 216
            }
          },
          "955f": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -492,
              "y": 684
            }
          },
          "f36c": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1188,
              "y": 720
            }
          },
          "a7f3": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Command Template Runner Error Message",
            "description": "Create Command Template Runner error message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6553e5b9fb4afe017442d30c",
                "variableMap": {
                  "templateName": "$var.job.templateName"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "errorMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -828,
              "y": 936
            }
          },
          "580e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Template Errored",
            "description": "Check if template errored",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "8ce4",
                          "variable": "error"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -852,
              "y": 708
            }
          }
        },
        "transitions": {
          "525": {
            "81d8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "8ce4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "8ce4": {
            "525": {
              "type": "standard",
              "state": "success"
            },
            "543a": {
              "type": "standard",
              "state": "error"
            },
            "f884": {
              "type": "standard",
              "state": "success"
            },
            "b1a0": {
              "type": "standard",
              "state": "success"
            },
            "6bd2": {
              "type": "standard",
              "state": "success"
            }
          },
          "81d8": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f1a7": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "8ce4": {
              "type": "revert",
              "state": "success"
            }
          },
          "543a": {
            "849c": {
              "type": "standard",
              "state": "success"
            },
            "9c18": {
              "type": "standard",
              "state": "failure"
            }
          },
          "849c": {
            "8ce4": {
              "type": "revert",
              "state": "success"
            },
            "955f": {
              "state": "error",
              "type": "standard"
            }
          },
          "f884": {
            "849c": {
              "type": "standard",
              "state": "success"
            }
          },
          "b1a0": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe84": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "81d8": {
              "type": "standard",
              "state": "failure"
            }
          },
          "6bd2": {
            "fe84": {
              "state": "success",
              "type": "standard"
            }
          },
          "9c18": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "a7f3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "955f": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "580e": {
              "state": "failure",
              "type": "standard"
            }
          },
          "f36c": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "a7f3": {
            "f1a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "580e": {
            "f36c": {
              "state": "failure",
              "type": "standard"
            },
            "a7f3": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["Device 2", "Device 1"]
              }
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": ["test"]
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "suppressSuccessMessage",
            "templateName",
            "templateVariables",
            "devices",
            "reattempt",
            "_id",
            "reattemptWaitTime",
            "reattemptQuantity",
            "suppressFailureMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["Device 2", "Device 1"]
              }
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "initiator": {
              "type": "string"
            },
            "templateResults": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "all_pass_flag": {
                  "type": "boolean"
                },
                "evaluated": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "parameters": {
                  "type": "object",
                  "properties": {}
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rule": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "eval": {
                        "type": "string",
                        "examples": ["contains"]
                      },
                      "raw": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "result": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "device": {
                  "type": "string",
                  "examples": ["device1"]
                },
                "response": {
                  "type": "string",
                  "examples": ["version: 10.0.0"]
                },
                "result": {
                  "type": "boolean"
                }
              }
            },
            "templateError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.30.0",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated": "2025-01-24T14:48:04.135Z",
        "created": "2024-08-29T20:04:07.760Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "@66d0d43721161b4df27174c4: Add Package",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Add Package",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "request system software add <!directory!>/<!fileName!> no-validate",
            "passRule": true,
            "rules": [
              {
                "rule": "NOTICE: 'pending' set will be activated at next reboot...",
                "eval": "contains",
                "severity": "error"
              },
              {
                "rule": "ERROR",
                "eval": "!contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724976278490,
        "createdBy": null,
        "lastUpdated": 1737730084139,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 5,
      "reference": "@66d0d43721161b4df27174c4: Post Checks",
      "type": "mopCommandTemplate",
      "folder": "/Port Turn Up",
      "document": {
        "tags": [],
        "name": "Post Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show configuration interfaces <!interface!> unit <!subInterface!>",
            "passRule": true,
            "rules": [
              {
                "rule": "vlan-id <!vlan!>",
                "eval": "contains",
                "severity": "error"
              },
              {
                "rule": "address <!ipAddress!>/<!cidr!>;",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show chassis alarms",
            "passRule": true,
            "rules": [
              {
                "rule": "No alarms currently active",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1725007450283,
        "createdBy": null,
        "lastUpdated": 1737730084142,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 6,
      "reference": "@66d0d43721161b4df27174c4: Pre Checks",
      "type": "mopCommandTemplate",
      "folder": "/Port Turn Up",
      "document": {
        "tags": [],
        "name": "Pre Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show configuration interfaces <!interface!> unit <!subInterface!>",
            "passRule": true,
            "rules": [
              {
                "rule": "vlan-id <!vlan!>",
                "eval": "!contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show chassis alarms",
            "passRule": true,
            "rules": [
              {
                "rule": "No alarms currently active",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1725007444090,
        "createdBy": null,
        "lastUpdated": 1737730084146,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 7,
      "reference": "@66d0d43721161b4df27174c4: Reboot",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Reboot",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "request system reboot\nyes",
            "passRule": true,
            "rules": [
              {
                "rule": "System shutdown message from .*",
                "eval": "RegEx",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724976282140,
        "createdBy": null,
        "lastUpdated": 1737730084153,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 8,
      "reference": "@66d0d43721161b4df27174c4: Software Upgrade Checks",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Software Upgrade Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show system uptime",
            "passRule": true,
            "rules": [
              {
                "rule": "Current time",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show system software",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error",
                "evaluation": "pass"
              }
            ]
          },
          {
            "command": "show chassis alarms",
            "passRule": true,
            "rules": [
              {
                "rule": "No alarms currently active",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show version",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "file list <!directory!>",
            "passRule": true,
            "rules": [
              {
                "rule": "No such file or directory",
                "eval": "!contains",
                "severity": "error",
                "flags": {
                  "case": true
                }
              },
              {
                "rule": "<!fileName!>",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724976252353,
        "createdBy": null,
        "lastUpdated": 1737730084147,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 9,
      "reference": "@66d0d43721161b4df27174c4: System Uptime",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "System Uptime",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show system uptime",
            "passRule": true,
            "rules": [
              {
                "rule": "System booted",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724976285764,
        "createdBy": null,
        "lastUpdated": 1737730084154,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 10,
      "reference": "66d0d43721161b4df27174c6",
      "type": "template",
      "folder": "/Port Turn Up",
      "document": {
        "_id": "66d0d43721161b4df27174c6",
        "command": "",
        "template": "set interfaces {{interface}} vlan-tagging\nset interfaces {{interface}} unit {{subInterface}} description {{description}}\nset interfaces {{interface}} unit {{subInterface}} vlan-id {{vlan}}\nset interfaces {{interface}} unit {{subInterface}} family inet address {{ipAddress}}/{{cidr}}\n",
        "type": "jinja2",
        "version": 1,
        "tags": [],
        "name": "Port Turn Up",
        "data": "{\n  \"interface\": \"ge-0/0/1\",\n  \"subInterface\": \"100\",\n  \"description\":\"test\",\n  \"ipAddress\":\"10.0.0.2\",\n  \"cidr\": \"30\",\n  \"vlan\":\"100\"\n}",
        "group": "Juniper JUNOS Configs",
        "description": "",
        "created": "2024-08-29T20:04:07.767Z",
        "lastUpdated": "2025-01-24T14:48:04.137Z",
        "createdBy": {
          "_id": "6786b32af921f091fd105007",
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false
        }
      }
    },
    {
      "iid": 11,
      "reference": "66d0d43721161b4df27174c7",
      "type": "transformation",
      "folder": "/Push Configuration",
      "document": {
        "_id": "66d0d43721161b4df27174c7",
        "name": "Push Configuration to Device",
        "description": "",
        "incoming": [
          {
            "$id": "jobId",
            "type": "string",
            "examples": ["aaa1111"]
          },
          {
            "$id": "deviceName",
            "type": "string",
            "examples": ["device-name"]
          },
          {
            "$id": "renderedTemplate",
            "type": "object",
            "properties": {
              "renderedTemplate": {
                "type": "string",
                "examples": ["set system login message test"]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "configDryRun",
            "type": "string"
          },
          {
            "$id": "configDryRunArray",
            "type": "array"
          },
          {
            "$id": "configCommit",
            "type": "string"
          },
          {
            "$id": "configCommitArray",
            "type": "array"
          },
          {
            "$id": "deviceArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "configure \n#configure exclusive\n\n\n${config}\nshow | compare\nrollback 0\nexit\n",
            "args": [null],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "configure\n\n\n\n${config}\ncommit comment \"IAP job: ${jobId}\" and-quit\nexit\n",
            "args": [null, null],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "jobId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 3,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configCommit",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configDryRun",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedTemplate",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedTemplate",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "template",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "method",
            "library": "Array",
            "method": "push",
            "args": [[], null],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 10,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "method",
            "library": "Array",
            "method": "push",
            "args": [[], null],
            "view": {
              "row": 4,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 12,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 12,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configCommitArray",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configDryRunArray",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 16,
            "type": "method",
            "library": "Array",
            "method": "push",
            "args": [[], null],
            "view": {
              "row": 5,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 16,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 6
        },
        "created": "2025-01-24T11:20:33.067Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T14:48:04.148Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 12,
      "reference": "66d0d43721161b4df27174c8",
      "type": "transformation",
      "folder": "/Push Configuration",
      "document": {
        "_id": "66d0d43721161b4df27174c8",
        "name": "Configuration Dry Run Cleaner",
        "description": "",
        "incoming": [
          {
            "$id": "dryRunArray",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["configure exclusive "]
            }
          }
        ],
        "outgoing": [
          {
            "$id": "scrubbed",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "join",
            "args": [null, "\n"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "dryRunArray",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "scrubbed",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-24T11:20:33.080Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T14:48:04.150Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 13,
      "reference": "66d0d43721161b4df27174c9",
      "type": "transformation",
      "folder": "/Port Turn Up",
      "document": {
        "_id": "66d0d43721161b4df27174c9",
        "name": "Port Turn Up",
        "description": "",
        "incoming": [
          {
            "$id": "interface",
            "type": "string",
            "examples": ["1"]
          },
          {
            "$id": "cidr",
            "type": "string",
            "examples": ["30"]
          },
          {
            "$id": "subInterface",
            "type": "string",
            "examples": ["100"]
          },
          {
            "$id": "description",
            "type": "string",
            "examples": ["my interface"]
          },
          {
            "$id": "ipAddress",
            "type": "string",
            "examples": ["10%2E10%2E10%2E10"],
            "format": "ipv4"
          },
          {
            "$id": "vlan",
            "type": "string",
            "examples": ["200"]
          },
          {
            "$id": "device",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "variables",
            "type": "object",
            "properties": {
              "interface": {
                "type": "string",
                "examples": ["ge-0/0/1"]
              },
              "cidr": {
                "type": "string",
                "examples": ["30"]
              },
              "subInterface": {
                "type": "string",
                "examples": ["106"]
              },
              "description": {
                "type": "string",
                "examples": ["test"]
              },
              "ipAddress": {
                "type": "string",
                "examples": ["10.0.0.6"],
                "format": "ipv4"
              },
              "vlan": {
                "type": "string",
                "examples": ["106"]
              }
            },
            "required": []
          },
          {
            "$id": "deviceArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/description"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ipAddress",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/ipAddress"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "subInterface",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/subInterface"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vlan",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/vlan"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "interface",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/interface"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "cidr",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/cidr"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "device",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 10,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-24T11:20:33.079Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T14:48:04.151Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 14,
      "reference": "66d0d43721161b4df27174ca",
      "type": "transformation",
      "folder": "/Software Upgrade",
      "document": {
        "_id": "66d0d43721161b4df27174ca",
        "name": "Software Upgrade",
        "description": "",
        "incoming": [
          {
            "$id": "directory",
            "type": "string",
            "examples": ["/var/tmp"]
          },
          {
            "$id": "fileName",
            "type": "string",
            "examples": ["junos-install-vsrx3-x86-64-22.4R1.10.tgz"]
          },
          {
            "$id": "device",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "variables",
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "examples": ["/var/tmp"]
              },
              "fileName": {
                "type": "string",
                "examples": ["junos-install-vsrx3-x86-64-22.4R1.10.tgz"]
              }
            },
            "required": []
          },
          {
            "$id": "deviceArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "fileName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/fileName"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "directory",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "variables",
              "ptr": "/directory"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "device",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-24T11:20:33.078Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T14:48:04.152Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 15,
      "reference": "66d0d43721161b4df27174cb",
      "type": "transformation",
      "folder": "/Command Template Runner",
      "document": {
        "_id": "66d0d43721161b4df27174cb",
        "name": "Create Command Template Runner Error Message",
        "description": "Create Command Template Runner error message",
        "incoming": [
          {
            "$id": "templateName",
            "type": "string",
            "examples": ["Template A"]
          }
        ],
        "outgoing": [
          {
            "$id": "errorMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "templateName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "The Command Template ${templateName} has errored. See details below. Select \"Retry\" to retry Command Template or select \"Continue\" to continue to end of job.",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "errorMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-24T11:20:33.084Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T14:48:04.153Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Software Upgrade",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 14,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        },
        {
          "iid": 4,
          "nodeType": "component"
        },
        {
          "iid": 7,
          "nodeType": "component"
        },
        {
          "iid": 9,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Port Turn Up",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 13,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        },
        {
          "iid": 10,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Command Template Runner",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 15,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Push Configuration",
      "children": [
        {
          "iid": 2,
          "nodeType": "component"
        },
        {
          "iid": 11,
          "nodeType": "component"
        },
        {
          "iid": 12,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-29T20:04:07.724Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T14:48:04.166Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 68,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
