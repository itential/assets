{
  "_id": "66cf772321161b4df271748f",
  "name": "IP Fabric",
  "description": "IP Fabric asset includes create network snapshot, compare snapshot inventory, compare network routes from snapshots, and analyze service path.",
  "components": [
    {
      "iid": 0,
      "reference": "0d27c745-c307-465d-8f4b-2101af9776a0",
      "type": "workflow",
      "folder": "/",
      "document": {
        "name": "Compare Network Routes From Snapshots",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 240,
              "y": 564
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 240,
              "y": 912
            }
          },
          "a937": {
            "name": "postTablesNetworksRoutes",
            "canvasName": "postTablesNetworksRoutes",
            "summary": "Get Network Routes From Last Snapshot",
            "description": "Get network routes from the last snapshot",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IpFabric",
            "variables": {
              "incoming": {
                "body": {
                  "columns": [
                    "id",
                    "sn",
                    "hostname",
                    "siteName",
                    "network",
                    "prefix",
                    "protocol",
                    "vrf",
                    "nhCount",
                    "nhLowestAge",
                    "nhLowestMetric",
                    "nexthop"
                  ],
                  "filters": {},
                  "pagination": {
                    "limit": 33,
                    "start": 0
                  },
                  "snapshot": "$last",
                  "sort": {
                    "order": "desc",
                    "column": "network"
                  }
                },
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 240,
              "y": 660
            }
          },
          "d4ce": {
            "name": "ViewDiff",
            "canvasName": "ViewDiff",
            "summary": "Compare Network Routes",
            "description": "Compare network routes",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Difference in Network Routes",
                "message": "",
                "label1": "Network Routes from LAST",
                "value1": "$var.a937.result",
                "label2": "Network Routes from Previous to LAST",
                "value2": "$var.4c89.result",
                "btn_success": "Success",
                "btn_failure": ""
              },
              "outgoing": {},
              "task": true,
              "error": ""
            },
            "view": "/workflow_engine/task/ViewDiff",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 240,
              "y": 828
            }
          },
          "4c89": {
            "name": "postTablesNetworksRoutes",
            "canvasName": "postTablesNetworksRoutes",
            "summary": "Get Network Routes From Previous To Last Snapshot",
            "description": "Get network routes from previous to last snapshot",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IpFabric",
            "variables": {
              "incoming": {
                "body": {
                  "columns": [
                    "id",
                    "sn",
                    "hostname",
                    "siteName",
                    "network",
                    "prefix",
                    "protocol",
                    "vrf",
                    "nhCount",
                    "nhLowestAge",
                    "nhLowestMetric",
                    "nexthop"
                  ],
                  "filters": {},
                  "pagination": {
                    "limit": 33,
                    "start": 0
                  },
                  "snapshot": "$prev",
                  "sort": {
                    "order": "desc",
                    "column": "network"
                  }
                },
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 240,
              "y": 744
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "a937": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a937": {
            "4c89": {
              "type": "standard",
              "state": "success"
            }
          },
          "d4ce": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "4c89": {
            "d4ce": {
              "type": "standard",
              "state": "success"
            }
          },
          "30c5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.29.14-2020.2.47.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-23T21:10:30.375Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "3e2dbc92-6a6f-4f6f-a8ae-b177fd922560",
      "type": "workflow",
      "folder": "/Compare Snapshot Inventory",
      "document": {
        "name": "Compare Snapshot Inventory",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 168,
              "y": 552
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 180,
              "y": 1032
            }
          },
          "ec60": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Removed Devices",
            "description": "Query removed devices",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.data[*status=removed]",
                "obj": "$var.a630.result"
              },
              "outgoing": {
                "return_data": "$var.job.devicesRemoved"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 24,
              "y": 960
            }
          },
          "79a9": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Newly Added Devices",
            "description": "Query newly added devices",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.data[*status=added]",
                "obj": "$var.a630.result"
              },
              "outgoing": {
                "return_data": "$var.job.devicesAdded"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 336,
              "y": 960
            }
          },
          "5df2": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Second Last Snapshot ID",
            "description": "Query second last snapshot ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response._meta.snapshot",
                "obj": "$var.a541.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 24,
              "y": 720
            }
          },
          "4cfa": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Last Snapshot ID",
            "description": "Query last snapshot ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response._meta.snapshot",
                "obj": "$var.3f89.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 324,
              "y": 720
            }
          },
          "83af": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Inventory Diff Payload",
            "description": "Create inventory diff payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "60d1f5de24b88d0119edef27",
                "variableMap": {
                  "snapshotidlast": "$var.4cfa.return_data",
                  "snapshotidprev": "$var.5df2.return_data"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "payload": null,
                "snapshotidlast": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "CreateInvDiffPayload",
            "retrySettings": null,
            "nodeLocation": {
              "x": 180,
              "y": 804
            }
          },
          "3f89": {
            "name": "postTablesInventorySites",
            "canvasName": "postTablesInventorySites",
            "summary": "Identify Last Inventory Snapshot",
            "description": "This task requests the more recent inventory snapshot from IP Fabric",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IPFabric",
            "variables": {
              "incoming": {
                "body": {
                  "columns": ["id"],
                  "filters": {},
                  "snapshot": "$last"
                },
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 324,
              "y": 636
            }
          },
          "a541": {
            "name": "postTablesInventorySites",
            "canvasName": "postTablesInventorySites",
            "summary": "Identify Previous Inventory Snapshot",
            "description": "This task requests the second more recent inventory snapshot from IP Fabric",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IPFabric",
            "variables": {
              "incoming": {
                "body": {
                  "columns": ["id"],
                  "filters": {},
                  "snapshot": "$prev"
                },
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 24,
              "y": 636
            }
          },
          "a630": {
            "name": "deviceDiff",
            "canvasName": "deviceDiff",
            "summary": "Get Inventory Difference",
            "description": "Difference in devices after changes have been made",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IPFabric",
            "variables": {
              "incoming": {
                "body": "$var.83af.payload",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 180,
              "y": 888
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "3f89": {
              "state": "success",
              "type": "standard"
            },
            "a541": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "ec60": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "79a9": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5df2": {
            "83af": {
              "type": "standard",
              "state": "success"
            }
          },
          "4cfa": {
            "83af": {
              "type": "standard",
              "state": "success"
            }
          },
          "83af": {
            "a630": {
              "state": "success",
              "type": "standard"
            }
          },
          "3f89": {
            "4cfa": {
              "state": "success",
              "type": "standard"
            }
          },
          "a541": {
            "5df2": {
              "state": "success",
              "type": "standard"
            }
          },
          "a630": {
            "79a9": {
              "state": "success",
              "type": "standard"
            },
            "ec60": {
              "state": "success",
              "type": "standard"
            }
          },
          "d0f2": {},
          "f64f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "devicesRemoved": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "devicesAdded": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2025-01-23T21:10:30.376Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.29.14-2020.2.47",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "6305c5d8-2282-4029-b4e2-3890701a4b37",
      "type": "workflow",
      "folder": "/",
      "document": {
        "name": "Create Network Snapshot",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 36,
              "y": 744
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 36,
              "y": 996
            }
          },
          "f89": {
            "name": "createSnapshot",
            "canvasName": "createSnapshot",
            "summary": "Create New Snapshot",
            "description": "Create new snapshot with global or new settings",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IpFabric",
            "variables": {
              "incoming": {
                "body": "$var.bcb1.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.snapshotDetails"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 36,
              "y": 912
            }
          },
          "bcb1": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Inputs",
            "description": "Merge inputs to create snapshot payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "snapshotName",
                    "value": {
                      "task": "job",
                      "variable": "snapshotName"
                    }
                  },
                  {
                    "key": "snapshotNote",
                    "value": {
                      "task": "job",
                      "variable": "snapshotNote"
                    }
                  },
                  {
                    "key": "credentials",
                    "value": {
                      "task": "job",
                      "variable": "credentials"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 36,
              "y": 828
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "bcb1": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "f89": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "bcb1": {
            "f89": {
              "state": "success",
              "type": "standard"
            }
          },
          "d0f2": {},
          "f64f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "snapshotName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "snapshotNote": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "credentials": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "adapterId",
            "snapshotName",
            "snapshotNote",
            "credentials"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "snapshotName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "snapshotNote": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "credentials": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "snapshotDetails": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2025-01-23T21:10:30.377Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.29.14-2020.2.47.0",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "b439ae5a-8b38-4f0e-9448-4afda1989e61",
      "type": "workflow",
      "folder": "/Analyze Service Path",
      "document": {
        "name": "Analyze Service Path",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1140,
              "y": 192
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1140,
              "y": 864
            }
          },
          "a1": {
            "name": "pathLookup",
            "canvasName": "pathLookup",
            "summary": "End To End Application Path Lookup",
            "description": "End to end application path lookup",
            "location": "Adapter",
            "locationType": "IpFabric",
            "app": "IpFabric",
            "type": "automatic",
            "displayName": "IpFabric",
            "variables": {
              "incoming": {
                "body": "$var.326b.pathLookUpPayload",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1140,
              "y": 384
            }
          },
          "eb4a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Evaluate Topic ACL",
            "description": "Topic ACL",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "ACL.30",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "11ce"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1452,
              "y": 492
            }
          },
          "71af": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Evaluate Topic Forwarding",
            "description": "Topic Forwarding",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": true,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "FORWARDING.0",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "11ce"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      },
                      {
                        "query": "FORWARDING.10",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "11ce"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      },
                      {
                        "query": "FORWARDING.20",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "11ce"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      },
                      {
                        "query": "FORWARDING.30",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "11ce"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1140,
              "y": 564
            }
          },
          "509d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Evaluate Topic ZONEFW",
            "description": "ZONEFW",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": true,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "ZONEFW.30",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "11ce"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1452,
              "y": 408
            }
          },
          "11ce": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Topics",
            "description": "Query topics",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.pathlookup.eventsSummary.topics",
                "obj": "$var.a1.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1140,
              "y": 468
            }
          },
          "282e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Operations Topics Are All True",
            "description": "Verify operations topics are all true",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": true,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_value",
                          "task": "509d"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_value",
                          "task": "71af"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_value",
                          "task": "eb4a"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1140,
              "y": 660
            }
          },
          "326b": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Path Lookup Payload",
            "description": "Create path lookup payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6399ffec2c79bd019461556d",
                "variableMap": {
                  "source": "$var.job.source",
                  "destination": "$var.job.destination",
                  "sourcePort": "$var.job.sourcePort",
                  "destinationPort": "$var.job.destinationPort",
                  "protocol": "$var.job.protocol"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "pathLookUpPayload": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "PreBuiltPathLookUp",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1140,
              "y": 300
            }
          },
          "31f9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "ZonesFW Issue",
            "description": "Create a stub for ZonesFW issue",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "ZonesFW -  The traffic will not flow as per the request."
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1740,
              "y": 408
            }
          },
          "cab0": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Forwarding Issue",
            "description": "Create a stub for Forwarding issue",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "Forwarding -  The traffic will not flow as per the request."
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1452,
              "y": 564
            }
          },
          "a755": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Perfect",
            "description": "Create a stub for perfect traffic flow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "Perfect - The traffic is flowing as per the request"
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1140,
              "y": 756
            }
          },
          "ea77": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "ACL - Issue",
            "description": "Create a stub for ACL issue",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "ACL -  The traffic will not flow as per the request."
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1740,
              "y": 492
            }
          }
        },
        "transitions": {
          "4116": {},
          "workflow_start": {
            "326b": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a1": {
            "11ce": {
              "type": "standard",
              "state": "success"
            }
          },
          "eb4a": {
            "282e": {
              "type": "standard",
              "state": "success"
            },
            "ea77": {
              "type": "standard",
              "state": "failure"
            }
          },
          "71af": {
            "282e": {
              "type": "standard",
              "state": "success"
            },
            "cab0": {
              "type": "standard",
              "state": "failure"
            }
          },
          "509d": {
            "282e": {
              "type": "standard",
              "state": "success"
            },
            "31f9": {
              "type": "standard",
              "state": "failure"
            }
          },
          "11ce": {
            "eb4a": {
              "type": "standard",
              "state": "success"
            },
            "71af": {
              "type": "standard",
              "state": "success"
            },
            "509d": {
              "type": "standard",
              "state": "success"
            }
          },
          "282e": {
            "a755": {
              "type": "standard",
              "state": "success"
            }
          },
          "326b": {
            "a1": {
              "type": "standard",
              "state": "success"
            }
          },
          "31f9": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "cab0": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "a755": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "ea77": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "source": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "sourcePort": {
              "type": "string"
            },
            "destinationPort": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          },
          "required": [
            "adapterId",
            "source",
            "destination",
            "sourcePort",
            "destinationPort",
            "protocol"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "source": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "sourcePort": {
              "type": "string"
            },
            "destinationPort": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2025-01-23T21:10:30.376Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.40.5-2021.1.109.0",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "6792acedb320bf2f072b34fe",
      "type": "transformation",
      "folder": "/Analyze Service Path",
      "document": {
        "_id": "6792acedb320bf2f072b34fe",
        "name": "Create Path Lookup Payload (1)",
        "description": "",
        "incoming": [
          {
            "$id": "source",
            "type": "string"
          },
          {
            "$id": "destination",
            "type": "string"
          },
          {
            "$id": "sourcePort",
            "type": "string"
          },
          {
            "$id": "destinationPort",
            "type": "string"
          },
          {
            "$id": "protocol",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "pathLookUpPayload",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "steps": [
          {
            "id": 6,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "{\n    \"parameters\": {\n        \"destinationPoint\": \"${destinationPoint}\",\n        \"groupBy\": \"siteName\",\n        \"networkMode\": false,\n        \"pathLookupType\": \"unicast\",\n        \"securedPath\": false,\n        \"startingPoint\": \"${startingPoint}\",\n        \"type\": \"pathLookup\",\n        \"firstHopAlgorithm\": {\n            \"type\": \"automatic\"\n        },\n        \"protocol\": \"${protocol}\",\n        \"srcRegions\": \".*\",\n        \"dstRegions\": \".*\",\n        \"enableRegions\": false,\n        \"ttl\": 128,\n        \"fragmentOffset\": 0,\n        \"otherOptions\": {\n            \"applications\": \".*\",\n            \"tracked\": false\n        },\n        \"l4Options\": {\n            \"dstPorts\": \"${dstPorts}\",\n            \"srcPorts\": \"${srcPorts}\",\n            \"flags\": []\n        }\n    },\n    \"snapshot\": \"$last\"\n}",
            "args": [null, null, null, null, null],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "JSON",
            "method": "parse",
            "args": [null, null],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "pathLookUpPayload",
              "ptr": ""
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "source",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 6,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "sourcePort",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 6,
              "ptr": "/args/4/value"
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "destinationPort",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 6,
              "ptr": "/args/3/value"
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "protocol",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 6,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "destination",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 6,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T20:56:13.703Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-23T21:10:30.381Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 5,
      "reference": "60d1f5de24b88d0119edef27",
      "type": "transformation",
      "folder": "/Compare Snapshot Inventory",
      "document": {
        "_id": "60d1f5de24b88d0119edef27",
        "name": "Create Inventory Diff Payload",
        "description": "",
        "incoming": [
          {
            "$id": "snapshotidlast",
            "type": "string",
            "examples": ["snap1"]
          },
          {
            "$id": "snapshotidprev",
            "type": "string",
            "examples": ["snap2"]
          }
        ],
        "outgoing": [
          {
            "$id": "snapshotidlast",
            "type": "string",
            "examples": ["snap1"]
          },
          {
            "$id": "payload",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "{\n    \"columns\": [\n        \"hostname\",\n        \"loginIp\",\n        \"version\",\n        \"uptime\",\n        \"status\"\n    ],\n    \"bindVariables\": {\n    \"after\": \"${lastSnap}\",\n    \"before\": \"${prevSnap}\"\n    },\n    \"filters\": {}\n}",
            "args": [null, null],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "snapshotidlast",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "snapshotidprev",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "JSON",
            "method": "parse",
            "args": [null, null],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "payload",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "snapshotidlast",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "snapshotidlast",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-23T20:56:13.704Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-23T21:10:30.377Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "iid": 2,
      "nodeType": "component"
    },
    {
      "nodeType": "folder",
      "name": "Compare Snapshot Inventory",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        }
      ]
    },
    {
      "iid": 0,
      "nodeType": "component"
    },
    {
      "nodeType": "folder",
      "name": "Analyze Service Path",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 4,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-28T19:14:43.916Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-23T21:10:30.366Z",
  "lastUpdatedBy": {
    "_id": "67531c63592f8c45f4eabe88",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 65,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
