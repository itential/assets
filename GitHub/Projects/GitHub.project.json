{
  "_id": "66d0c63521161b4df27174b8",
  "name": "GitHub",
  "description": "GitHub asset including creating pull request, committing file, creating branch and getting file.",
  "components": [
    {
      "iid": 0,
      "reference": "ede1bfa7-45ab-429b-9d82-0ecadbdf6a14",
      "type": "workflow",
      "folder": "/Commit File",
      "document": {
        "name": "Commit File",
        "tasks": {
          "1425": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify File Not Found",
            "description": "Verify if the file is not found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "IAPerror.code",
                        "operand_1": {
                          "variable": "githubError",
                          "task": "job"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 404,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -3192,
              "y": -48
            }
          },
          "6102": {
            "name": "putReposOwnerRepoContentsPath",
            "canvasName": "putReposOwnerRepoContentsPath",
            "summary": "Commit File",
            "description": "Create a new file or replaces an existing file in a repository",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.repoOwner",
                "repo": "$var.job.repoName",
                "pathParam": "$var.job.filePath",
                "body": "$var.5ec.commitPayload",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.commitResult"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3480,
              "y": 132
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3480,
              "y": -144
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3480,
              "y": 240
            }
          },
          "4e68": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "GitHub Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "GitHub Error",
                "message": "",
                "body": "$var.job.githubError",
                "variables": "",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3192,
              "y": 48
            }
          },
          "915f": {
            "name": "getReposOwnerRepoContentsPath",
            "canvasName": "getReposOwnerRepoContentsPath",
            "summary": "Get File",
            "description": "Get the contents of a file",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.repoOwner",
                "repo": "$var.job.repoName",
                "pathParam": "$var.job.filePath",
                "pathParamQuery": "",
                "ref": "$var.job.branchName",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.fileResult"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3480,
              "y": -48
            }
          },
          "5ec": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Commit Payload",
            "description": "Build Commit Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "622a021e7858d601db6606fb",
                "variableMap": {
                  "commitMessage": "$var.job.commitMessage",
                  "fileContent": "$var.job.fileContent",
                  "branchName": "$var.job.branchName",
                  "encoding": "base64",
                  "fileResult": "$var.job.fileResult"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "commitPayload": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Build Commit Payload - GitHub - REST",
            "retrySettings": null,
            "nodeLocation": {
              "x": -3480,
              "y": 48
            }
          },
          "61eb": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create File Response Variable",
            "description": "Create file response variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "fileResult",
                "value": "$var.915f.error"
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2904,
              "y": -48
            }
          }
        },
        "transitions": {
          "1425": {
            "4e68": {
              "type": "standard",
              "state": "failure"
            },
            "61eb": {
              "type": "standard",
              "state": "success"
            }
          },
          "5464": {},
          "6102": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "4e68": {
              "type": "standard",
              "state": "error"
            }
          },
          "workflow_start": {
            "915f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "4e68": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "915f": {
            "1425": {
              "type": "standard",
              "state": "error"
            },
            "5ec": {
              "type": "standard",
              "state": "success"
            }
          },
          "5ec": {
            "6102": {
              "type": "standard",
              "state": "success"
            }
          },
          "61eb": {
            "5ec": {
              "type": "standard",
              "state": "success"
            }
          },
          "702a": {},
          "f797": {},
          "332f": {},
          "a85b": {},
          "130d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "filePath": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "branchName": {
              "type": "string"
            },
            "commitMessage": {
              "type": "string"
            },
            "fileContent": {
              "type": "string"
            }
          },
          "required": [
            "repoOwner",
            "repoName",
            "filePath",
            "adapterId",
            "branchName",
            "commitMessage",
            "fileContent"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "filePath": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "branchName": {
              "type": "string"
            },
            "commitMessage": {
              "type": "string"
            },
            "fileContent": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "githubError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "commitResult": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "fileResult": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-23T16:55:03.061Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "13db282a-7fc1-425d-94d2-6eab664672f9",
      "type": "workflow",
      "folder": "/",
      "document": {
        "name": "Create Pull Request",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -4452,
              "y": 408
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -4452,
              "y": 672
            }
          },
          "4e68": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "GitHub Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "GitHub Error",
                "message": "",
                "body": "$var.job.githubError",
                "variables": "",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -4152,
              "y": 576
            }
          },
          "820e": {
            "name": "postReposOwnerRepoPulls",
            "canvasName": "postReposOwnerRepoPulls",
            "summary": "Create Pull Request",
            "description": "Create a pull request",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.repoOwner",
                "repo": "$var.job.repoName",
                "body": "$var.16cc.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.pullRequestResult"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -4452,
              "y": 576
            }
          },
          "16cc": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Build Pull Request Payload",
            "description": "Build Pull Request Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "title",
                    "value": {
                      "task": "job",
                      "variable": "prTitle",
                      "editable": true
                    }
                  },
                  {
                    "key": "owner",
                    "value": {
                      "task": "job",
                      "variable": "repoOwner",
                      "editable": true
                    }
                  },
                  {
                    "key": "repo",
                    "value": {
                      "task": "job",
                      "variable": "repoName",
                      "editable": true
                    }
                  },
                  {
                    "key": "head",
                    "value": {
                      "task": "job",
                      "variable": "sourceBranch",
                      "editable": true
                    }
                  },
                  {
                    "key": "base",
                    "value": {
                      "task": "job",
                      "variable": "targetBranch",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -4452,
              "y": 492
            }
          }
        },
        "transitions": {
          "5464": {},
          "workflow_start": {
            "16cc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "4e68": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "820e": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "4e68": {
              "type": "standard",
              "state": "error"
            }
          },
          "16cc": {
            "820e": {
              "type": "standard",
              "state": "success"
            }
          },
          "702a": {},
          "f797": {},
          "332f": {},
          "a85b": {},
          "130d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "prTitle": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "sourceBranch": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "targetBranch": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "repoOwner",
            "repoName",
            "adapterId",
            "prTitle",
            "sourceBranch",
            "targetBranch"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "prTitle": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "sourceBranch": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "targetBranch": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "githubError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "pullRequestResult": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-23T16:55:03.064Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "4ba8563f-a255-4ec4-af2a-be6f4c43af4f",
      "type": "workflow",
      "folder": "/",
      "document": {
        "name": "Get File",
        "tasks": {
          "1425": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify File Not Found",
            "description": "Verify if the file is not found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "IAPerror.code",
                        "operand_1": {
                          "variable": "githubError",
                          "task": "job"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 404,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -3300,
              "y": 420
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3588,
              "y": 336
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3588,
              "y": 528
            }
          },
          "4e68": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "GitHub Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "GitHub Error",
                "message": "",
                "body": "$var.job.githubError",
                "variables": "",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3300,
              "y": 516
            }
          },
          "915f": {
            "name": "getReposOwnerRepoContentsPath",
            "canvasName": "getReposOwnerRepoContentsPath",
            "summary": "Get File",
            "description": "Get the contents of a file",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.repoOwner",
                "repo": "$var.job.repoName",
                "pathParam": "$var.job.filePath",
                "pathParamQuery": "",
                "ref": "$var.job.branchName",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.fileResult"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3588,
              "y": 420
            }
          }
        },
        "transitions": {
          "1425": {
            "4e68": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5464": {},
          "workflow_start": {
            "915f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "4e68": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "915f": {
            "1425": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "702a": {},
          "f797": {},
          "332f": {},
          "a85b": {},
          "130d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "filePath": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "branchName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "repoOwner",
            "repoName",
            "filePath",
            "branchName",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "filePath": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "branchName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "githubError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "fileResult": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-23T16:55:03.063Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "b80a2a25-d3e6-4d27-bf81-cc00ab590ac7",
      "type": "workflow",
      "folder": "/Create Branch",
      "document": {
        "name": "Create Branch",
        "tasks": {
          "1425": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Branch Not Found",
            "description": "Verify if the branch is not found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "IAPerror.code",
                        "operand_1": {
                          "variable": "githubError",
                          "task": "job"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 404,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2532,
              "y": 252
            }
          },
          "3509": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Branch Creation Payload",
            "description": "Build branch creation payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "622929b67858d601db6606fa",
                "variableMap": {
                  "branchName": "$var.job.branchName",
                  "refBranchResponse": "$var.5d43.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "branchCreationPayload": null
              }
            },
            "groups": [],
            "task_name": "Build Branch Creation Payload - GitHub - REST",
            "retrySettings": null,
            "nodeLocation": {
              "x": -2532,
              "y": 432
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2832,
              "y": 156
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2832,
              "y": 564
            }
          },
          "4e68": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "GitHub Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "GitHub Error",
                "message": "",
                "body": "$var.job.githubError",
                "variables": {},
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2220,
              "y": 516
            }
          },
          "5fc7": {
            "name": "getReposOwnerRepoBranchesBranch",
            "canvasName": "getReposOwnerRepoBranchesBranch",
            "summary": "Get Branch",
            "description": "Get a branch",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repoName",
                "branch": "$var.job.branchName",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.branchResult"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2832,
              "y": 252
            }
          },
          "5d43": {
            "name": "getReposOwnerRepoBranchesBranch",
            "canvasName": "getReposOwnerRepoBranchesBranch",
            "summary": "Get Ref Branch",
            "description": "Get the ref branch that the new branch is based on",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repoName",
                "branch": "$var.job.refBranchName",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2532,
              "y": 336
            }
          },
          "22b8": {
            "name": "postReposOwnerRepoGitRefs",
            "canvasName": "postReposOwnerRepoGitRefs",
            "summary": "Create A Reference",
            "description": "Create a reference in a repository",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repoName",
                "body": "$var.3509.branchCreationPayload",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.branchResult"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2532,
              "y": 516
            }
          }
        },
        "transitions": {
          "1425": {
            "5d43": {
              "type": "standard",
              "state": "success"
            },
            "4e68": {
              "type": "standard",
              "state": "failure"
            }
          },
          "3509": {
            "22b8": {
              "type": "standard",
              "state": "success"
            }
          },
          "5464": {},
          "workflow_start": {
            "5fc7": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "4e68": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5fc7": {
            "1425": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d43": {
            "3509": {
              "type": "standard",
              "state": "success"
            },
            "4e68": {
              "type": "standard",
              "state": "error"
            }
          },
          "22b8": {
            "4e68": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "702a": {},
          "f797": {},
          "332f": {},
          "a85b": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "branchName": {
              "type": "string"
            },
            "owner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "refBranchName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "branchName",
            "owner",
            "repoName",
            "adapterId",
            "refBranchName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "branchName": {
              "type": "string"
            },
            "owner": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "repoName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "refBranchName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "githubError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "branchResult": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-23T16:55:03.067Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 5,
      "reference": "622a021e7858d601db6606fb",
      "type": "transformation",
      "folder": "/Commit File",
      "document": {
        "_id": "622a021e7858d601db6606fb",
        "name": "Build Commit Payload",
        "description": "",
        "incoming": [
          {
            "$id": "commitMessage",
            "type": "string"
          },
          {
            "$id": "fileContent",
            "type": "string"
          },
          {
            "$id": "branchName",
            "type": "string"
          },
          {
            "$id": "encoding",
            "type": "string"
          },
          {
            "$id": "fileResult",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "commitPayload",
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              },
              "encoding": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "branchName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commitPayload",
              "ptr": "/branch"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commitMessage",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commitPayload",
              "ptr": "/message"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "fileContent",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commitPayload",
              "ptr": "/content"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "encoding",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commitPayload",
              "ptr": "/encoding"
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Logical",
            "method": "nullish",
            "args": [null, null],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [null],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "commitPayload",
              "ptr": "/sha"
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Object",
            "method": "optional chaining",
            "args": [null, "response", "sha"],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "fileResult",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T16:43:12.535Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-23T16:55:03.067Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 6,
      "reference": "622929b67858d601db6606fa",
      "type": "transformation",
      "folder": "/Create Branch",
      "document": {
        "_id": "622929b67858d601db6606fa",
        "name": "Build Branch Creation Payload",
        "description": "",
        "incoming": [
          {
            "$id": "branchName",
            "type": "string"
          },
          {
            "$id": "refBranchResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "commit": {
                    "type": "object",
                    "properties": {
                      "sha": {
                        "type": "string"
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "branchCreationPayload",
            "type": "object",
            "properties": {
              "ref": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "refBranchResponse",
              "ptr": "/response/commit/sha"
            },
            "to": {
              "location": "outgoing",
              "name": "branchCreationPayload",
              "ptr": "/sha"
            }
          },
          {
            "id": 2,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": ["refs/heads/", null],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "branchName",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "branchCreationPayload",
              "ptr": "/ref"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T16:43:12.575Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-23T16:55:03.068Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "iid": 1,
      "nodeType": "component"
    },
    {
      "nodeType": "folder",
      "name": "Commit File",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Create Branch",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        }
      ]
    },
    {
      "iid": 2,
      "nodeType": "component"
    }
  ],
  "created": "2024-08-29T19:04:21.834Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-23T16:55:03.054Z",
  "lastUpdatedBy": {
    "_id": "67531c63592f8c45f4eabe88",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 55,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
