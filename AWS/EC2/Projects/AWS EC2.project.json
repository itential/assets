{
  "_id": "66ce026421161b4df2717471",
  "name": "AWS EC2",
  "description": "AWS EC2 project includes assets for Provisioning VPC with Networking, Creating EC2 Instance and Destroy VPC and EC2 instances",
  "components": [
    {
      "iid": 1,
      "reference": "4fb7dc7d-73ee-4593-b1c8-6b3809c59316",
      "type": "workflow",
      "folder": "/Provision VPC with Networking",
      "document": {
        "name": "Create VPC Subnet",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 660,
              "y": 1020
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 660,
              "y": 1428
            }
          },
          "303c": {
            "name": "createSubnet",
            "canvasName": "createSubnet",
            "summary": "Create Subnet",
            "description": "Creates a subnet in an existing VPC.",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "availabilityZone": "",
                "availabilityZoneId": "",
                "cidrBlock": "$var.job.cidrBlock",
                "ipv6CidrBlock": "",
                "vpcId": "$var.job.vpcId",
                "dryRun": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 660,
              "y": 1164
            }
          },
          "b647": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Subnet ID",
            "description": "Query Subnet ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.CreateSubnetResponse.subnet.subnetId",
                "obj": "$var.303c.result"
              },
              "outgoing": {
                "return_data": "$var.job.subnetId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 660,
              "y": 1284
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "303c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "303c": {
            "b647": {
              "type": "standard",
              "state": "success"
            }
          },
          "b647": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["cidrBlock", "vpcId", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "subnetId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.44.64-2022.1.25.0",
        "last_updated": "2025-01-24T10:42:23.246Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "8cfee39c-0736-4f9c-b24f-b78fed3c66d2",
      "type": "workflow",
      "folder": "/Provision VPC with Networking",
      "document": {
        "name": "Create Security Group with Ingress Rules",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 5748,
              "y": 924
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 5748,
              "y": 1476
            }
          },
          "9ca5": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Security Group ID",
            "description": "Query Security Group ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.CreateSecurityGroupResponse.groupId",
                "obj": "$var.e62f.result"
              },
              "outgoing": {
                "return_data": "$var.job.securityGroupId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 5748,
              "y": 1140
            }
          },
          "e62f": {
            "name": "createSecurityGroup",
            "canvasName": "createSecurityGroup",
            "summary": "Create Security Group",
            "description": "Create Security Group",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "groupDescription": "$var.job.securityGroupDescription",
                "groupName": "$var.job.securityGroupName",
                "vpcId": "$var.job.vpcId",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 5748,
              "y": 1032
            }
          },
          "12c9": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Ingress Rule List",
            "description": "Build ingress rule list",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "652ff25180403501cbadcbe5",
                "variableMap": {
                  "ruleList": "$var.job.ruleList",
                  "groupId": "$var.9ca5.return_data",
                  "adapterId": "$var.job.adapterId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ruleList": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 5748,
              "y": 1248
            }
          },
          "c96d": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Add Ingress Rule to Security Group",
            "description": "Add ingress rule to security group",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Add Ingress Rule to Security Group - AWS",
                "variables": {
                  "adapterId": {
                    "task": "12c9",
                    "value": "ruleList"
                  }
                },
                "data_array": "$var.12c9.ruleList",
                "transformation": "",
                "loopType": "sequential"
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 5748,
              "y": 1356
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "e62f": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "9ca5": {
            "12c9": {
              "state": "success",
              "type": "standard"
            }
          },
          "e62f": {
            "9ca5": {
              "state": "success",
              "type": "standard"
            }
          },
          "12c9": {
            "c96d": {
              "state": "success",
              "type": "standard"
            }
          },
          "c96d": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "securityGroupDescription": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "securityGroupName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": "string"
            },
            "ruleList": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1.2.3.4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": []
              }
            }
          },
          "required": [
            "securityGroupDescription",
            "securityGroupName",
            "vpcId",
            "adapterId",
            "ruleList"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "securityGroupDescription": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "securityGroupName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": "string"
            },
            "ruleList": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1.2.3.4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": []
              }
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "securityGroupId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2025-01-24T10:42:23.246Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "ae9f7c23-fd29-4125-b34e-11120d5e1f9d",
      "type": "workflow",
      "folder": "/Destroy VPC and EC2 Instance",
      "document": {
        "name": "Destroy VPC and EC2 Instance",
        "tasks": {
          "6253": {
            "name": "deleteVpc",
            "canvasName": "deleteVpc",
            "summary": "Delete VPC",
            "description": "Delete VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "vpcId": "$var.job.vpcId",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedVPC"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 468,
              "y": 816
            }
          },
          "9653": {
            "name": "describeInstances",
            "canvasName": "describeInstances",
            "summary": "Get Instances for VPC",
            "description": "Get Instances with a VPC ID filter",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "filter": "$var.1a70.vpcIdFilter",
                "instanceId": "",
                "dryRun": false,
                "maxResults": "",
                "nextToken": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 468,
              "y": -216
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 456,
              "y": -552
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 24,
              "y": 1068
            }
          },
          "992b": {
            "name": "terminateInstances",
            "canvasName": "terminateInstances",
            "summary": "Terminate Instances",
            "description": "Terminates EC2 Instances",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "instanceId": "$var.dd21.instanceIdArray",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 468,
              "y": 108
            }
          },
          "e0fe": {
            "name": "describeVpcs",
            "canvasName": "describeVpcs",
            "summary": "Describes one or more of your VPCs.",
            "description": "Describes one or more of your VPCs.",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "",
                "vpcId": "$var.1a70.vpcIdArray",
                "dryRun": false,
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 468,
              "y": -324
            }
          },
          "9b69": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Delete Subnet",
            "description": "Delete subnet",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Delete Subnets by VPC",
                "variables": {
                  "vpcId": {
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 468,
              "y": 552
            }
          },
          "cac5": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Detach and Delete Internet Gateway",
            "description": "Detach and delete internet gateway",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Detach and Delete Internet Gateways by VPC - AWS",
                "variables": {
                  "vpcId": {
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 468,
              "y": 672
            }
          },
          "8fbe": {
            "name": "delay",
            "canvasName": "delay",
            "summary": "Wait for Instance Termination",
            "description": "Wait for Instance Termination",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "time": 60
              },
              "outgoing": {
                "time_in_milliseconds": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 144,
              "y": 324
            }
          },
          "ab1": {
            "name": "describeInstances",
            "canvasName": "describeInstances",
            "summary": "Confirm Instances Terminated",
            "description": "Get Instances with a VPC ID filter",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.1a70.vpcIdFilter",
                "instanceId": "",
                "dryRun": false,
                "maxResults": "",
                "nextToken": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 468,
              "y": 228
            }
          },
          "f957": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if instances are removed",
            "description": "Check if instances are removed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeInstancesResponse.reservationSet",
                        "operand_1": {
                          "variable": "result",
                          "task": "ab1"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 468,
              "y": 336
            }
          },
          "a879": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Delete Security Groups by VPC - AWS",
            "description": "Delete Security Groups by VPC - AWS",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Delete Security Groups by VPC",
                "variables": {
                  "vpcId": {
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 468,
              "y": 444
            }
          },
          "1a70": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Prepare VPC ID",
            "description": "Prepare VPC Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e50af123ad20015d2a061b",
                "variableMap": {
                  "vpcId": "$var.job.vpcId"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "vpcIdArray": null,
                "vpcIdFilter": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Prepare VPC ID",
            "retrySettings": null,
            "nodeLocation": {
              "x": 468,
              "y": -444
            }
          },
          "0f2e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Reserved Instances Found",
            "description": "Check if reserved instances found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "9653",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": ""
                        },
                        "operator": "!=",
                        "query": "response.DescribeInstancesResponse.reservationSet",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 468,
              "y": -108
            }
          },
          "da24": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Reserved Instances Found",
            "description": "No Reserved Instances Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -12,
              "y": 48
            }
          },
          "dd21": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Instance Response",
            "description": "Process Instance Response",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6535d4e97c6b51019f8f4142",
                "variableMap": {
                  "instanceResponse": "$var.9653.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "instanceIdArray": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 468,
              "y": 0
            }
          },
          "62a6": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error with Options",
            "description": "Show error with options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Delete VPC Error",
                "message": "Failed to delete VPC. See error below. Do you want to retry?",
                "body": "$var.6253.error",
                "variables": "",
                "btn_success": "Yes",
                "btn_failure": "No"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 468,
              "y": 960
            }
          }
        },
        "transitions": {
          "6253": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "62a6": {
              "type": "standard",
              "state": "error"
            }
          },
          "9653": {
            "0f2e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "1a70": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "992b": {
            "ab1": {
              "type": "standard",
              "state": "success"
            }
          },
          "e0fe": {
            "9653": {
              "state": "success",
              "type": "standard"
            }
          },
          "9b69": {
            "cac5": {
              "type": "standard",
              "state": "success"
            }
          },
          "cac5": {
            "6253": {
              "type": "standard",
              "state": "success"
            }
          },
          "8fbe": {
            "ab1": {
              "type": "revert",
              "state": "success"
            }
          },
          "ab1": {
            "f957": {
              "type": "standard",
              "state": "success"
            }
          },
          "f957": {
            "8fbe": {
              "type": "standard",
              "state": "failure"
            },
            "a879": {
              "type": "standard",
              "state": "success"
            }
          },
          "a879": {
            "9b69": {
              "type": "standard",
              "state": "success"
            }
          },
          "1a70": {
            "e0fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "0f2e": {
            "da24": {
              "type": "standard",
              "state": "failure"
            },
            "dd21": {
              "state": "success",
              "type": "standard"
            }
          },
          "da24": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "dd21": {
            "992b": {
              "state": "success",
              "type": "standard"
            }
          },
          "62a6": {
            "6253": {
              "state": "success",
              "type": "revert"
            }
          },
          "b2c3": {},
          "ca81": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": "string"
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["vpcId", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": "string"
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedVPC": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.46.0-2023.1.21.0",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T10:42:23.249Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "d9fb698b-0274-46c2-97ed-bdc7f309ca3f",
      "type": "workflow",
      "folder": "/Destroy VPC and EC2 Instance/Delete Security Groups",
      "document": {
        "name": "Delete Security Groups by VPC",
        "tasks": {
          "2432": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Security Groups Found",
            "description": "No Security Groups Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 996,
              "y": 1176
            }
          },
          "4685": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Filter Array",
            "description": "Filter Array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.80a6.merged_object"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 828,
              "y": 816
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 828,
              "y": 612
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 840,
              "y": 1356
            }
          },
          "80a6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "VPC ID Filter",
            "description": "VPC ID Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "static",
                      "variable": "vpc-id",
                      "editable": true
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "task": "job",
                      "variable": "vpcId",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 828,
              "y": 720
            }
          },
          "5ee3": {
            "name": "describeSecurityGroups",
            "canvasName": "describeSecurityGroups",
            "summary": "Find SGs for VPC",
            "description": "Find SGs for VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.4685.pushedArray",
                "groupId": "",
                "groupName": "",
                "dryRun": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 828,
              "y": 912
            }
          },
          "daf4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Security Groups Found",
            "description": "Check if Security Groups Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeSecurityGroupsResponse.securityGroupInfo",
                        "operand_1": {
                          "variable": "result",
                          "task": "5ee3"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 828,
              "y": 1020
            }
          },
          "e541": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build SG Delete List",
            "description": "Build security group delete list",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6245ac411678ea01c7fbcd3e",
                "variableMap": {
                  "sgResponse": "$var.5ee3.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "sgDeleteArray": null
              }
            },
            "groups": [],
            "task_name": "Build SG Delete Array",
            "retrySettings": null,
            "nodeLocation": {
              "x": 660,
              "y": 1128
            }
          },
          "f643": {
            "name": "deleteSecurityGroups",
            "canvasName": "deleteSecurityGroups",
            "summary": "Delete Security Groups",
            "description": "Delete Security Groups",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "securityGroupArray": "$var.e541.sgDeleteArray",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedSecurityGroup"
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 660,
              "y": 1248
            }
          }
        },
        "transitions": {
          "212": {},
          "2432": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4685": {
            "5ee3": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "80a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "80a6": {
            "4685": {
              "type": "standard",
              "state": "success"
            }
          },
          "5ee3": {
            "daf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "daf4": {
            "2432": {
              "type": "standard",
              "state": "failure"
            },
            "e541": {
              "type": "standard",
              "state": "success"
            }
          },
          "e541": {
            "f643": {
              "state": "success",
              "type": "standard"
            }
          },
          "f643": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "dfad": {},
          "50ac": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["vpcId", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedSecurityGroup": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:42:23.249Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 5,
      "reference": "6c7d0aef-09f5-4069-8a66-fd98d7b42f79",
      "type": "workflow",
      "folder": "/Provision VPC with Networking",
      "document": {
        "name": "Add Ingress Rule to Security Group",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 5196,
              "y": 1188
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 5196,
              "y": 1404
            }
          },
          "40c1": {
            "name": "authorizeSecurityGroupIngress",
            "canvasName": "authorizeSecurityGroupIngress",
            "summary": "Create Security Group Ingress Rule",
            "description": "Create Security Group Ingress Rule",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "cidrIp": "$var.job.sourceCidrIp",
                "fromPort": "$var.job.fromPort",
                "groupId": "$var.job.groupId",
                "groupName": "",
                "ipPermissions": "",
                "ipProtocol": "$var.job.ipProtocol",
                "sourceSecurityGroupName": "",
                "sourceSecurityGroupOwnerId": "",
                "toPort": "$var.job.toPort",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedSecurityGroup"
              },
              "error": "",
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 5196,
              "y": 1296
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "40c1": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "40c1": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "sourceCidrIp": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "fromPort": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "groupId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipProtocol": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "toPort": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "sourceCidrIp",
            "fromPort",
            "groupId",
            "ipProtocol",
            "toPort",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "sourceCidrIp": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "fromPort": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "groupId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipProtocol": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "toPort": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedSecurityGroup": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.44.64-2022.1.25.0",
        "last_updated": "2025-01-24T10:42:23.251Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 6,
      "reference": "b9f4aac5-bed1-4508-97a9-54301cc675de",
      "type": "workflow",
      "folder": "/Provision VPC with Networking/Create VPC",
      "document": {
        "name": "Create VPC",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 804,
              "y": 1116
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 804,
              "y": 1524
            }
          },
          "997d": {
            "name": "createVpc",
            "canvasName": "createVpc",
            "summary": "Create VPC",
            "description": "Create VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "cidrBlock": "$var.job.cidrBlock",
                "amazonProvidedIpv6CidrBlock": false,
                "dryRun": false,
                "instanceTenancy": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdVpc"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 804,
              "y": 1212
            }
          },
          "e803": {
            "name": "createTags",
            "canvasName": "createTags",
            "summary": "Tag VPC",
            "description": "Add Tag to VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "resourceId": "$var.f19d.vpcId",
                "tag": "$var.f19d.vpcTags",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 804,
              "y": 1416
            }
          },
          "f19d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build VPC Tag Data",
            "description": "Build VPC Tag Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "655e0ee83bd5d401c431dc95",
                "variableMap": {
                  "createVpcResponse": "$var.997d.result",
                  "vpcName": "$var.job.vpcName"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "vpcId": null,
                "vpcTags": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Build VPC Tag Data",
            "retrySettings": null,
            "nodeLocation": {
              "x": 804,
              "y": 1308
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "997d": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "997d": {
            "f19d": {
              "type": "standard",
              "state": "success"
            }
          },
          "e803": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f19d": {
            "e803": {
              "type": "standard",
              "state": "success"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcName": {
              "type": "string"
            }
          },
          "required": ["cidrBlock", "adapterId", "vpcName"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcName": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createdVpc": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2025-01-24T10:42:23.247Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 7,
      "reference": "7e7b9925-6d5f-4729-9711-3cda859ee534",
      "type": "workflow",
      "folder": "/Provision VPC with Networking/Create Route",
      "document": {
        "name": "Create Route",
        "tasks": {
          "1247": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Get Length of Route Table Set Item",
            "description": "Get Length of Route Table Set Item",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.eb83.return_data"
              },
              "outgoing": {
                "length": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 4128,
              "y": 1512
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 4320,
              "y": 972
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 4344,
              "y": 1992
            }
          },
          "996c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Route Table ID",
            "description": "Query Route Table ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeRouteTablesResponse.routeTableSet.item[0].routeTableId",
                "obj": "$var.6b15.result"
              },
              "outgoing": {
                "return_data": "$var.job.routeTableId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 4128,
              "y": 1608
            }
          },
          "82b5": {
            "name": "createRoute",
            "canvasName": "createRoute",
            "summary": "Create Route",
            "description": "Create Route for Internet GW",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "destinationCidrBlock": "$var.job.destinationCidrBlock",
                "destinationIpv6CidrBlock": "",
                "dryRun": false,
                "egressOnlyInternetGatewayId": "",
                "gatewayId": "$var.job.gatewayId",
                "instanceId": "",
                "natGatewayId": "",
                "transitGatewayId": "",
                "networkInterfaceId": "",
                "routeTableId": "$var.996c.return_data",
                "vpcPeeringConnectionId": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdRoute"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 3996,
              "y": 1836
            }
          },
          "6b15": {
            "name": "describeRouteTables",
            "canvasName": "describeRouteTables",
            "summary": "Get Route Table",
            "description": "Describe Route Table, filter on VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.ff13.vpcFilter",
                "dryRun": false,
                "routeTableId": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 4128,
              "y": 1296
            }
          },
          "ff13": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build VPC Filter",
            "description": "Build VPC Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e3a39ed59d6601415e4e09",
                "variableMap": {
                  "vpcId": "$var.job.vpcId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "vpcFilter": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Build VPC Filter",
            "retrySettings": null,
            "nodeLocation": {
              "x": 4128,
              "y": 1188
            }
          },
          "ca06": {
            "name": "createRoute",
            "canvasName": "createRoute",
            "summary": "Create Route",
            "description": "Create Route for Internet GW",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "destinationCidrBlock": "$var.job.destinationCidrBlock",
                "destinationIpv6CidrBlock": "",
                "dryRun": false,
                "egressOnlyInternetGatewayId": "",
                "gatewayId": "$var.job.gatewayId",
                "instanceId": "",
                "natGatewayId": "",
                "transitGatewayId": "",
                "networkInterfaceId": "",
                "routeTableId": "$var.job.routeTableId",
                "vpcPeeringConnectionId": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdRoute"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 4656,
              "y": 1740
            }
          },
          "110b": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Route Table ID Is Specified",
            "description": "Check If Route Table ID Is Specified",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "routeTableId"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": ""
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 4320,
              "y": 1080
            }
          },
          "0f3d": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Options",
            "description": "View Options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Options",
                "message": "There are multiple Route Tables associated with the input vpcId. Do you want to create Route for the first found Route Table ID:",
                "body": "$var.996c.return_data",
                "variables": "",
                "btn_success": "Yes",
                "btn_failure": "No"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 4344,
              "y": 1836
            }
          },
          "eb83": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Route Table Set Item",
            "description": "Query Route Table Set Item",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeRouteTablesResponse.routeTableSet.item",
                "obj": "$var.6b15.result"
              },
              "outgoing": {
                "return_data": "$var.job.routeTableId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 4128,
              "y": 1404
            }
          },
          "fa8e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check For Multiple Route Tables",
            "description": "Check for multiple route tables",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "1247",
                          "variable": "length"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": 1
                        },
                        "operator": ">",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 4128,
              "y": 1704
            }
          }
        },
        "transitions": {
          "1247": {
            "996c": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "110b": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "996c": {
            "fa8e": {
              "state": "success",
              "type": "standard"
            }
          },
          "82b5": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6b15": {
            "eb83": {
              "state": "success",
              "type": "standard"
            }
          },
          "ff13": {
            "6b15": {
              "type": "standard",
              "state": "success"
            }
          },
          "ca06": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "110b": {
            "ca06": {
              "type": "standard",
              "state": "success"
            },
            "ff13": {
              "type": "standard",
              "state": "failure"
            }
          },
          "0f3d": {
            "82b5": {
              "state": "success",
              "type": "standard"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "eb83": {
            "1247": {
              "state": "success",
              "type": "standard"
            }
          },
          "fa8e": {
            "0f3d": {
              "state": "success",
              "type": "standard"
            },
            "82b5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "routeTableId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "destinationCidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "gatewayId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": "string"
            }
          },
          "required": [
            "routeTableId",
            "destinationCidrBlock",
            "gatewayId",
            "adapterId",
            "vpcId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "routeTableId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "destinationCidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "gatewayId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createdRoute": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.19.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated": "2025-01-24T10:42:23.251Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 8,
      "reference": "b2bd439e-48fd-4eb9-b9e8-646e15b9e5ac",
      "type": "workflow",
      "folder": "/Destroy VPC and EC2 Instance/Delete Subnets",
      "document": {
        "name": "Delete Subnets by VPC",
        "tasks": {
          "2432": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Subnets Found",
            "description": "No Subnets Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 912,
              "y": 1080
            }
          },
          "4685": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Filter Array",
            "description": "Filter Array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.80a6.merged_object"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 768,
              "y": 684
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 768,
              "y": 456
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 768,
              "y": 1272
            }
          },
          "80a6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "VPC ID Filter",
            "description": "VPC ID Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "static",
                      "variable": "vpc-id",
                      "editable": true
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "task": "job",
                      "variable": "vpcId",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 768,
              "y": 576
            }
          },
          "daf4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Subnets Found",
            "description": "Check if Subnets Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeSubnetsResponse.subnetSet",
                        "operand_1": {
                          "variable": "result",
                          "task": "65d7"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 768,
              "y": 900
            }
          },
          "65d7": {
            "name": "describeSubnets",
            "canvasName": "describeSubnets",
            "summary": "Find Subnets for VPC",
            "description": "Find Subnets for VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.4685.pushedArray",
                "subnetId": "",
                "dryRun": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 768,
              "y": 792
            }
          },
          "d988": {
            "name": "deleteSubnets",
            "canvasName": "deleteSubnets",
            "summary": "Delete Subnets",
            "description": "Delete Subnets",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "subnetArray": "$var.e7a5.subnetDeleteArray",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedSubnet"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 600,
              "y": 1152
            }
          },
          "e7a5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Subnet Delete List",
            "description": "Build subnet delete list",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6532e52c344dfd019e4b388c",
                "variableMap": {
                  "subnetResponse": "$var.65d7.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "subnetDeleteArray": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 600,
              "y": 1044
            }
          }
        },
        "transitions": {
          "212": {},
          "2432": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "4685": {
            "65d7": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "80a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "80a6": {
            "4685": {
              "type": "standard",
              "state": "success"
            }
          },
          "daf4": {
            "2432": {
              "type": "standard",
              "state": "failure"
            },
            "e7a5": {
              "state": "success",
              "type": "standard"
            }
          },
          "65d7": {
            "daf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "d988": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "e7a5": {
            "d988": {
              "state": "success",
              "type": "standard"
            }
          },
          "dfad": {},
          "50ac": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["vpcId", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedSubnet": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:42:23.250Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 9,
      "reference": "59a9897e-9cbb-4c52-9386-f54db129c724",
      "type": "workflow",
      "folder": "/Destroy VPC and EC2 Instance",
      "document": {
        "name": "Detach and Delete Internet Gateways by VPC",
        "tasks": {
          "2432": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Internet Gateways Found",
            "description": "No Internet Gateways Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 852,
              "y": 1092
            }
          },
          "3151": {
            "name": "describeInternetGateways",
            "canvasName": "describeInternetGateways",
            "summary": "Find Internet Gateways for VPC",
            "description": "Find Internet Gateways for VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.4685.pushedArray",
                "dryRun": "",
                "internetGatewayId": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1044,
              "y": 768
            }
          },
          "4685": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Filter Array",
            "description": "Filter Array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.80a6.merged_object"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1044,
              "y": 660
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1044,
              "y": 456
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1056,
              "y": 1320
            }
          },
          "80a6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "VPC ID Filter",
            "description": "VPC ID Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "static",
                      "variable": "attachment.vpc-id",
                      "editable": true
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "task": "job",
                      "variable": "vpcId",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1044,
              "y": 564
            }
          },
          "daf4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Internet Gateways Found",
            "description": "Check if internet gateways found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeInternetGatewaysResponse.internetGatewaySet",
                        "operand_1": {
                          "variable": "result",
                          "task": "3151"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1056,
              "y": 876
            }
          },
          "606b": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Internet Gateway ID",
            "description": "Get Internet Gateway ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeInternetGatewaysResponse.internetGatewaySet.item[0].internetGatewayId",
                "obj": "$var.3151.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1188,
              "y": 996
            }
          },
          "ccb2": {
            "name": "detachInternetGateway",
            "canvasName": "detachInternetGateway",
            "summary": "Detach Internet Gateway from VPC",
            "description": "Detach Internet Gateway from VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "internetGatewayId": "$var.606b.return_data",
                "vpcId": "$var.job.vpcId",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1188,
              "y": 1092
            }
          },
          "61f9": {
            "name": "deleteInternetGateway",
            "canvasName": "deleteInternetGateway",
            "summary": "Delete Internet Gateway",
            "description": "Delete Internet Gateway",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "internetGatewayId": "$var.606b.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedInternetGateway"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1188,
              "y": 1200
            }
          }
        },
        "transitions": {
          "212": {},
          "2432": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3151": {
            "daf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "4685": {
            "3151": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "80a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "80a6": {
            "4685": {
              "type": "standard",
              "state": "success"
            }
          },
          "daf4": {
            "2432": {
              "type": "standard",
              "state": "failure"
            },
            "606b": {
              "type": "standard",
              "state": "success"
            }
          },
          "606b": {
            "ccb2": {
              "type": "standard",
              "state": "success"
            }
          },
          "ccb2": {
            "61f9": {
              "type": "standard",
              "state": "success"
            }
          },
          "61f9": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "dfad": {},
          "50ac": {},
          "de1e": {},
          "419e": {},
          "b96d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "vpcId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedInternetGateway": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:42:23.252Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 10,
      "reference": "0eaa82ee-8b1c-4341-91f6-4770787d66a3",
      "type": "workflow",
      "folder": "/Provision VPC with Networking",
      "document": {
        "name": "Create and Attach Internet Gateway",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 480,
              "y": 1092
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 480,
              "y": 1524
            }
          },
          "a0b6": {
            "name": "createInternetGateway",
            "canvasName": "createInternetGateway",
            "summary": "Create Internet Gateway",
            "description": "Create Internet Gateway",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 480,
              "y": 1200
            }
          },
          "3ca4": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Internet Gateway ID",
            "description": "Query Internet Gateway ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.CreateInternetGatewayResponse.internetGateway.internetGatewayId",
                "obj": "$var.a0b6.result"
              },
              "outgoing": {
                "return_data": "$var.job.internetGatewayId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 480,
              "y": 1308
            }
          },
          "6a0c": {
            "name": "attachInternetGateway",
            "canvasName": "attachInternetGateway",
            "summary": "Attache Internet Gateway",
            "description": "Attach Internet Gateway to VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "internetGatewayId": "$var.3ca4.return_data",
                "vpcId": "$var.job.vpcId",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 480,
              "y": 1416
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "a0b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a0b6": {
            "3ca4": {
              "type": "standard",
              "state": "success"
            }
          },
          "3ca4": {
            "6a0c": {
              "state": "success",
              "type": "standard"
            }
          },
          "6a0c": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "vpcId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "internetGatewayId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2025-01-24T10:42:23.253Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 11,
      "reference": "547916c4-5ec6-4c6a-b827-844936bdb53b",
      "type": "workflow",
      "folder": "/Provision VPC with Networking",
      "document": {
        "name": "Provision VPC with Networking",
        "tasks": {
          "6105": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create VPC",
            "description": "Create VPC",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Create VPC",
                "variables": {
                  "cidrBlock": {
                    "task": "job",
                    "value": "cidrBlock"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "vpcName": {
                    "task": "job",
                    "value": "vpcName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1440,
              "y": 432
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1440,
              "y": 300
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1440,
              "y": 1644
            }
          },
          "7a4f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query VPC ID",
            "description": "Query VPC ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "createdVpc.response.CreateVpcResponse.vpc.vpcId",
                "obj": "$var.6105.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.vpcId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1440,
              "y": 540
            }
          },
          "cb2e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Subnet",
            "description": "Create Subnet",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Create VPC Subnet",
                "variables": {
                  "cidrBlock": {
                    "task": "job",
                    "value": "cidrBlock"
                  },
                  "vpcId": {
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1440,
              "y": 660
            }
          },
          "a632": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Subnet ID",
            "description": "Query Subnet ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "subnetId",
                "obj": "$var.cb2e.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.subnetId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1440,
              "y": 792
            }
          },
          "ee02": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create and Attach Internet Gateway",
            "description": "Create and Attach Internet Gateway",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Create and Attach Internet Gateway",
                "variables": {
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "vpcId": {
                    "task": "7a4f",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1440,
              "y": 912
            }
          },
          "2f28": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Internet Gateway ID",
            "description": "Query Internet Gateway ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "internetGatewayId",
                "obj": "$var.ee02.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.internetGatewayId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1440,
              "y": 1032
            }
          },
          "e5bc": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Default Route",
            "description": "Create Default Route",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Create Route",
                "variables": {
                  "routeTableId": {
                    "task": "7a4f",
                    "value": "return_data"
                  },
                  "destinationCidrBlock": {
                    "task": "static",
                    "value": "0.0.0.0/0"
                  },
                  "gatewayId": {
                    "task": "2f28",
                    "value": "return_data"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "vpcId": {
                    "task": "7a4f",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1440,
              "y": 1152
            }
          },
          "5d5e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Security Group with Ingress Rules",
            "description": "Create Security Group with Ingress Rules",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66ce026421161b4df2717471: Create Security Group with Ingress Rules",
                "variables": {
                  "securityGroupDescription": {
                    "task": "job",
                    "value": "securityGroupDescription"
                  },
                  "securityGroupName": {
                    "task": "job",
                    "value": "securityGroupName"
                  },
                  "vpcId": {
                    "task": "7a4f",
                    "value": "return_data"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "ruleList": {
                    "task": "5f81",
                    "value": "ruleList"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1440,
              "y": 1392
            }
          },
          "5b97": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Security Group ID",
            "description": "Query Security Group ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "securityGroupId",
                "obj": "$var.5d5e.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.securityGroupId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1440,
              "y": 1512
            }
          },
          "5f81": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Security Group Rule List",
            "description": "Build Security Group Rule List",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e6410623ad20015d2a0620",
                "variableMap": {
                  "ingressRules": "$var.job.ingressRules"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ruleList": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Build Security Group Rule List",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1440,
              "y": 1272
            }
          }
        },
        "transitions": {
          "6105": {
            "7a4f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "6105": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "7a4f": {
            "cb2e": {
              "type": "standard",
              "state": "success"
            }
          },
          "cb2e": {
            "a632": {
              "type": "standard",
              "state": "success"
            }
          },
          "a632": {
            "ee02": {
              "type": "standard",
              "state": "success"
            }
          },
          "ee02": {
            "2f28": {
              "type": "standard",
              "state": "success"
            }
          },
          "2f28": {
            "e5bc": {
              "type": "standard",
              "state": "success"
            }
          },
          "e5bc": {
            "5f81": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d5e": {
            "5b97": {
              "type": "standard",
              "state": "success"
            }
          },
          "5b97": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5f81": {
            "5d5e": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcName": {
              "type": "string"
            },
            "securityGroupDescription": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "securityGroupName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ingressRules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1%2E2%2E3%2E4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": []
              }
            }
          },
          "required": [
            "cidrBlock",
            "adapterId",
            "vpcName",
            "securityGroupDescription",
            "securityGroupName",
            "ingressRules"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcName": {
              "type": "string"
            },
            "securityGroupDescription": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "securityGroupName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ingressRules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1%2E2%2E3%2E4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": []
              }
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "vpcId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "subnetId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "internetGatewayId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "securityGroupId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2025-01-24T10:42:23.253Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "createdVersion": "5.44.64-2022.1.25.0",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 12,
      "reference": "47470e15-741a-4e80-bb99-754b5ce32716",
      "type": "workflow",
      "folder": "/Create EC2 Instance",
      "document": {
        "name": "Create EC2 Instance",
        "tasks": {
          "3101": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Public IP",
            "description": "Query public IP from Instance",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeInstancesResponse.reservationSet.item[0].instancesSet.item[0].networkInterfaceSet.item[0].association.publicIp",
                "obj": "$var.d9b4.result"
              },
              "outgoing": {
                "return_data": "$var.job.publicIp"
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2040,
              "y": 1284
            }
          },
          "5860": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Instance Status",
            "description": "Process instance status",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e520f723ad20015d2a061d",
                "variableMap": {
                  "describeInstanceResponse": "$var.55d8.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "launchComplete": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Process Instance Status",
            "retrySettings": null,
            "nodeLocation": {
              "x": 2040,
              "y": 924
            }
          },
          "7220": {
            "name": "delay",
            "canvasName": "delay",
            "summary": "Wait to Check EC2 Status",
            "description": "Wait 30 seconds before rechecking EC2 creation status",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "time": 60
              },
              "outgoing": {
                "time_in_milliseconds": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1704,
              "y": 1044
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "summary": "workflow_start",
            "description": "workflow_start",
            "nodeLocation": {
              "x": 2040,
              "y": 372
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "summary": "workflow_end",
            "description": "workflow_end",
            "nodeLocation": {
              "x": 2040,
              "y": 1404
            }
          },
          "f799": {
            "name": "runInstances",
            "canvasName": "runInstances",
            "summary": "Launch Instance",
            "description": "Launch Instance",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "displayName": "Awsec2",
            "type": "automatic",
            "variables": {
              "incoming": {
                "blockDeviceMapping": "",
                "imageId": "$var.job.imageId",
                "instanceType": "$var.job.instanceType",
                "ipv6AddressCount": "",
                "ipv6Address": "",
                "kernelId": "",
                "keyName": "",
                "maxCount": 1,
                "minCount": 1,
                "monitoringEnabled": "",
                "placementAvailabilityZone": "",
                "placementAffinity": "",
                "placementGroupName": "",
                "placementPartitionNumber": "",
                "placementHostId": "",
                "placementTenancy": "",
                "placementSpreadDomain": "",
                "ramdiskId": "",
                "securityGroupId": "",
                "securityGroup": "",
                "subnetId": "",
                "userData": "",
                "additionalInfo": "",
                "clientToken": "",
                "disableApiTermination": "",
                "dryRun": false,
                "ebsOptimized": "",
                "iamInstanceProfileArn": "",
                "iamInstanceProfileName": "",
                "instanceInitiatedShutdownBehavior": "",
                "networkInterface": "$var.job.networkInterface",
                "privateIpAddress": "",
                "elasticGpuSpecification": "",
                "elasticInferenceAccelerator": "",
                "tagSpecification": "",
                "launchTemplateLaunchTemplateId": "",
                "launchTemplateLaunchTemplateName": "",
                "launchTemplateVersion": "",
                "instanceMarketOptionsMarketType": "",
                "instanceMarketOptionsSpotOptions": "",
                "creditSpecificationCpuCredits": "",
                "cpuOptionsCoreCount": "",
                "cpuOptionsThreadsPerCore": "",
                "capacityReservationSpecificationCapacityReservationPreference": "",
                "capacityReservationSpecificationCapacityReservationTarget": "",
                "hibernationOptionsConfigured": "",
                "licenseSpecification": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 2040,
              "y": 480
            }
          },
          "4b6d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if EC2 Launch Completed",
            "description": "Check if EC2 Launch Completed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "launchComplete",
                          "task": "5860"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2040,
              "y": 1044
            }
          },
          "ca5e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build EC2 Tag Data",
            "description": "Build EC2 Tag Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e641b023ad20015d2a0621",
                "variableMap": {
                  "vpcName": "$var.job.vpcName",
                  "launchResponse": "$var.f799.result"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ec2Tags": null,
                "instanceIdArray": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Build EC2 Data",
            "retrySettings": null,
            "nodeLocation": {
              "x": 2040,
              "y": 588
            }
          },
          "e1c2": {
            "name": "createTags",
            "canvasName": "createTags",
            "summary": "Add Tag",
            "description": "Add tag to instance",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "resourceId": "$var.ca5e.instanceIdArray",
                "tag": "$var.ca5e.ec2Tags",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2040,
              "y": 696
            }
          },
          "55d8": {
            "name": "describeInstanceStatus",
            "canvasName": "describeInstanceStatus",
            "summary": "Describe Status",
            "description": "Get the instance status from EC2",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "filter": "",
                "instanceId": "$var.ca5e.instanceIdArray",
                "maxResults": "",
                "nextToken": "",
                "dryRun": false,
                "includeAllInstances": true,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2040,
              "y": 816
            }
          },
          "d9b4": {
            "name": "describeInstances",
            "canvasName": "describeInstances",
            "summary": "Describe instance",
            "description": "Describe instance from EC2",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "filter": "",
                "instanceId": "$var.ca5e.instanceIdArray",
                "dryRun": false,
                "maxResults": "",
                "nextToken": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.instanceInfo"
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2040,
              "y": 1164
            }
          }
        },
        "transitions": {
          "3101": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5860": {
            "4b6d": {
              "type": "standard",
              "state": "success"
            }
          },
          "7220": {
            "55d8": {
              "state": "success",
              "type": "revert"
            }
          },
          "workflow_start": {
            "f799": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "f799": {
            "ca5e": {
              "type": "standard",
              "state": "success"
            }
          },
          "4b6d": {
            "7220": {
              "type": "standard",
              "state": "failure"
            },
            "d9b4": {
              "state": "success",
              "type": "standard"
            }
          },
          "ca5e": {
            "e1c2": {
              "state": "success",
              "type": "standard"
            }
          },
          "e1c2": {
            "55d8": {
              "state": "success",
              "type": "standard"
            }
          },
          "55d8": {
            "5860": {
              "state": "success",
              "type": "standard"
            }
          },
          "d9b4": {
            "3101": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "imageId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "instanceType": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "networkInterface": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcName": {
              "type": "string"
            }
          },
          "required": [
            "imageId",
            "instanceType",
            "networkInterface",
            "adapterId",
            "vpcName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "imageId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "instanceType": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "networkInterface": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "vpcName": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "publicIp": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            },
            "instanceInfo": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.40.5-2021.1.8.0",
        "last_updated": "2025-01-24T10:42:23.252Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 13,
      "reference": "63e641b023ad20015d2a0621",
      "type": "transformation",
      "folder": "/Create EC2 Instance",
      "document": {
        "_id": "63e641b023ad20015d2a0621",
        "name": "Build EC2 Tag Data",
        "description": "",
        "incoming": [
          {
            "$id": "vpcName",
            "type": "string"
          },
          {
            "$id": "launchResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "RunInstancesResponse": {
                    "type": "object",
                    "properties": {
                      "instancesSet": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "instanceId": {
                                  "type": "string",
                                  "examples": ["i-0e5a940bc1fc03f1a"]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "ec2Tags",
            "type": "array"
          },
          {
            "$id": "instanceIdArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcName",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "launchResponse",
              "ptr": "/response/RunInstancesResponse/instancesSet/item"
            },
            "to": {
              "location": "method",
              "name": 31,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 25,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": ["Apache Web Server for ", null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 31,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [null, 0],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 25,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 21,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 31,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 33,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "function",
            "function": "buildEc2Tags",
            "args": ["Name", ""],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 33,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [null, "instanceId"],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 21,
              "ptr": "/return/ec2Tags"
            },
            "to": {
              "location": "declaration",
              "name": 22,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 33,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 35,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 35,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "ec2Tags",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "instanceIdArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "integer",
                    "examples": [32]
                  },
                  "port": {
                    "type": "integer",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1%2E2%2E3%2E4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sourceSubnetCidrMask": {
                      "type": "integer",
                      "examples": [32]
                    },
                    "port": {
                      "type": "integer",
                      "examples": [443]
                    },
                    "sourceIp": {
                      "type": "string",
                      "examples": ["1%2E2%2E3%2E4"],
                      "format": "ipv4"
                    },
                    "protocol": {
                      "type": "string",
                      "examples": ["TCP"]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "buildRule",
                "args": [null, null, null, null],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/port"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceIp"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/protocol"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/3/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/rule"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRuleList",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRuleList",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "sourceSubnetCidrMask",
                "type": "number"
              },
              {
                "$id": "port",
                "type": "number"
              },
              {
                "$id": "sourceIp",
                "type": "string"
              },
              {
                "$id": "protocol",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "rule",
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["192%2E168%2E30%2E10"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceSubnetCidrMask",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "port",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/port"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceIp",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceIp"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "protocol",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/protocol"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRule",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRule",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "Key",
                "type": "string"
              },
              {
                "$id": "Value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "ec2Tags",
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string",
                    "examples": ["Name"]
                  },
                  "Value": {
                    "type": "string",
                    "examples": ["ec2"]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Key",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "ec2Tags",
                  "ptr": "/Key"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "ec2Tags",
                  "ptr": "/Value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildEc2Tags",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "buildEc2Tags",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 8
        },
        "created": "2025-01-14T18:55:38.765Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.254Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 14,
      "reference": "652ff25180403501cbadcbe5",
      "type": "transformation",
      "folder": "/Provision VPC with Networking",
      "document": {
        "_id": "652ff25180403501cbadcbe5",
        "name": "Build Ingress Rule List",
        "description": "",
        "incoming": [
          {
            "$id": "ruleList",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sourceSubnetCidrMask": {
                  "type": "number",
                  "examples": [32]
                },
                "port": {
                  "type": "number",
                  "examples": [443]
                },
                "sourceIp": {
                  "type": "string",
                  "examples": ["1.2.3.4"],
                  "format": "ipv4"
                },
                "protocol": {
                  "type": "string",
                  "examples": ["TCP"]
                }
              },
              "required": []
            }
          },
          {
            "$id": "groupId",
            "type": "string"
          },
          {
            "$id": "adapterId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "ruleList",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ruleList",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "groupId",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "buildRuleForSecurityGroup", null, null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "ruleList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "adapterId",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/3/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1%2E2%2E3%2E4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sourceSubnetCidrMask": {
                      "type": "number",
                      "examples": [32]
                    },
                    "port": {
                      "type": "number",
                      "examples": [443]
                    },
                    "sourceIp": {
                      "type": "string",
                      "examples": ["1%2E2%2E3%2E4"],
                      "format": "ipv4"
                    },
                    "protocol": {
                      "type": "string",
                      "examples": ["TCP"]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "string",
                "isConstValue": true
              },
              {
                "$id": "constantValue2",
                "type": "string",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "$id": "ruleList",
                "type": "object",
                "properties": {
                  "sourceCidrIp": {
                    "type": "string"
                  },
                  "toPort": {
                    "type": "number",
                    "examples": [443]
                  },
                  "fromPort": {
                    "type": "number",
                    "examples": [443]
                  },
                  "ipProtocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  },
                  "groupId": {
                    "type": "string"
                  },
                  "adapterId": {
                    "type": "string"
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/groupId"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "sourceSubnetCidrMask"],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "port"],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "sourceIp"],
                "view": {
                  "row": 3,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "protocol"],
                "view": {
                  "row": 4,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 9,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [null, "/", null],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/toPort"
                },
                "context": "#"
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/fromPort"
                },
                "context": "#"
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/ipProtocol"
                },
                "context": "#"
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/sourceCidrIp"
                },
                "context": "#"
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue2",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/adapterId"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRuleForSecurityGroup",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "buildRuleForSecurityGroup",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-14T18:56:44.258Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.254Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 15,
      "reference": "63e6410623ad20015d2a0620",
      "type": "transformation",
      "folder": "/Provision VPC with Networking",
      "document": {
        "_id": "63e6410623ad20015d2a0620",
        "name": "Build Security Group Rule List",
        "description": "",
        "incoming": [
          {
            "$id": "ingressRules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sourceSubnetCidrMask": {
                  "type": "number",
                  "examples": [32]
                },
                "port": {
                  "type": "number",
                  "examples": [443]
                },
                "sourceIp": {
                  "type": "string",
                  "examples": ["1%2E2%2E3%2E4"],
                  "format": "ipv4"
                },
                "protocol": {
                  "type": "string",
                  "examples": ["TCP"]
                }
              },
              "required": []
            }
          }
        ],
        "outgoing": [
          {
            "$id": "ruleList",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "buildRuleList"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "ruleList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ingressRules",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "integer",
                    "examples": [32]
                  },
                  "port": {
                    "type": "integer",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["1%2E2%2E3%2E4"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sourceSubnetCidrMask": {
                      "type": "integer",
                      "examples": [32]
                    },
                    "port": {
                      "type": "integer",
                      "examples": [443]
                    },
                    "sourceIp": {
                      "type": "string",
                      "examples": ["1%2E2%2E3%2E4"],
                      "format": "ipv4"
                    },
                    "protocol": {
                      "type": "string",
                      "examples": ["TCP"]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "buildRule",
                "args": [null, null, null, null],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/port"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceIp"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/protocol"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/3/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/rule"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRuleList",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRuleList",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "sourceSubnetCidrMask",
                "type": "number"
              },
              {
                "$id": "port",
                "type": "number"
              },
              {
                "$id": "sourceIp",
                "type": "string"
              },
              {
                "$id": "protocol",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "rule",
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [32]
                  },
                  "port": {
                    "type": "number",
                    "examples": [443]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": ["192%2E168%2E30%2E10"],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": ["TCP"]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceSubnetCidrMask",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "port",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/port"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceIp",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceIp"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "protocol",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/protocol"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRule",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRule",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 8
        },
        "created": "2025-01-14T18:55:38.824Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.255Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 16,
      "reference": "6245ac411678ea01c7fbcd3e",
      "type": "transformation",
      "folder": "/Destroy VPC and EC2 Instance/Delete Security Groups",
      "document": {
        "_id": "6245ac411678ea01c7fbcd3e",
        "name": "Build SG Delete Array",
        "description": "",
        "incoming": [
          {
            "$id": "sgResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "DescribeSecurityGroupsResponse": {
                    "type": "object",
                    "properties": {
                      "securityGroupInfo": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "type": "string",
                                  "examples": ["sg-06252ec7d193ab7cc"]
                                },
                                "groupName": {
                                  "type": "string",
                                  "examples": ["default"]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "sgDeleteArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [null, "removeDefault"],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "sgResponse",
              "ptr": "/response/DescribeSecurityGroupsResponse/securityGroupInfo/item"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "Build SG Delete Object"],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "sgDeleteArray",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "examples": ["sg-06252ec7d193ab7cc"]
                  },
                  "groupName": {
                    "type": "string",
                    "examples": ["default"]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "examples": ["sg-06252ec7d193ab7cc"]
                    },
                    "groupName": {
                      "type": "string",
                      "examples": ["default"]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "inequality",
                "args": [null, "default"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/groupName"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "removeDefault",
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "removeDefault",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "groupId"],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [null],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "groupId", null],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "Build SG Delete Object",
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "Build SG Delete Object",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.836Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.255Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 17,
      "reference": "6532e52c344dfd019e4b388c",
      "type": "transformation",
      "folder": "/Destroy VPC and EC2 Instance/Delete Subnets",
      "document": {
        "_id": "6532e52c344dfd019e4b388c",
        "name": "Build Subnet Delete Array",
        "description": "",
        "incoming": [
          {
            "$id": "subnetResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "DescribeSubnetsResponse": {
                    "type": "object",
                    "properties": {
                      "subnetSet": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "subnetId": {
                                  "type": "string",
                                  "examples": ["subnet-0f7abee2208d3ffa0"]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "subnetDeleteArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "subnetResponse",
              "ptr": "/response/DescribeSubnetsResponse/subnetSet/item"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "subnet builder"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "subnetDeleteArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "subnetId": {
                    "type": "string",
                    "examples": ["subnet-0f7abee2208d3ffa0"]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "subnetId": {
                      "type": "string",
                      "examples": ["subnet-0f7abee2208d3ffa0"]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [null],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/subnetId"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "subnetId", null],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "subnet builder",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "subnet builder",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.822Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.256Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 18,
      "reference": "63e3a39ed59d6601415e4e09",
      "type": "transformation",
      "folder": "/Provision VPC with Networking/Create Route",
      "document": {
        "_id": "63e3a39ed59d6601415e4e09",
        "name": "Build VPC Filter",
        "description": "",
        "incoming": [
          {
            "$id": "vpcId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "vpcFilter",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "function",
            "function": "buildFilterObject",
            "args": ["vpc-id", null],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 10,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/tag"
            },
            "to": {
              "location": "declaration",
              "name": 10,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcFilter",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcId",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/1/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "Name",
                "type": "string"
              },
              {
                "$id": "Value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "tag",
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "examples": ["Name"]
                  },
                  "Value": {
                    "type": "string",
                    "examples": ["Value"]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Name",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Name"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildFilterObject",
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "buildFilterObject",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.832Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.256Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 19,
      "reference": "655e0ee83bd5d401c431dc95",
      "type": "transformation",
      "folder": "/Provision VPC with Networking/Create VPC",
      "document": {
        "_id": "655e0ee83bd5d401c431dc95",
        "name": "Build VPC Tag Data",
        "description": "",
        "incoming": [
          {
            "$id": "createVpcResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "CreateVpcResponse": {
                    "type": "object",
                    "properties": {
                      "_attr": {
                        "type": "object",
                        "properties": {
                          "xmlns": {
                            "type": "string",
                            "examples": [
                              "http://ec2.amazonaws.com/doc/2016-11-15/"
                            ]
                          }
                        },
                        "required": []
                      },
                      "requestId": {
                        "type": "string",
                        "examples": ["7f29ef6d-b4ec-463d-971b-d28d4b1d73b3"],
                        "format": "uuid"
                      },
                      "vpc": {
                        "type": "object",
                        "properties": {
                          "vpcId": {
                            "type": "string",
                            "examples": ["vpc-061a2673e5d59fb85"]
                          },
                          "ownerId": {
                            "type": "string",
                            "examples": ["314014972859"]
                          },
                          "state": {
                            "type": "string",
                            "examples": ["pending"]
                          },
                          "cidrBlock": {
                            "type": "string",
                            "examples": ["10.20.30.0/28"]
                          },
                          "cidrBlockAssociationSet": {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cidrBlock": {
                                      "type": "string",
                                      "examples": ["10.20.30.0/28"]
                                    },
                                    "associationId": {
                                      "type": "string",
                                      "examples": [
                                        "vpc-cidr-assoc-0dbe5ead82813290a"
                                      ]
                                    },
                                    "cidrBlockState": {
                                      "type": "object",
                                      "properties": {
                                        "state": {
                                          "type": "string",
                                          "examples": ["associated"]
                                        }
                                      },
                                      "required": []
                                    }
                                  },
                                  "required": []
                                }
                              }
                            },
                            "required": []
                          },
                          "ipv6CidrBlockAssociationSet": {
                            "type": "string"
                          },
                          "dhcpOptionsId": {
                            "type": "string",
                            "examples": ["dopt-0a03008489c05e706"]
                          },
                          "instanceTenancy": {
                            "type": "string",
                            "examples": ["default"]
                          },
                          "isDefault": {
                            "type": "string",
                            "examples": ["false"]
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "vpcName",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "vpcId",
            "type": "array"
          },
          {
            "$id": "vpcTags",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "createVpcResponse",
              "ptr": "/response/CreateVpcResponse/vpc/vpcId"
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcName",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 3,
            "type": "function",
            "function": "buildTagData",
            "args": ["Name", null],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/tag"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcId",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "concat",
            "args": [[], null],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcTags",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "Key",
                "type": "string"
              },
              {
                "$id": "Value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "tag",
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string",
                    "examples": ["Key"]
                  },
                  "Value": {
                    "type": "string",
                    "examples": ["Value"]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Key",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Key"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildTagData",
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "buildTagData",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.868Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.257Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 20,
      "reference": "63e50af123ad20015d2a061b",
      "type": "transformation",
      "folder": "/Destroy VPC and EC2 Instance",
      "document": {
        "_id": "63e50af123ad20015d2a061b",
        "name": "Prepare VPC ID",
        "description": "",
        "incoming": [
          {
            "$id": "vpcId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "vpcIdArray",
            "type": "array"
          },
          {
            "$id": "vpcIdFilter",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcId",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcIdArray",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "function",
            "function": "buildNameValuePair",
            "args": ["network-interface.vpc-id", null],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcId",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 4,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 4,
              "ptr": "/return/nameValuePair"
            },
            "to": {
              "location": "declaration",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcIdFilter",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string"
              },
              {
                "$id": "value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "nameValuePair",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["network-interface%2Evpc-id"]
                  },
                  "value": {
                    "type": "string",
                    "examples": ["<!vpcId!>"]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "nameValuePair",
                  "ptr": "/name"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "nameValuePair",
                  "ptr": "/value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildNameValuePair",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "buildNameValuePair",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.871Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.258Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 21,
      "reference": "6535d4e97c6b51019f8f4142",
      "type": "transformation",
      "folder": "/Destroy VPC and EC2 Instance",
      "document": {
        "_id": "6535d4e97c6b51019f8f4142",
        "name": "Process Instance Response",
        "description": "",
        "incoming": [
          {
            "$id": "instanceResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "DescribeInstancesResponse": {
                    "type": "object",
                    "properties": {
                      "reservationSet": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "instancesSet": {
                                  "type": "object",
                                  "properties": {
                                    "item": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "instanceId": {
                                            "type": "string",
                                            "examples": ["i-091629e3a896331c2"]
                                          }
                                        },
                                        "required": []
                                      }
                                    }
                                  },
                                  "required": []
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "instanceIdArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "instanceResponse",
              "ptr": "/response/DescribeInstancesResponse/reservationSet/item"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "method",
            "library": "Array",
            "method": "flatMap",
            "args": [null, "extractAndFlattenInstances"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "extractInstanceIds"],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "instanceIdArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "instancesSet": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instanceId": {
                              "type": "string",
                              "examples": ["i-091629e3a896331c2"]
                            }
                          },
                          "required": []
                        }
                      }
                    },
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "instancesSet": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "instanceId": {
                                "type": "string",
                                "examples": ["i-091629e3a896331c2"]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/instancesSet/item"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "extractAndFlattenInstances",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "extractAndFlattenInstances",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "instanceId"],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "extractInstanceIds",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "extractInstanceIds",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.874Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.266Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 22,
      "reference": "63e520f723ad20015d2a061d",
      "type": "transformation",
      "folder": "/Create EC2 Instance",
      "document": {
        "_id": "63e520f723ad20015d2a061d",
        "name": "Process Instance Status",
        "description": "",
        "incoming": [
          {
            "$id": "describeInstanceResponse",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "launchComplete",
            "type": "boolean"
          }
        ],
        "steps": [
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "describeInstanceResponse",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "describeInstanceResponse",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 15,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "describeInstanceResponse",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 16,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "method",
            "library": "WorkFlowEngine",
            "method": "query",
            "args": [
              false,
              "response.DescribeInstanceStatusResponse.instanceStatusSet.item[0].instanceState.name",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "method",
            "library": "WorkFlowEngine",
            "method": "query",
            "args": [
              false,
              "response.DescribeInstanceStatusResponse.instanceStatusSet.item[0].systemStatus.status",
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 16,
            "type": "method",
            "library": "WorkFlowEngine",
            "method": "query",
            "args": [
              false,
              "response.DescribeInstanceStatusResponse.instanceStatusSet.item[0].instanceStatus.status",
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 15,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [null, "running"],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [null, "ok"],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [null, "ok"],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "method",
            "library": "Logical",
            "method": "and",
            "args": [null, null],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "method",
            "library": "Logical",
            "method": "and",
            "args": [null, null],
            "view": {
              "row": 1,
              "col": 4
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "launchComplete",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2025-01-14T18:55:38.876Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:42:23.259Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Provision VPC with Networking",
      "children": [
        {
          "iid": 11,
          "nodeType": "component"
        },
        {
          "nodeType": "folder",
          "name": "Create VPC",
          "children": [
            {
              "iid": 6,
              "nodeType": "component"
            },
            {
              "iid": 19,
              "nodeType": "component"
            }
          ]
        },
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 10,
          "nodeType": "component"
        },
        {
          "nodeType": "folder",
          "name": "Create Route",
          "children": [
            {
              "iid": 7,
              "nodeType": "component"
            },
            {
              "iid": 18,
              "nodeType": "component"
            }
          ]
        },
        {
          "iid": 15,
          "nodeType": "component"
        },
        {
          "iid": 2,
          "nodeType": "component"
        },
        {
          "iid": 14,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Create EC2 Instance",
      "children": [
        {
          "iid": 12,
          "nodeType": "component"
        },
        {
          "iid": 13,
          "nodeType": "component"
        },
        {
          "iid": 22,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Destroy VPC and EC2 Instance",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 20,
          "nodeType": "component"
        },
        {
          "iid": 21,
          "nodeType": "component"
        },
        {
          "nodeType": "folder",
          "name": "Delete Security Groups",
          "children": [
            {
              "iid": 4,
              "nodeType": "component"
            },
            {
              "iid": 16,
              "nodeType": "component"
            }
          ]
        },
        {
          "nodeType": "folder",
          "name": "Delete Subnets",
          "children": [
            {
              "iid": 8,
              "nodeType": "component"
            },
            {
              "iid": 17,
              "nodeType": "component"
            }
          ]
        },
        {
          "iid": 9,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-27T16:44:20.189Z",
  "createdBy": {
    "_id": "601ea9bff386a61ffd36b172",
    "provenance": "Local AAA",
    "username": "admin@itential",
    "missing": true
  },
  "lastUpdated": "2025-01-24T10:42:23.231Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 33,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
