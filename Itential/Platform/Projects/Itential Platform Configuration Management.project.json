{
  "_id": "66cf67be21161b4df271747b",
  "name": "Itential Platform Configuration Management",
  "description": "Asset includes backup configuration, command template runner, golden configuration, command template execution, command template diff and push confirmation.",
  "components": [
    {
      "iid": 0,
      "reference": "4c44e464-c88c-47c6-9228-2fd6814d9bc8",
      "type": "workflow",
      "folder": "/Command Template Runner",
      "document": {
        "name": "Command Template Runner",
        "tasks": {
          "525": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 300,
              "y": 576
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 888,
              "y": 360
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 900,
              "y": 924
            }
          },
          "8ce4": {
            "name": "RunCommandTemplate",
            "canvasName": "RunCommandTemplate",
            "summary": "Run Command Template against Device",
            "description": "Run a Command Template against a device",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "template": "$var.job.templateName",
                "variables": "$var.job.templateVariables",
                "devices": "$var.job.devices"
              },
              "outgoing": {
                "mop_template_results": "$var.job.templateResults"
              },
              "error": "$var.job.templateError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 888,
              "y": 492
            }
          },
          "81d8": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 300,
              "y": 672
            }
          },
          "f1a7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Template Error",
            "description": "Show the template failure message and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Template Errored",
                "message": "$var.a7f3.errorMessage",
                "body": "$var.8ce4.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Continue"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1488,
              "y": 840
            }
          },
          "543a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Errored and If Reattempting",
            "description": "Check if template errored and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1200,
              "y": 492
            }
          },
          "849c": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Reattempt Template",
            "description": "Reattempt the template after waiting the specified number of minutes",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "connection",
                "minutes": "$var.job.reattemptWaitTime",
                "attempts": "$var.job.reattemptQuantity"
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 888,
              "y": 672
            }
          },
          "f884": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Reattempting",
            "description": "Check if template failed and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 888,
              "y": 576
            }
          },
          "b1a0": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1200,
              "y": 576
            }
          },
          "fe84": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 600,
              "y": 672
            }
          },
          "6bd2": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Not Reattempting",
            "description": "Check if template failed and if not reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 600,
              "y": 576
            }
          },
          "9c18": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1488,
              "y": 492
            }
          },
          "955f": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1188,
              "y": 672
            }
          },
          "f36c": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1788,
              "y": 672
            }
          },
          "a7f3": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Command Template Runner Error Message",
            "description": "Create Command Template Runner error message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6553e5b9fb4afe017442d30c",
                "variableMap": {
                  "templateName": "$var.job.templateName"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "errorMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1488,
              "y": 756
            }
          },
          "580e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Template Errored",
            "description": "Check if template errored",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "8ce4",
                          "variable": "error"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1488,
              "y": 672
            }
          }
        },
        "transitions": {
          "525": {
            "81d8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "8ce4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "8ce4": {
            "525": {
              "type": "standard",
              "state": "success"
            },
            "543a": {
              "type": "standard",
              "state": "error"
            },
            "f884": {
              "type": "standard",
              "state": "success"
            },
            "b1a0": {
              "type": "standard",
              "state": "success"
            },
            "6bd2": {
              "type": "standard",
              "state": "success"
            }
          },
          "81d8": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f1a7": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "8ce4": {
              "type": "revert",
              "state": "success"
            }
          },
          "543a": {
            "849c": {
              "type": "standard",
              "state": "success"
            },
            "9c18": {
              "type": "standard",
              "state": "failure"
            }
          },
          "849c": {
            "8ce4": {
              "type": "revert",
              "state": "success"
            },
            "955f": {
              "state": "error",
              "type": "standard"
            }
          },
          "f884": {
            "849c": {
              "type": "standard",
              "state": "success"
            }
          },
          "b1a0": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe84": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "81d8": {
              "type": "standard",
              "state": "failure"
            }
          },
          "6bd2": {
            "fe84": {
              "state": "success",
              "type": "standard"
            }
          },
          "9c18": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "a7f3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "955f": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "580e": {
              "state": "failure",
              "type": "standard"
            }
          },
          "f36c": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "a7f3": {
            "f1a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "580e": {
            "f36c": {
              "state": "failure",
              "type": "standard"
            },
            "a7f3": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["Device 2", "Device 1"]
              }
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": ["test"]
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "suppressSuccessMessage",
            "templateName",
            "templateVariables",
            "devices",
            "reattempt",
            "_id",
            "reattemptWaitTime",
            "reattemptQuantity",
            "suppressFailureMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["Device 2", "Device 1"]
              }
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "initiator": {
              "type": "string"
            },
            "templateResults": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "all_pass_flag": {
                  "type": "boolean"
                },
                "evaluated": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "parameters": {
                  "type": "object",
                  "properties": {}
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rule": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "eval": {
                        "type": "string",
                        "examples": ["contains"]
                      },
                      "raw": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "result": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "device": {
                  "type": "string",
                  "examples": ["device1"]
                },
                "response": {
                  "type": "string",
                  "examples": ["version: 10.0.0"]
                },
                "result": {
                  "type": "boolean"
                }
              }
            },
            "templateError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.30.0",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated": "2025-01-24T15:09:29.485Z",
        "created": "2024-08-28T18:09:03.023Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "5645f5d4-1765-45d3-88de-6ed66e72f53a",
      "type": "workflow",
      "folder": "/Golden Configuration",
      "document": {
        "name": "Golden Configuration Tree",
        "tasks": {
          "597": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Evaluate Failure Length",
            "description": "Evaluate Failure Length",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "length",
                          "task": "a479"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -6372,
              "y": 1272
            }
          },
          "727": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Make Tree Query",
            "description": "Make Tree Query",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "[name=<!treeName!>].id",
                "outputType": "string",
                "variables": "$var.7c0d.options"
              },
              "outgoing": {
                "output": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -6372,
              "y": 840
            }
          },
          "2065": {
            "name": "renderJinjaTemplate",
            "canvasName": "renderJinjaTemplate",
            "summary": "Compliance Formatter",
            "description": "Use template to convert JSON to human readable",
            "location": "Application",
            "locationType": null,
            "app": "TemplateBuilder",
            "type": "automatic",
            "displayName": "TemplateBuilder",
            "variables": {
              "incoming": {
                "name": "GC Cleaner Multi Line - Grouped",
                "context": "$var.d8cb.complianceReportDetail"
              },
              "outgoing": {
                "renderedTemplate": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -5796,
              "y": 1440
            }
          },
          "5208": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Errored Device",
            "description": "Iterate over each error device in the list of errored devices",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.6882.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -6084,
              "y": 1716
            }
          },
          "5507": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query rendered template",
            "description": "Query text value from jinja template output",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "renderedTemplate",
                "obj": "$var.2065.renderedTemplate"
              },
              "outgoing": {
                "return_data": "$var.job.report"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -5796,
              "y": 1524
            }
          },
          "6882": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Errored Devices",
            "description": "Query for Failures from Compliance",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "erroredDevices",
                "obj": "$var.bc61.runComplianceBatchResult"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -6192,
              "y": 1104
            }
          },
          "8024": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Get Length of Errored Devices",
            "description": "Get Length of Errored Devices",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.6882.return_data"
              },
              "outgoing": {
                "length": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -6192,
              "y": 1188
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -6372,
              "y": 564
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -6372,
              "y": 1824
            }
          },
          "bc61": {
            "name": "runComplianceForTree",
            "canvasName": "runComplianceForTree",
            "summary": "Run Golden Config Tree Compliance",
            "description": "Run Golden Config Tree Compliance",
            "location": "Application",
            "locationType": null,
            "app": "ConfigurationManager",
            "type": "automatic",
            "displayName": "ConfigurationManager",
            "variables": {
              "incoming": {
                "treeId": "$var.140c.return_data",
                "version": "initial",
                "variables": "",
                "grading": ""
              },
              "outgoing": {
                "runComplianceBatchResult": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -6372,
              "y": 1020
            }
          },
          "324b": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Failures",
            "description": "Query for Failures from Compliance",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "reports[*score!=100.00]",
                "obj": "$var.bc61.runComplianceBatchResult"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -6552,
              "y": 1104
            }
          },
          "a479": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Get Length of Failures",
            "description": "Get Length of Failures",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.324b.return_data"
              },
              "outgoing": {
                "length": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -6552,
              "y": 1188
            }
          },
          "c1c3": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Failure",
            "description": "Iterate over each failure in the list of failure reports",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.324b.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -6084,
              "y": 1272
            }
          },
          "d8cb": {
            "name": "getComplianceReportDetail",
            "canvasName": "getComplianceReportDetail",
            "summary": "Get Compliance Results Report",
            "description": "Get Compliance Results Report",
            "location": "Application",
            "locationType": null,
            "app": "ConfigurationManager",
            "type": "automatic",
            "displayName": "ConfigurationManager",
            "variables": {
              "incoming": {
                "reportId": "$var.eadb.return_data"
              },
              "outgoing": {
                "complianceReportDetail": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -5796,
              "y": 1356
            }
          },
          "eadb": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query reportId",
            "description": "Query the reportId from the loop context",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "reportId",
                "obj": "$var.c1c3.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -5796,
              "y": 1272
            }
          },
          "f783": {
            "name": "getGoldenConfigTrees",
            "canvasName": "getGoldenConfigTrees",
            "summary": "Get All Golden Config Trees",
            "description": "Get All Golden Config Trees",
            "location": "Application",
            "locationType": null,
            "app": "ConfigurationManager",
            "type": "automatic",
            "displayName": "ConfigurationManager",
            "variables": {
              "incoming": {},
              "outgoing": {
                "goldenConfigTrees": null
              }
            },
            "groups": [],
            "actor": "Pronghorn",
            "nodeLocation": {
              "x": -6372,
              "y": 756
            }
          },
          "140c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query treeId",
            "description": "Query treeId",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "$var.727.output",
                "obj": "$var.f783.goldenConfigTrees"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -6372,
              "y": 936
            }
          },
          "850c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Compliance Errors",
            "description": "View Compliance Errors",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Compliance Errors",
                "message": "",
                "body": "$var.5507.return_data",
                "variables": {},
                "btn_success": "Proceed",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -5508,
              "y": 1608
            }
          },
          "7c0d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Combine Golden Configuration Data",
            "description": "Combine Golden Configuration Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65528bdc1d0dff04f21e8517",
                "variableMap": {
                  "suppressFailureMessage": "$var.job.suppressFailureMessage",
                  "treeName": "$var.job.treeName"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "options": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -6372,
              "y": 660
            }
          },
          "19c1": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Suppress Failure Message",
            "description": "Check if Suppress Failure Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -5796,
              "y": 1608
            }
          },
          "9ef7": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Eval Errored Devices Length",
            "description": "Evaluated errored devices length",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "length",
                          "task": "8024"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -6372,
              "y": 1716
            }
          },
          "f77d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Suppress Failure Message",
            "description": "Check if Suppress Failure Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -5796,
              "y": 1716
            }
          },
          "da7f": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Errored Device",
            "description": "View Errored Device",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Errored Device",
                "message": "",
                "body": "Device Name: <!deviceName!>\nError: <!reason!>",
                "variables": "$var.5208.current_item",
                "btn_success": "Proceed",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -5508,
              "y": 1716
            }
          }
        },
        "transitions": {
          "597": {
            "c1c3": {
              "type": "standard",
              "state": "failure"
            },
            "9ef7": {
              "state": "success",
              "type": "standard"
            }
          },
          "727": {
            "140c": {
              "type": "standard",
              "state": "success"
            }
          },
          "2065": {
            "5507": {
              "type": "standard",
              "state": "success"
            }
          },
          "4708": {},
          "5208": {
            "f77d": {
              "type": "standard",
              "state": "loop"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "5507": {
            "19c1": {
              "state": "success",
              "type": "standard"
            }
          },
          "6882": {
            "8024": {
              "state": "success",
              "type": "standard"
            }
          },
          "8024": {
            "597": {
              "state": "success",
              "type": "standard"
            }
          },
          "8543": {},
          "workflow_start": {
            "7c0d": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "bc61": {
            "6882": {
              "state": "success",
              "type": "standard"
            },
            "324b": {
              "type": "standard",
              "state": "success"
            }
          },
          "324b": {
            "a479": {
              "type": "standard",
              "state": "success"
            }
          },
          "a479": {
            "597": {
              "type": "standard",
              "state": "success"
            }
          },
          "c1c3": {
            "eadb": {
              "type": "standard",
              "state": "loop"
            },
            "9ef7": {
              "state": "success",
              "type": "standard"
            }
          },
          "d8cb": {
            "2065": {
              "type": "standard",
              "state": "success"
            }
          },
          "eadb": {
            "d8cb": {
              "type": "standard",
              "state": "success"
            }
          },
          "f783": {
            "727": {
              "type": "standard",
              "state": "success"
            }
          },
          "140c": {
            "bc61": {
              "state": "success",
              "type": "standard"
            }
          },
          "850c": {},
          "7c0d": {
            "f783": {
              "state": "success",
              "type": "standard"
            }
          },
          "19c1": {
            "850c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "9ef7": {
            "5208": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f77d": {
            "da7f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "da7f": {},
          "7cf8": {},
          "702d": {},
          "e749": {},
          "9e62": {},
          "776e": {},
          "3cd1": {},
          "80d8": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "treeName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["suppressFailureMessage", "treeName"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "treeName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "report": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.19.0",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated": "2025-01-24T15:09:29.486Z",
        "created": "2024-08-28T18:09:03.023Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "f867ed73-c358-4f51-a2f7-8df7c5df8082",
      "type": "workflow",
      "folder": "/Command Template Execution",
      "document": {
        "name": "Command Template Execution",
        "tasks": {
          "7096": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Command Template",
            "description": "Handle Command Template Inputs",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "66cf67bf21161b4df2717480",
                "variableMap": {
                  "deviceList": "",
                  "execution": ""
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "devices": null,
                "execution": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Command Template",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1464,
              "y": 876
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1464,
              "y": 792
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1464,
              "y": 1140
            }
          },
          "6f5": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Command Template - Serial",
            "description": "Command Template execution with Child Job (Serial)",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "job",
                    "value": "templateName"
                  },
                  "templateVariables": {
                    "task": "job",
                    "value": "templateVariables"
                  },
                  "devices": {
                    "variable": "",
                    "task": "5d74",
                    "value": "current_item"
                  },
                  "reattempt": {
                    "task": "job",
                    "value": "reattempt"
                  },
                  "reattemptWaitTime": {
                    "task": "job",
                    "value": "reattemptWaitTime"
                  },
                  "reattemptQuantity": {
                    "task": "job",
                    "value": "reattemptQuantity"
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1752,
              "y": 1044
            }
          },
          "5d74": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "Iterate Over Each Device",
            "description": "Iterate Over Each Device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.7096.devices"
              },
              "outgoing": {
                "current_item": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1464,
              "y": 1044
            }
          },
          "6bf9": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Command Template - Parallel",
            "description": "Command Template execution with Child Job (Parallel)",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Command Template Runner",
                "variables": {
                  "templateName": {
                    "task": "job",
                    "value": "templateName"
                  },
                  "templateVariables": {
                    "task": "job",
                    "value": "templateVariables"
                  },
                  "devices": {
                    "variable": "",
                    "task": "7096",
                    "value": "devices"
                  },
                  "reattempt": {
                    "task": "job",
                    "value": "reattempt"
                  },
                  "reattemptWaitTime": {
                    "task": "job",
                    "value": "reattemptWaitTime"
                  },
                  "reattemptQuantity": {
                    "task": "job",
                    "value": "reattemptQuantity"
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "_id": {
                    "task": "6ca8",
                    "value": "return_value"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": 1752,
              "y": 960
            }
          },
          "6ca8": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Eval Execution",
            "description": "Run an evaluation to determine if execution should be processed as Serial or Parallel",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "execution",
                          "task": "7096"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "Serial",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1464,
              "y": 960
            }
          }
        },
        "transitions": {
          "7096": {
            "6ca8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "7096": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6f5": {},
          "5d74": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "6f5": {
              "type": "standard",
              "state": "loop"
            }
          },
          "6bf9": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6ca8": {
            "5d74": {
              "type": "standard",
              "state": "success"
            },
            "6bf9": {
              "type": "standard",
              "state": "failure"
            }
          },
          "4f0f": {},
          "8ee0": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "templateName",
            "templateVariables",
            "reattempt",
            "reattemptWaitTime",
            "reattemptQuantity",
            "suppressFailureMessage",
            "suppressSuccessMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "created": "2024-08-28T18:09:03.023Z",
        "createdVersion": "5.40.5-2021.1.52.0",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T15:09:29.488Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "6ad5b498-98ac-49fd-8467-f527b3ae1414",
      "type": "workflow",
      "folder": "/Backup Configuration",
      "document": {
        "name": "Backup Configuration",
        "tasks": {
          "5152": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Handle Backup Configuration Inputs",
            "description": "Handle Backup Configuration Inputs",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "62141dcc7393d9019373d12a",
                "variableMap": {
                  "viewBackup": "$var.job.viewBackup",
                  "deviceList": "$var.job.deviceList",
                  "description": "$var.job.description",
                  "notes": "$var.job.notes"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "devices": null,
                "viewBackup": null,
                "backupOptions": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Backup Configuration",
            "retrySettings": null,
            "nodeLocation": {
              "x": -96,
              "y": 960
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -96,
              "y": 876
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -96,
              "y": 1548
            }
          },
          "a6d5": {
            "name": "backUpDevice",
            "canvasName": "backUpDevice",
            "summary": "Backup Device Configuration",
            "description": "Backup Device Configuration",
            "location": "Application",
            "locationType": null,
            "app": "ConfigurationManager",
            "type": "automatic",
            "displayName": "ConfigurationManager",
            "variables": {
              "incoming": {
                "name": "$var.1d07.current_item",
                "options": "$var.5152.backupOptions"
              },
              "outgoing": {
                "status": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 192,
              "y": 1044
            }
          },
          "e9d6": {
            "name": "getDeviceBackupById",
            "canvasName": "getDeviceBackupById",
            "summary": "Get Device Backup by ID",
            "description": "Get Device Backup by ID",
            "location": "Application",
            "locationType": null,
            "app": "ConfigurationManager",
            "type": "automatic",
            "displayName": "ConfigurationManager",
            "variables": {
              "incoming": {
                "id": "$var.2b3d.return_data"
              },
              "outgoing": {
                "backup": "$var.job.backup"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 192,
              "y": 1212
            }
          },
          "6af7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Backup",
            "description": "View Backup",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "$var.1d07.current_item",
                "message": "Configuration has been backed up.",
                "body": "$var.6dd3.return_data",
                "variables": {},
                "btn_success": "Proceed",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 192,
              "y": 1464
            }
          },
          "2b3d": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Backup ID",
            "description": "Query backup ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "id",
                "obj": "$var.a6d5.status"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 192,
              "y": 1128
            }
          },
          "6dd3": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Raw Config",
            "description": "Query Raw Config for display",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "rawConfig",
                "obj": "$var.e9d6.backup"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 192,
              "y": 1296
            }
          },
          "1d07": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "Iterate Over Each Device",
            "description": "Iterate Over Each Device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.5152.devices"
              },
              "outgoing": {
                "current_item": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -96,
              "y": 1044
            }
          },
          "f8e1": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Eval View Backup",
            "description": "Run an evaluation to determine if to show the backup to the operator",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "viewBackup",
                          "task": "5152"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 192,
              "y": 1380
            }
          },
          "4e34": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Backup Device Error",
            "description": "View Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Backup Device Error",
                "message": "Reached a device error, retry or abort?",
                "body": "$var.a6d5.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 756,
              "y": 1044
            }
          },
          "822c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check If Suppressing Failure Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 468,
              "y": 1044
            }
          }
        },
        "transitions": {
          "5152": {
            "1d07": {
              "state": "success",
              "type": "standard"
            }
          },
          "5812": {},
          "workflow_start": {
            "5152": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a6d5": {
            "2b3d": {
              "type": "standard",
              "state": "success"
            },
            "822c": {
              "type": "standard",
              "state": "error"
            }
          },
          "e9d6": {
            "6dd3": {
              "state": "success",
              "type": "standard"
            }
          },
          "6af7": {},
          "2b3d": {
            "e9d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "6dd3": {
            "f8e1": {
              "type": "standard",
              "state": "success"
            }
          },
          "1d07": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "a6d5": {
              "type": "standard",
              "state": "loop"
            }
          },
          "f8e1": {
            "6af7": {
              "type": "standard",
              "state": "success"
            }
          },
          "4e34": {
            "a6d5": {
              "state": "success",
              "type": "revert"
            }
          },
          "822c": {
            "4e34": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ed0d": {},
          "7a2f": {},
          "c658": {},
          "8db8": {},
          "e095": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "viewBackup": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceList": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "description": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "notes": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "viewBackup",
            "deviceList",
            "description",
            "notes",
            "suppressFailureMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "viewBackup": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceList": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "description": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "notes": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "backup": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "created": "2024-08-28T18:09:03.023Z",
        "createdVersion": "5.40.5-2021.1.52.0",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T15:09:29.490Z",
        "preAutomationTime": 1800000,
        "sla": 60000,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "c7b84f61-f49c-4cea-99d8-bd87930c3e5b",
      "type": "workflow",
      "folder": "/Command Template Diff",
      "document": {
        "name": "Command Template Diff",
        "tasks": {
          "32": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Jinja Template Result",
            "description": "Query Jinja Template Result",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "renderedTemplate",
                "obj": "$var.cc2d.renderedTemplate"
              },
              "outgoing": {
                "return_data": "$var.job.diff"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 588,
              "y": 1164
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 588,
              "y": 912
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 588,
              "y": 1260
            }
          },
          "44c5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Command Template Results",
            "description": "Process Command Template Results",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "62b5ade7a47662015a2a6b40",
                "variableMap": {
                  "pre": "$var.job.pre",
                  "post": "$var.job.post",
                  "separator": "\\n"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "templateContext": null
              }
            },
            "groups": [],
            "task_name": "Process Command Template Results",
            "retrySettings": null,
            "nodeLocation": {
              "x": 588,
              "y": 996
            }
          },
          "cc2d": {
            "name": "renderJinjaTemplate",
            "canvasName": "renderJinjaTemplate",
            "summary": "Render Command Template Diff",
            "description": "Render Command Template Diff",
            "location": "Application",
            "locationType": null,
            "app": "TemplateBuilder",
            "type": "automatic",
            "displayName": "TemplateBuilder",
            "variables": {
              "incoming": {
                "name": "Command Template Diff",
                "context": "$var.44c5.templateContext"
              },
              "outgoing": {
                "renderedTemplate": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 588,
              "y": 1080
            }
          }
        },
        "transitions": {
          "32": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "7154": {},
          "8800": {},
          "8834": {},
          "workflow_start": {
            "44c5": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "44c5": {
            "cc2d": {
              "type": "standard",
              "state": "success"
            }
          },
          "cc2d": {
            "32": {
              "type": "standard",
              "state": "success"
            }
          },
          "3dfb": {},
          "18e4": {},
          "e45e": {},
          "6b8e": {},
          "fba5": {},
          "5c7a": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "pre": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "post": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["pre", "post"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "pre": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "post": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "diff": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["value"]
            }
          }
        },
        "created": "2024-08-28T18:09:03.023Z",
        "createdVersion": "5.40.5-2021.1.86.0",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T15:09:29.488Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 5,
      "reference": "c6997fb0-c726-4569-b1aa-5254e749f634",
      "type": "workflow",
      "folder": "/Push Configuration - IAG",
      "document": {
        "name": "Push Configuration",
        "tasks": {
          "9722": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -360,
              "y": 1476
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1008
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1704
            }
          },
          "ca47": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "itential_cli",
            "description": "Ansible Role itential_cli",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.582e.deviceList",
                "_groups": "",
                "command": "$var.582e.configurationList"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -648,
              "y": 1440
            }
          },
          "b9ed": {
            "name": "renderJinjaTemplate",
            "canvasName": "renderJinjaTemplate",
            "summary": "Render Device Configuration",
            "description": "Render Device Configuration",
            "location": "Application",
            "locationType": null,
            "app": "TemplateBuilder",
            "type": "automatic",
            "displayName": "TemplateBuilder",
            "variables": {
              "incoming": {
                "name": "$var.job.templateName",
                "context": "$var.job.templateVariables"
              },
              "outgoing": {
                "renderedTemplate": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -648,
              "y": 1188
            }
          },
          "7a4c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Error",
            "description": "Show configuration error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Configuration Error",
                "message": "$var.582e.deviceConfigurationPushFailedMessage",
                "body": "$var.ca47.stdout",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -72,
              "y": 1476
            }
          },
          "f14d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Provision Succeeded",
            "description": "Check if provisioning configuration to device succeeded",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "ca47",
                          "variable": "stdout"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": []
                        },
                        "operator": "!=",
                        "query": "completed",
                        "rightQuery": ""
                      },
                      {
                        "query": "completed[0].response[*].status",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "ca47"
                        },
                        "operator": "!contains",
                        "operand_2": {
                          "variable": "FAILURE",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1524
            }
          },
          "cba5": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Configuration",
            "description": "Show the proposed configuration and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Configuration",
                "message": "$var.582e.deviceConfigurationPushMessage",
                "body": "$var.582e.renderedTemplate",
                "variables": {},
                "btn_success": "Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -360,
              "y": 1356
            }
          },
          "c4c9": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Success Message",
            "description": "Check if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1356
            }
          },
          "da74": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -360,
              "y": 1188
            }
          },
          "9a05": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Jinja Template Error",
            "description": "Show configuration error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Jinja Template Error",
                "message": "The Jinja template had an error, retry or abort?",
                "body": "$var.b9ed.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -60,
              "y": 1188
            }
          },
          "61a7": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -360,
              "y": 1272
            }
          },
          "98a4": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -72,
              "y": 1560
            }
          },
          "582e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Push Configuration Data",
            "description": "Process push configuration data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65566996fb4afe017442d30d",
                "variableMap": {
                  "renderedJinja2Template": "$var.b9ed.renderedTemplate",
                  "deviceName": "$var.job.device"
                },
                "options": ""
              },
              "outgoing": {
                "renderedTemplate": "$var.job.configurationToPush",
                "configurationList": null,
                "deviceList": null,
                "deviceConfigurationPushMessage": null,
                "deviceConfigurationPushFailedMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1272
            }
          },
          "ef0a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "SUCCESS"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1608
            }
          },
          "f0d6": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Initialize Result of Push Configuration",
            "description": "Initialize result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "IN PROGRESS"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1104
            }
          },
          "3a05": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "FAILED"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -372,
              "y": 1668
            }
          },
          "08e4": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "FAILED"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -72,
              "y": 1356
            }
          }
        },
        "transitions": {
          "9722": {
            "7a4c": {
              "type": "standard",
              "state": "failure"
            },
            "98a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "f0d6": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "ca47": {
            "9722": {
              "type": "standard",
              "state": "error"
            },
            "f14d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b9ed": {
            "da74": {
              "type": "standard",
              "state": "error"
            },
            "582e": {
              "state": "success",
              "type": "standard"
            }
          },
          "7a4c": {
            "b9ed": {
              "type": "revert",
              "state": "success"
            },
            "98a4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f14d": {
            "9722": {
              "type": "standard",
              "state": "failure"
            },
            "ef0a": {
              "state": "success",
              "type": "standard"
            }
          },
          "cba5": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "08e4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c4c9": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "cba5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "da74": {
            "9a05": {
              "type": "standard",
              "state": "failure"
            },
            "61a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "9a05": {
            "b9ed": {
              "state": "success",
              "type": "revert"
            },
            "61a7": {
              "type": "standard",
              "state": "failure"
            }
          },
          "61a7": {
            "98a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "98a4": {
            "3a05": {
              "state": "success",
              "type": "standard"
            }
          },
          "582e": {
            "c4c9": {
              "state": "success",
              "type": "standard"
            }
          },
          "ef0a": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f0d6": {
            "b9ed": {
              "state": "success",
              "type": "standard"
            }
          },
          "3a05": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "08e4": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "ed0d": {},
          "7a2f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "suppressFailureMessage",
            "templateName",
            "templateVariables",
            "suppressSuccessMessage",
            "device"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "configurationToPush": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "pushConfigurationResult": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T15:09:29.486Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 6,
      "reference": "66cf67bf21161b4df2717483",
      "type": "template",
      "folder": "/Golden Configuration",
      "document": {
        "_id": "66cf67bf21161b4df2717483",
        "command": "",
        "template": "Device Name: {{deviceName}}\nCompliance Report: {{id}}\nVersion: {{version}}\nDevice Type: {{deviceType}}\nTotal Errors: {{totals.errors}}\nTotal Warnings: {{totals.warnings}}\nTotal Infos: {{totals.infos}}\nTotal Passes: {{totals.passes}}\n\nJob Run Time: {{timestamp}}\n\nTotal Issues (Warnings & Errors): {{totals.errors+totals.warnings}}\n\n{% if totals.errors > 0 %}\nIssue Details - Errors:\n-----------------------------------\n{% endif %}\n{% for i in issues if i.severity == \"error\" %}\n  {% if i.path %}\n  {% for p in i.path %}\n  Path: {{p.words|join(' ')|indent(2, true)}}\n  {% endfor %}\n  {% endif %}\n  {{i.spec.words|join(' ', attribute='value')}}\n {% for lines in i.spec.lines recursive %}\n    {{lines.words|join(' ', attribute='value')}}\n   {% for line in lines.lines recursive %}\n      {{line.words|join(' ', attribute='value'|indent(2, false))}}\n      {% if line.lines %}\n   {{loop(line.lines)|indent(2, false)}}\n     {% endif %}\n   {% endfor %}\n {% endfor %}\n{% endfor %}\n\n{% if totals.warnings > 0 %}\nIssue Details - Warnings:\n-----------------------------------\n{% endif %}\n{% for i in issues if i.severity == \"warning\" %}\n  {% if i.path %}\n  {% for p in i.path %}\n  Path: {{p.words|join(' ')|indent(2, true)}}\n  {% endfor %}\n  {% endif %}\n  {{i.spec.words|join(' ', attribute='value')}}\n {% for lines in i.spec.lines recursive %}\n    {{lines.words|join(' ', attribute='value')}}\n   {% for line in lines.lines recursive %}\n      {{line.words|join(' ', attribute='value'|indent(2, false))}}\n      {% if line.lines %}\n   {{loop(line.lines)|indent(2, false)}}\n     {% endif %}\n   {% endfor %}\n {% endfor %}\n{% endfor %}\n\n\n\n",
        "type": "jinja2",
        "version": 1,
        "tags": [],
        "name": "GC Cleaner Multi Line - Grouped",
        "data": "{\n  \"id\": \"5fb26666959dad698c9bb369\",\n  \"batchId\": \"5fb26662e08292698c80db55\",\n  \"treeId\": \"5e555ccd51338f4def0d1c16\",\n  \"version\": \"initial\",\n  \"nodePath\": \"base/east/atlanta\",\n  \"deviceType\": \"cisco-ios\",\n  \"specId\": \"5ec4102fa1fbba1053dfb64e\",\n  \"inheritedSpecIds\": [\n    \"5e555ccd51338f4def0d1c15\",\n    \"5e555cf351338f4def0d1c18\"\n  ],\n  \"deviceName\": \"CORE-ATL-3\",\n  \"variables\": [\n    {\n      \"type\": \"literal\",\n      \"value\": \"\",\n      \"name\": \"username\"\n    },\n    {\n      \"type\": \"literal\",\n      \"value\": \"\",\n      \"name\": \"template\"\n    },\n    {\n      \"type\": \"literal\",\n      \"value\": \"172.3.1.0\",\n      \"name\": \"DHP_NAT_ACL_IP\"\n    },\n    {\n      \"type\": \"literal\",\n      \"value\": \"168.1.2.0\",\n      \"name\": \"AGRI_NAT_IP\"\n    },\n    {\n      \"type\": \"literal\",\n      \"value\": \"\",\n      \"name\": \"uplink_ip_address\"\n    }\n  ],\n  \"timestamp\": \"2020-11-16T11:45:38.042Z\",\n  \"totals\": {\n    \"errors\": 10,\n    \"warnings\": 1,\n    \"infos\": 0,\n    \"passes\": 24\n  },\n  \"issues\": [\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ec41049f5adf7dc\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ec41049f5adf7dc\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"ip\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"standard\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"GS_NAT_ACL\"\n          }\n        ],\n        \"lines\": [\n          {\n            \"evalMode\": \"required\",\n            \"severity\": \"error\",\n            \"fixMode\": \"manual\",\n            \"id\": \"5ec41049ec247d76\",\n            \"words\": [\n              {\n                \"type\": \"literal\",\n                \"value\": \"permit\"\n              },\n              {\n                \"type\": \"literal\",\n                \"value\": \"192.168.35.0\"\n              },\n              {\n                \"type\": \"literal\",\n                \"value\": \"0.0.0.255\"\n              }\n            ],\n            \"lines\": []\n          }\n        ]\n      }\n    },\n    {\n      \"severity\": \"warning\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ec410494694d90b\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ec410494694d90b\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"ip\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"standard\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"GQ_NAT_ACL\"\n          }\n        ],\n        \"lines\": [\n          {\n            \"evalMode\": \"required\",\n            \"severity\": \"error\",\n            \"fixMode\": \"manual\",\n            \"id\": \"5ec41049fc8e2649\",\n            \"words\": [\n              {\n                \"type\": \"literal\",\n                \"value\": \"permit\"\n              },\n              {\n                \"type\": \"literal\",\n                \"value\": \"192.168.36.0\"\n              },\n              {\n                \"type\": \"literal\",\n                \"value\": \"0.0.0.255\"\n              }\n            ],\n            \"lines\": []\n          }\n        ]\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c5968b5fe9\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c5968b5fe9\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"144.133.188.237\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c5dd40802c\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c5dd40802c\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"144.133.188.239\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c59a3da090\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c59a3da090\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"144.133.188.235\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c59c5c0bfd\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c59c5c0bfd\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"144.133.188.195\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c596e3d473\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c596e3d473\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"144.133.188.231\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c56793cb32\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c56793cb32\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"144.133.188.232\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c5e3c6a27b\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c5e3c6a27b\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"10.126.166.12\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c525c911fa\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c525c911fa\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"4\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"permit\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"10.126.166.15\"\n          }\n        ],\n        \"lines\": []\n      }\n    },\n    {\n      \"severity\": \"error\",\n      \"type\": \"required\",\n      \"message\": \"Required config not found\",\n      \"specLineId\": \"5ecd43c51e61783d\",\n      \"path\": [],\n      \"spec\": {\n        \"evalMode\": \"required\",\n        \"severity\": \"error\",\n        \"fixMode\": \"manual\",\n        \"id\": \"5ecd43c51e61783d\",\n        \"words\": [\n          {\n            \"type\": \"literal\",\n            \"value\": \"access-list\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"5\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"deny\"\n          },\n          {\n            \"type\": \"literal\",\n            \"value\": \"192.168.123.40\"\n          }\n        ],\n        \"lines\": []\n      }\n    }\n  ]\n}",
        "group": "Golden Config",
        "description": "",
        "created": "2024-08-28T18:09:03.044Z",
        "lastUpdated": "2025-01-24T15:09:29.490Z",
        "createdBy": {
          "_id": "6786b32af921f091fd105007",
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false
        }
      }
    },
    {
      "iid": 7,
      "reference": "66cf67bf21161b4df2717484",
      "type": "template",
      "folder": "/Command Template Diff",
      "document": {
        "_id": "66cf67bf21161b4df2717484",
        "command": "",
        "template": "Common\n{% for item in diff %}\n\nCommand: {{item.evaluated}} \nDevice: {{item.device}} \nResponse : \n{{item.response}}\n{% endfor %} \n \nPre-Check Only \n{% for item in preOnly %}\nCommand: {{item.evaluated}}\nDevice: {{item.device}}\nResponse: {{item.response}}\n{% endfor %}\n \nPost-Check Only\n{% for item in postOnly %}\nCommand: {{item.evaluated}}\nDevice: {{ item.device}}\nResponse: {{ item.response }}\n{% endfor %}\n\n ",
        "type": "jinja2",
        "version": 1,
        "tags": [],
        "name": "Command Template Diff",
        "data": "{\n  \"diff\": [\n    {\n      \"evaluated\": \"show clock\",\n      \"device\": \"csr01-atl-iag20202\",\n      \"response\": \"- *05:33:11.187 EST Fri Nov 19 2021 + *05:35:11.187 EST Fri Nov 19 2021\"\n    },\n    {\n      \"evaluated\": \"show ver\",\n      \"device\": \"csr01-atl-iag20202\",\n      \"response\": \"Cisco IOS XE Software, Version 16.03.07\"\n    }\n  ],\n  \"preOnly\": [],\n  \"postOnly\": [\n    {\n      \"evaluated\": \"show something\",\n      \"device\": \"csr01-atl-iag20202\",\n      \"response\": \"Cisco IOS XE Software, Version 16.03.07\"\n    }\n  ]\n}",
        "group": "cc",
        "description": "",
        "created": "2024-08-28T18:09:03.044Z",
        "lastUpdated": "2025-01-24T15:09:29.491Z",
        "createdBy": {
          "_id": "6786b32af921f091fd105007",
          "provenance": "Local AAA",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": true
        },
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false
        }
      }
    },
    {
      "iid": 8,
      "reference": "6792b23cb320bf2f072b3504",
      "type": "transformation",
      "folder": "/Backup Configuration",
      "document": {
        "_id": "6792b23cb320bf2f072b3504",
        "name": "Backup Configuration (1)",
        "description": "",
        "incoming": [
          {
            "$id": "viewBackup",
            "type": "boolean"
          },
          {
            "$id": "deviceList",
            "type": "string"
          },
          {
            "$id": "description",
            "type": "string"
          },
          {
            "$id": "notes",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "devices",
            "type": "array"
          },
          {
            "$id": "viewBackup",
            "type": "boolean",
            "examples": [true, false]
          },
          {
            "$id": "backupOptions",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "examples": ["test"]
              },
              "notes": {
                "type": "string",
                "examples": ["test"]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "viewBackup",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "viewBackup",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "notes",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "backupOptions",
              "ptr": "/notes"
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "backupOptions",
              "ptr": "/description"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "declaration",
            "library": "RegExp",
            "method": "new RegExp",
            "args": ["\\s*,\\s*", "gm"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "method",
            "library": "String",
            "method": "split",
            "args": [null, null, null],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceList",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "devices",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "device": {
                    "type": "string",
                    "examples": ["ASA"]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "device": {
                      "type": "string",
                      "examples": ["ASA"]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/device"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "List devices",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "List devices",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T21:18:52.914Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T15:09:29.491Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 9,
      "reference": "66cf67bf21161b4df271747e",
      "type": "transformation",
      "folder": "/Command Template Execution",
      "document": {
        "_id": "66cf67bf21161b4df271747e",
        "name": "Process Command Template Results",
        "description": "",
        "incoming": [
          {
            "$id": "pre",
            "type": "object",
            "properties": {
              "all_pass_flag": {
                "type": "boolean",
                "examples": [true, false]
              },
              "result": {
                "type": "boolean",
                "examples": [true, false]
              },
              "commands_results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {},
                  "required": []
                },
                "$id": "commands_results"
              },
              "name": {
                "type": "string"
              }
            },
            "required": []
          },
          {
            "$id": "post",
            "type": "object",
            "properties": {
              "all_pass_flag": {
                "type": "boolean",
                "examples": [true, false]
              },
              "result": {
                "type": "boolean",
                "examples": [true, false]
              },
              "commands_results": {
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            },
            "required": []
          },
          {
            "$id": "separator",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "templateContext",
            "type": "object",
            "properties": {
              "diff": {
                "type": "array"
              },
              "preOnly": {
                "type": "array"
              },
              "postOnly": {
                "type": "array"
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [null, "filterEvaluatedDeviceResponse", null],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "pre",
              "ptr": "/commands_results"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "post",
              "ptr": "/commands_results"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [null, "filterDeviceEvaluationAgain", null],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "post",
              "ptr": "/commands_results"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [null, "filterDeviceEvaluationAgain", null],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "pre",
              "ptr": "/commands_results"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 10,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "addPostResponse", null],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "post",
              "ptr": "/commands_results"
            },
            "to": {
              "location": "method",
              "name": 10,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 10,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 15,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "formatDeviceResponse"],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 15,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "formatDeviceResponse"],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 18,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 21,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [null, "createDiffResults", null],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 21,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "separator",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 21,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "templateContext",
              "ptr": "/diff"
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 15,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "templateContext",
              "ptr": "/preOnly"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 18,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "templateContext",
              "ptr": "/postOnly"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {},
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {},
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "array",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Array",
                "method": "find",
                "args": [null, "findEvaluatedDevice", null],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Logical",
                "method": "nullish",
                "args": [null, false],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [null],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "filterEvaluatedDeviceResponse",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "filterEvaluatedDeviceResponse",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "array",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Array",
                "method": "find",
                "args": [null, "getEvaluatedItems", null],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Logical",
                "method": "nullish",
                "args": [null, false],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Logical",
                "method": "not",
                "args": [null],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "filterDeviceEvaluationAgain",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "filterDeviceEvaluationAgain",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "string",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "optional chaining",
                "args": [null, "response", "pre"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "optional chaining",
                "args": [null, "response", "post"],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "declaration",
                "library": "RegExp",
                "method": "new RegExp",
                "args": [null, null],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "String",
                "method": "split",
                "args": [null, null, null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "String",
                "method": "split",
                "args": [null, null, null],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [null, "createDeviceDiff", [], null],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Array",
                "method": "join",
                "args": [null, "\n"],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [null, null, null],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 25,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "response", null],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 27,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 28,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              },
              {
                "id": 29,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "createDiffResults",
            "view": {
              "col": 4,
              "row": 5
            },
            "id": "createDiffResults",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "string",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "optional chaining",
                "args": [null, "response", "pre"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "optional chaining",
                "args": [null, "response", "post"],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "declaration",
                "library": "RegExp",
                "method": "new RegExp",
                "args": [null, null],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "String",
                "method": "split",
                "args": [null, null, null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "String",
                "method": "split",
                "args": [null, null, null],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [null, "getDeviceDiffResultsAgain", [], null],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/3/value"
                }
              }
            ],
            "functions": [],
            "name": "createDiffResults",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "createDiffResults",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "array",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "device"],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "response"],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Array",
                "method": "find",
                "args": [null, "findCorrespondingPostResponse", null],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "response"],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [{}, "evaluated", null],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 14,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "device", null],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "post", null],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 17,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [{}, "pre", null],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 17,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 17,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 23,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "response", null],
                "view": {
                  "row": 3,
                  "col": 4
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "addPostResponse",
            "view": {
              "col": 4,
              "row": 5
            },
            "id": "addPostResponse",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "device"],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "response"],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [{}, "evaluated", null],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "device", null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [null, "response", null],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "formatDeviceResponse",
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "formatDeviceResponse",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "findEvaluatedDevice",
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "findEvaluatedDevice",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "getEvaluatedItems",
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "getEvaluatedItems",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "array",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [null, null, null],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Array",
                "method": "getIndex",
                "args": [null, null],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "index",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 12,
                "type": "template",
                "library": "String",
                "method": "templateLiteral",
                "template": "- ${ pre }\n+ ${ post }",
                "args": [null, null],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "template",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "template",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "template",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "createDeviceDiff",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "createDeviceDiff",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "array",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [null, null],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [null, null, null],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Array",
                "method": "getIndex",
                "args": [null, null],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "index",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 12,
                "type": "template",
                "library": "String",
                "method": "templateLiteral",
                "template": "- ${ pre }\n+ ${ post }",
                "args": [null, null],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "template",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "template",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "template",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "getDeviceDiffResultsAgain",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "getDeviceDiffResultsAgain",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [null, "evaluated"],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [null, null],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "findCorrespondingPostResponse",
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "findCorrespondingPostResponse",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-23T21:17:59.862Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T15:09:29.491Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 10,
      "reference": "66cf67bf21161b4df271747f",
      "type": "transformation",
      "folder": "/Golden Configuration",
      "document": {
        "_id": "66cf67bf21161b4df271747f",
        "name": "Golden Configuration",
        "description": "",
        "incoming": [
          {
            "$id": "suppressFailureMessage",
            "type": "boolean"
          },
          {
            "$id": "treeName",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "options",
            "type": "object",
            "properties": {
              "suppressFailureMessage": {
                "type": "boolean",
                "examples": [true, false]
              },
              "treeName": {
                "type": "string",
                "examples": ["Cisco IOS"]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "treeName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "options",
              "ptr": "/treeName"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "suppressFailureMessage",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "options",
              "ptr": "/suppressFailureMessage"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T21:17:59.894Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T15:09:29.489Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 11,
      "reference": "66cf67bf21161b4df2717480",
      "type": "transformation",
      "folder": "/Command Template Execution",
      "document": {
        "_id": "66cf67bf21161b4df2717480",
        "name": "Command Template",
        "description": "",
        "incoming": [
          {
            "$id": "deviceList",
            "type": "string"
          },
          {
            "$id": "execution",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "devices",
            "type": "array"
          },
          {
            "$id": "execution",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "execution",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "execution",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 17,
            "type": "declaration",
            "library": "RegExp",
            "method": "new RegExp",
            "args": ["\\s*,\\s*", "gm"],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "method",
            "library": "String",
            "method": "split",
            "args": [null, null, null],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 18,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "devices",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceList",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 18,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 18,
              "ptr": "/args/1/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "device": {
                    "type": "string",
                    "examples": ["IOS"]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "device": {
                      "type": "string",
                      "examples": ["IOS"]
                    }
                  },
                  "required": []
                },
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/device"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "List devices",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "List devices",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-23T21:17:59.895Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T15:09:29.492Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 12,
      "reference": "66cf67bf21161b4df2717481",
      "type": "transformation",
      "folder": "/Push Configuration - IAG",
      "document": {
        "_id": "66cf67bf21161b4df2717481",
        "name": "Process Push Configuration Data",
        "description": "Process push configuration data",
        "incoming": [
          {
            "$id": "renderedJinja2Template",
            "type": "object",
            "properties": {
              "renderedTemplate": {
                "type": "string",
                "examples": ["test"]
              }
            },
            "required": []
          },
          {
            "$id": "deviceName",
            "type": "string",
            "examples": ["device"]
          }
        ],
        "outgoing": [
          {
            "$id": "renderedTemplate",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "configurationList",
            "type": "array"
          },
          {
            "$id": "deviceList",
            "type": "array"
          },
          {
            "$id": "deviceConfigurationPushMessage",
            "type": "string"
          },
          {
            "$id": "deviceConfigurationPushFailedMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 2,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedJinja2Template",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 2,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 5,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "See configuration below to provision against the device \"${deviceName}\". Select \"Provision\" to attempt to push the configuration to the device or select \"End Job\" to skip pushing configuration and to end the job.",
            "args": [null],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configurationList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceConfigurationPushMessage",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedJinja2Template",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "outgoing",
              "name": "renderedTemplate",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "Pushing configuration to device \"${deviceName}\" failed. See details below. Select \"Retry\" to retry provisioning the configuration against the device or select \"End Job\" to end the job without pushing configuration to the device.\n\n\n\n\n\n\n",
            "args": [null],
            "view": {
              "row": 4,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 11,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceConfigurationPushFailedMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T21:17:59.897Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T15:09:29.508Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 13,
      "reference": "66cf67bf21161b4df2717482",
      "type": "transformation",
      "folder": "/Command Template Runner",
      "document": {
        "_id": "66cf67bf21161b4df2717482",
        "name": "Create Command Template Runner Error Message",
        "description": "Create Command Template Runner error message",
        "incoming": [
          {
            "$id": "templateName",
            "type": "string",
            "examples": ["Template A"]
          }
        ],
        "outgoing": [
          {
            "$id": "errorMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "templateName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "The Command Template ${templateName} has errored. See details below. Select \"Retry\" to retry Command Template or select \"Continue\" to continue to end of job.",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "errorMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-23T21:17:59.911Z",
        "createdBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T15:09:29.509Z",
        "lastUpdatedBy": {
          "_id": "67531c63592f8c45f4eabe88",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Backup Configuration",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Command Template Runner",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 13,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Golden Configuration",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 10,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Command Template Execution",
      "children": [
        {
          "iid": 2,
          "nodeType": "component"
        },
        {
          "iid": 11,
          "nodeType": "component"
        },
        {
          "iid": 9,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Command Template Diff",
      "children": [
        {
          "iid": 4,
          "nodeType": "component"
        },
        {
          "iid": 7,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Push Configuration - IAG",
      "children": [
        {
          "iid": 5,
          "nodeType": "component"
        },
        {
          "iid": 12,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-28T18:09:02.959Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T15:09:29.475Z",
  "lastUpdatedBy": {
    "_id": "67531c63592f8c45f4eabe88",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 66,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
