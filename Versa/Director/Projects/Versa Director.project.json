{
  "_id": "66cf6d9b21161b4df2717487",
  "name": "Versa Director",
  "description": "Versa Director Project has assets to Create New Organization, Create Spoke Group, Create Device Group, Deploy Device, Create Director Version, Check Organization",
  "components": [
    {
      "iid": 0,
      "reference": "9c1cc3f8-0251-45e0-9b9e-2c77a6c66735",
      "type": "workflow",
      "folder": "/Create Spoke Group",
      "document": {
        "name": "Create Spoke Group",
        "tasks": {
          "343": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Versa Director Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Versa Director Error",
                "message": "",
                "body": "$var.job.versaError",
                "btn_success": "Continue",
                "btn_failure": "",
                "variables": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -15480,
              "y": 18456
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -15828,
              "y": 17652
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -15816,
              "y": 18636
            }
          },
          "d645": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Spoke Group Names",
            "description": "Query spoke group names",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response[*name]",
                "obj": "$var.91f.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -15828,
              "y": 17916
            }
          },
          "537d": {
            "name": "arrayIncludes",
            "canvasName": "includes",
            "summary": "Check If Spoke Group Name Input In List",
            "description": "Check if spoke group name in versa",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.d645.return_data",
                "searchElement": "$var.job.spokeGroupName",
                "fromIndex": ""
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -15828,
              "y": 18060
            }
          },
          "26ca": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Spoke Group Name Not Exists",
            "description": "Run an evaluation to check spoke group name in versa",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "result",
                          "task": "537d"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -15828,
              "y": 18180
            }
          },
          "fd33": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Alert",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Alert",
                "message": "",
                "body": "The spoke group name <b><!name!></b> you provided is a duplicate in Versa",
                "btn_success": "Continue",
                "btn_failure": "",
                "variables": "$var.cc1b.merged_object"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -16152,
              "y": 18324
            }
          },
          "2fef": {
            "name": "createSpokeGroup",
            "canvasName": "createSpokeGroup",
            "summary": "Create Spoke Group",
            "description": "Create Spoke group  ",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "spokeGroupBean": "$var.297a.spokeGroupBean",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdSpokeGroup"
              },
              "error": "$var.job.versaError"
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -15828,
              "y": 18456
            }
          },
          "91f": {
            "name": "getSpokeGroups",
            "canvasName": "getSpokeGroups",
            "summary": "Get Spoke Groups",
            "description": "Fetch list of spoke groups ",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "limit": 250,
                "offset": 0,
                "org": "$var.job.organization",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.versaError"
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -15828,
              "y": 17784
            }
          },
          "297a": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Spoke Group Data",
            "description": "Create spoke group data JST",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65fd935deda0a80317ab45c5",
                "variableMap": {
                  "spokeGroupName": "$var.job.spokeGroupName",
                  "organization": "$var.job.organization",
                  "hubType": "$var.job.hubType",
                  "region": "$var.job.region",
                  "vrfs": "$var.job.vrfs"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "spokeGroupBean": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Versa Create Spoke Group Combining Forms",
            "nodeLocation": {
              "x": -15828,
              "y": 18324
            }
          },
          "cc1b": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Create View Data Vars",
            "description": "Create View Data Vars",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "spokeGroupName"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -16152,
              "y": 18180
            }
          }
        },
        "transitions": {
          "343": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "91f": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "d645": {
            "537d": {
              "type": "standard",
              "state": "success"
            }
          },
          "537d": {
            "26ca": {
              "type": "standard",
              "state": "success"
            }
          },
          "26ca": {
            "297a": {
              "state": "success",
              "type": "standard"
            },
            "cc1b": {
              "type": "standard",
              "state": "failure"
            }
          },
          "fd33": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "2fef": {
            "343": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "91f": {
            "343": {
              "type": "standard",
              "state": "error"
            },
            "d645": {
              "type": "standard",
              "state": "success"
            }
          },
          "297a": {
            "2fef": {
              "type": "standard",
              "state": "success"
            }
          },
          "cc1b": {
            "fd33": {
              "state": "success",
              "type": "standard"
            }
          },
          "fa8f": {},
          "2f57": {},
          "f6ec": {},
          "3a9b": {},
          "707f": {},
          "3c95": {},
          "214a": {},
          "c080": {},
          "797f": {},
          "6fc0": {},
          "2f00": {},
          "61b4": {},
          "bd7f": {},
          "f569": {},
          "b324": {},
          "39a7": {},
          "4c7b": {},
          "678d": {},
          "b4aa": {},
          "ccaf": {},
          "627b": {},
          "347a": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "spokeGroupName": {
              "type": "string"
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "organization": {
              "type": "string"
            },
            "hubType": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "vrfs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["Tenant1-LAN-VR"]
                  },
                  "hubs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": ["New"]
                        },
                        "priority": {
                          "type": "number",
                          "examples": [1]
                        }
                      },
                      "required": []
                    }
                  },
                  "groupType": {
                    "type": "string",
                    "examples": ["directSpokeToSpoke"]
                  },
                  "communityRef": {
                    "type": "string",
                    "examples": ["CO1"]
                  }
                },
                "required": []
              },
              "required": []
            }
          },
          "required": [
            "spokeGroupName",
            "adapterId",
            "organization",
            "hubType",
            "region",
            "vrfs"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "spokeGroupName": {
              "type": "string"
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "organization": {
              "type": "string"
            },
            "hubType": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "vrfs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["Tenant1-LAN-VR"]
                  },
                  "hubs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": ["New"]
                        },
                        "priority": {
                          "type": "number",
                          "examples": [1]
                        }
                      },
                      "required": []
                    }
                  },
                  "groupType": {
                    "type": "string",
                    "examples": ["directSpokeToSpoke"]
                  },
                  "communityRef": {
                    "type": "string",
                    "examples": ["CO1"]
                  }
                },
                "required": []
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "versaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "createdSpokeGroup": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.46.0-2023.1.19.0",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T11:12:22.918Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "60f77959-700f-451e-8f8c-3454b46ff427",
      "type": "workflow",
      "folder": "/Create New Organization",
      "document": {
        "name": "Create New Organization",
        "tasks": {
          "1706": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Versa Director Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Versa Director Error",
                "message": "",
                "body": "$var.job.versaError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -3552,
              "y": 1848
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3876,
              "y": 1572
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3876,
              "y": 1992
            }
          },
          "191a": {
            "name": "createOrgWorkflowFromJson",
            "canvasName": "createOrgWorkflowFromJson",
            "summary": "Create Organization Workflow",
            "description": "Create organization workflow",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "versa",
            "variables": {
              "incoming": {
                "content": "$var.5e15.orgPayload",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdOrg"
              },
              "error": "$var.job.versaError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -3876,
              "y": 1860
            }
          },
          "5e15": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Organization Payload",
            "description": "Create organization payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65fdb03beda0a80317ab45c6",
                "variableMap": {
                  "ikeAuthType": "$var.job.ikeAuthType",
                  "vrfs": "$var.job.vrfs",
                  "supportedRoles": "$var.job.supportedRoles",
                  "analyticsClusters": "$var.job.analyticsClusters",
                  "cmsConnectors": "$var.job.cmsConnectors",
                  "parentOrganization": "$var.job.parentOrganization",
                  "organizationName": "$var.job.organizationName",
                  "cpeDeploymentType": "$var.job.cpeDeploymentType",
                  "controllers": "$var.job.controllers",
                  "sharedControlPlane": "$var.job.sharedControlPlane"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "orgPayload": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -3876,
              "y": 1740
            }
          }
        },
        "transitions": {
          "1706": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "6291": {},
          "workflow_start": {
            "5e15": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "191a": {
            "1706": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "5e15": {
            "191a": {
              "state": "success",
              "type": "standard"
            }
          },
          "43f9": {},
          "808a": {},
          "d407": {},
          "5a6e": {},
          "dd9a": {},
          "d5dc": {},
          "5e9": {},
          "8ef": {},
          "f2a1": {},
          "2cbb": {},
          "20fd": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ikeAuthType": {
              "type": "string"
            },
            "vrfs": {
              "type": "array"
            },
            "supportedRoles": {
              "type": "array"
            },
            "analyticsClusters": {
              "type": "array"
            },
            "cmsConnectors": {
              "type": "array"
            },
            "parentOrganization": {
              "type": "string"
            },
            "organizationName": {
              "type": "string"
            },
            "cpeDeploymentType": {
              "type": "string"
            },
            "controllers": {
              "type": "array"
            },
            "sharedControlPlane": {
              "type": "boolean"
            }
          },
          "required": [
            "adapterId",
            "ikeAuthType",
            "vrfs",
            "supportedRoles",
            "analyticsClusters",
            "cmsConnectors",
            "parentOrganization",
            "organizationName",
            "cpeDeploymentType",
            "controllers",
            "sharedControlPlane"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ikeAuthType": {
              "type": "string"
            },
            "vrfs": {
              "type": "array"
            },
            "supportedRoles": {
              "type": "array"
            },
            "analyticsClusters": {
              "type": "array"
            },
            "cmsConnectors": {
              "type": "array"
            },
            "parentOrganization": {
              "type": "string"
            },
            "organizationName": {
              "type": "string"
            },
            "cpeDeploymentType": {
              "type": "string"
            },
            "controllers": {
              "type": "array"
            },
            "sharedControlPlane": {
              "type": "boolean"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "versaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "createdOrg": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.46.0-2023.1.19.0",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2025-01-24T11:12:22.919Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "1262cc6c-5868-4a61-b139-0a18868260e4",
      "type": "workflow",
      "folder": "/Deploy Device",
      "document": {
        "name": "Deploy Device",
        "tasks": {
          "8196": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Task Error Message",
            "description": "Query Task Id Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response[versa-tasks.task][versa-tasks.errormessages][versa-tasks.errormessage][0][versa-tasks.error-message]",
                "obj": "$var.ed0e.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2796,
              "y": 552
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 2448,
              "y": -60
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 2448,
              "y": 852
            }
          },
          "cc60": {
            "name": "deployDevice",
            "canvasName": "deployDevice",
            "summary": "Deploy Device",
            "description": "Deploy Device",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "deviceworkflowname": "$var.job.device",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 2448,
              "y": 72
            }
          },
          "ed0e": {
            "name": "getTaskById",
            "canvasName": "getTaskById",
            "summary": "Get Task By ID",
            "description": "Get task by ID",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "id": "$var.db80.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 2448,
              "y": 288
            }
          },
          "db80": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Task ID",
            "description": "Query task-id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.TaskResponse.task-id",
                "obj": "$var.cc60.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2448,
              "y": 180
            }
          },
          "84b5": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Deploy Complete",
            "description": "EVAL task-id completed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response[versa-tasks.task][versa-tasks.task-status]",
                        "operand_1": {
                          "variable": "result",
                          "task": "ed0e"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "COMPLETED",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2448,
              "y": 420
            }
          },
          "f1b4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Deploy Failed",
            "description": "EVAL task-id failed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response[versa-tasks.task][versa-tasks.task-status]",
                        "operand_1": {
                          "variable": "result",
                          "task": "ed0e"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "FAILED",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2796,
              "y": 432
            }
          },
          "ced4": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Reattempt To Check Device Deploy Status",
            "description": "Reattempt to check device deploy status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "deployStatus",
                "minutes": 0,
                "attempts": 10
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 3132,
              "y": 432
            }
          },
          "3d86": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Failure To Deploy New Device",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failure to Deploy New Device",
                "message": "The new device deployment process has failed due to the following error. Select Retry to deploy the device again or select Delete Device to delete the device reference and end the job.",
                "body": "$var.8196.return_data",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "Delete Device"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2796,
              "y": 672
            }
          },
          "f630": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Deployment Reached Maximum Wait Time",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Deployment Reached Maximum Wait Time",
                "message": "Please investigate why the task failed. See Task below<hr>",
                "body": "$var.ed0e.result",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 3444,
              "y": 432
            }
          },
          "54fe": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Set Device Deploy Result - Failed",
            "description": "Set Device Deploy Result - Failed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "status",
                "value": "FAILED"
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 3108,
              "y": 828
            }
          },
          "162e": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Set Device Deploy Result - Success",
            "description": "Set device deploy result",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "status",
                "value": "SUCCESS"
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2448,
              "y": 540
            }
          },
          "d179": {
            "name": "deleteDeviceteWorkflows",
            "canvasName": "deleteDeviceteWorkflows",
            "summary": "Delete Device",
            "description": "Delete device",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "cleanConfig": false,
                "deviceWorkflowNames": "$var.job.device",
                "loadDeviceDefaults": false,
                "resetConfig": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 3108,
              "y": 672
            }
          }
        },
        "transitions": {
          "8196": {
            "3d86": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "cc60": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "cc60": {
            "db80": {
              "type": "standard",
              "state": "success"
            }
          },
          "ed0e": {
            "84b5": {
              "type": "standard",
              "state": "success"
            }
          },
          "db80": {
            "ed0e": {
              "type": "standard",
              "state": "success"
            }
          },
          "84b5": {
            "f1b4": {
              "type": "standard",
              "state": "failure"
            },
            "162e": {
              "type": "standard",
              "state": "success"
            }
          },
          "f1b4": {
            "8196": {
              "type": "standard",
              "state": "success"
            },
            "ced4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ced4": {
            "ed0e": {
              "type": "revert",
              "state": "success"
            },
            "f630": {
              "type": "standard",
              "state": "error"
            }
          },
          "3d86": {
            "cc60": {
              "state": "success",
              "type": "revert"
            },
            "d179": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f630": {
            "54fe": {
              "state": "success",
              "type": "standard"
            }
          },
          "54fe": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "162e": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "d179": {
            "54fe": {
              "state": "success",
              "type": "standard"
            }
          },
          "12e2": {},
          "35c0": {},
          "2fbb": {},
          "a7c9": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "device": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": ["test"]
            }
          },
          "required": ["device", "adapterId", "_id"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "device": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.44.64-2022.1.29.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:12:22.920Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "5c69af1a-dc5b-4b8a-bfed-ddf536c85ff0",
      "type": "workflow",
      "folder": "/Create Director Version",
      "document": {
        "name": "Check Director Version",
        "tasks": {
          "3508": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Get Array Length",
            "description": "Get array length after splitting Direct version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.b7e9.splitArray"
              },
              "outgoing": {
                "length": "$var.job.requestedVersionLength"
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 960,
              "y": 876
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 612,
              "y": 288
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 636,
              "y": 1668
            }
          },
          "c16b": {
            "name": "getSoftwarePackageVersion",
            "canvasName": "getSoftwarePackageVersion",
            "summary": "Get Director Version",
            "description": "Get the details of the Versa Director software package",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.versaError"
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 612,
              "y": 408
            }
          },
          "990c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Set Version Compliance Result - Comply",
            "description": "Initialize version compliance result",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "comply",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 636,
              "y": 1428
            }
          },
          "bb19": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Set Compliance Result - Not Comply",
            "description": "Initialize result if version does not comply",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "comply",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 72,
              "y": 1464
            }
          },
          "65ed": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Major Version",
            "description": "Query major version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.package-info[0].major-version",
                "obj": "$var.c16b.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 768,
              "y": 576
            }
          },
          "1af": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Branch Version Correct",
            "description": "Check If Branch Version Correct",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "40da",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "version",
                          "task": "job",
                          "editable": true
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 636,
              "y": 756
            }
          },
          "b7e9": {
            "name": "split",
            "canvasName": "split",
            "summary": "Split Director Version",
            "description": "Split Director version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.job.version",
                "separator": ".",
                "limit": ""
              },
              "outgoing": {
                "splitArray": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 960,
              "y": 756
            }
          },
          "b008": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check Major Version - Allow Newer Version",
            "description": "Check Major Version - Allow Newer Version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "[0]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "65ed"
                        }
                      }
                    ]
                  },
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "allowNewer",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "[0]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": "<",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "65ed"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": 984
            }
          },
          "fadc": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Service Version",
            "description": "Query service version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.package-info[0].service-version",
                "obj": "$var.c16b.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 168,
              "y": 576
            }
          },
          "2cfd": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Minor Version",
            "description": "Query minor version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.package-info[0].minor-version",
                "obj": "$var.c16b.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 468,
              "y": 576
            }
          },
          "d61f": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check Major Version - Not Allow Newer Version",
            "description": "Check Major Version - Not Allow Newer Version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "allowNewer",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "[0]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": "<",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "65ed"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 504,
              "y": 996
            }
          },
          "863a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Needing To Check Other Versions",
            "description": "Check If Needing To Check Other Versions",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "requestedVersionLength",
                          "task": "job",
                          "editable": false
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 1,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 60,
              "y": 996
            }
          },
          "d2ec": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check Minor Version - Allow Newer Version",
            "description": "Check Minor Version - Allow Newer Version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "[1]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "2cfd"
                        }
                      }
                    ]
                  },
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "allowNewer",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "[1]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": "<",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "2cfd"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 60,
              "y": 1116
            }
          },
          "bab": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check Minor Version - Not Allow Newer Version",
            "description": "Check Minor Version - Not Allow Newer Version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "allowNewer",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "[1]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": "<",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "2cfd"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -288,
              "y": 1128
            }
          },
          "bcac": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Needing To Check Other Versions",
            "description": "Check If Needing To Check Other Versions",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "requestedVersionLength",
                          "task": "job",
                          "editable": false
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 2,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1128
            }
          },
          "af8": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check Service Version to Not Allow Newer Version",
            "description": "Check Service Version to Not Allow Newer Version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "[2]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "fadc"
                        }
                      }
                    ]
                  },
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "allowNewer",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "[2]",
                        "operand_1": {
                          "variable": "splitArray",
                          "task": "b7e9"
                        },
                        "operator": "<",
                        "operand_2": {
                          "variable": "return_data",
                          "task": "fadc"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -648,
              "y": 1248
            }
          },
          "40da": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Branch Version",
            "description": "Query branch version",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.package-info[0].branch",
                "obj": "$var.c16b.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1080,
              "y": 576
            }
          },
          "0789": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Versa Director Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Versa Director Error",
                "message": "",
                "body": "$var.job.versaError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1560,
              "y": 408
            }
          }
        },
        "transitions": {
          "3508": {
            "b008": {
              "type": "standard",
              "state": "success"
            }
          },
          "4104": {},
          "workflow_start": {
            "c16b": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "c16b": {
            "65ed": {
              "type": "standard",
              "state": "success"
            },
            "2cfd": {
              "type": "standard",
              "state": "success"
            },
            "fadc": {
              "type": "standard",
              "state": "success"
            },
            "40da": {
              "type": "standard",
              "state": "success"
            },
            "0789": {
              "type": "standard",
              "state": "error"
            }
          },
          "990c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "bb19": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "65ed": {
            "1af": {
              "type": "standard",
              "state": "success"
            }
          },
          "1af": {
            "990c": {
              "type": "standard",
              "state": "success"
            },
            "b7e9": {
              "type": "standard",
              "state": "failure"
            }
          },
          "b7e9": {
            "3508": {
              "type": "standard",
              "state": "success"
            }
          },
          "b008": {
            "bb19": {
              "type": "standard",
              "state": "success"
            },
            "d61f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "fadc": {
            "1af": {
              "type": "standard",
              "state": "success"
            }
          },
          "2cfd": {
            "1af": {
              "type": "standard",
              "state": "success"
            }
          },
          "d61f": {
            "990c": {
              "type": "standard",
              "state": "success"
            },
            "863a": {
              "type": "standard",
              "state": "failure"
            }
          },
          "863a": {
            "990c": {
              "type": "standard",
              "state": "failure"
            },
            "d2ec": {
              "type": "standard",
              "state": "success"
            }
          },
          "d2ec": {
            "bb19": {
              "type": "standard",
              "state": "success"
            },
            "bab": {
              "type": "standard",
              "state": "failure"
            }
          },
          "bab": {
            "990c": {
              "type": "standard",
              "state": "success"
            },
            "bcac": {
              "type": "standard",
              "state": "failure"
            }
          },
          "bcac": {
            "990c": {
              "type": "standard",
              "state": "failure"
            },
            "af8": {
              "type": "standard",
              "state": "success"
            }
          },
          "af8": {
            "bb19": {
              "type": "standard",
              "state": "success"
            },
            "990c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "40da": {
            "1af": {
              "type": "standard",
              "state": "success"
            }
          },
          "0789": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f010": {},
          "442d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "version": {
              "title": "str",
              "type": "string",
              "examples": ["Hello World"]
            },
            "allowNewer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "version", "allowNewer"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "version": {
              "title": "str",
              "type": "string",
              "examples": ["Hello World"]
            },
            "allowNewer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "requestedVersionLength": {
              "title": "length",
              "type": "integer",
              "examples": [3]
            },
            "versaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "comply": {
              "type": "boolean"
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.10.4-2020.1.28.0",
        "last_updated": "2025-01-24T11:12:22.920Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "aaaab8d9-13a5-4a7a-8e94-bd126903beb9",
      "type": "workflow",
      "folder": "/Create Device Group",
      "document": {
        "name": "Create Device Group",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3240,
              "y": 348
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3240,
              "y": 1236
            }
          },
          "6f87": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Device Groups Names",
            "description": "Query device groups names",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.device-group[*name]",
                "obj": "$var.476c.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3240,
              "y": 576
            }
          },
          "fb29": {
            "name": "arrayIncludes",
            "canvasName": "includes",
            "summary": "Check If Device Group Name in List",
            "description": "Check If Device Group Name in List",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.6f87.return_data",
                "searchElement": "$var.job.deviceGroupName",
                "fromIndex": ""
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3240,
              "y": 696
            }
          },
          "2fef": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Group Not Exist",
            "description": "Run an evaluation to check device group name",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "result",
                          "task": "fb29"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -3240,
              "y": 816
            }
          },
          "fae7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Alert",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Alert",
                "message": "",
                "body": "Name collision.<br>The name <b><!name!></b> already exists in Versa Director.<br>",
                "variables": "$var.7d77.merged_object",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2844,
              "y": 1044
            }
          },
          "9da0": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Versa Director Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Versa Director Error",
                "message": "",
                "body": "$var.job.versaError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3684,
              "y": 756
            }
          },
          "2c41": {
            "name": "createDeviceGroup",
            "canvasName": "createDeviceGroup",
            "summary": "Create Device group",
            "description": "Create the device group  ",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "deviceGroupWriteWrapper": "$var.e28a.deviceGroupWriteWrapper",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdDG"
              },
              "error": "$var.job.versaError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3240,
              "y": 1044
            }
          },
          "476c": {
            "name": "getAllDeviceGroups",
            "canvasName": "getAllDeviceGroups",
            "summary": "Get Device Groups",
            "description": "Fetch list of device groups ",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "filters": "",
                "limit": 250,
                "offset": 0,
                "organization": "$var.job.organizationName",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.versaError"
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3240,
              "y": 468
            }
          },
          "e28a": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Device Group Data",
            "description": "Create device group data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61ae2b66054d000158bbe9c6",
                "variableMap": {
                  "deviceGroupName": "$var.job.deviceGroupName",
                  "organizationName": "$var.job.organizationName",
                  "email": "$var.job.email",
                  "phone": "$var.job.phone",
                  "postStagingTemplate": "$var.job.postStagingTemplate",
                  "stagingType": "$var.job.stagingType",
                  "stagingController": "$var.job.stagingController",
                  "vnpProfileName": "$var.job.vnpProfileName",
                  "caConfigOnBranchNotification": "$var.job.caConfigOnBranchNotification",
                  "enableStagingUrl": "$var.job.enableStagingUrl",
                  "enable2FactorAuth": "$var.job.enable2FactorAuth",
                  "enableOneTimePassword": "$var.job.enableOneTimePassword",
                  "description": "$var.job.description"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": false
                }
              },
              "outgoing": {
                "deviceGroupWriteWrapper": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "GC-create-dg",
            "nodeLocation": {
              "x": -3240,
              "y": 924
            }
          },
          "7d77": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Create View Data Vars",
            "description": "Create View Data Vars",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "deviceGroupName"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -2844,
              "y": 816
            }
          }
        },
        "transitions": {
          "6867": {},
          "workflow_start": {
            "476c": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "6f87": {
            "fb29": {
              "type": "standard",
              "state": "success"
            }
          },
          "fb29": {
            "2fef": {
              "type": "standard",
              "state": "success"
            }
          },
          "2fef": {
            "7d77": {
              "state": "failure",
              "type": "standard"
            },
            "e28a": {
              "state": "success",
              "type": "standard"
            }
          },
          "fae7": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "9da0": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "2c41": {
            "9da0": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "476c": {
            "6f87": {
              "type": "standard",
              "state": "success"
            },
            "9da0": {
              "state": "error",
              "type": "standard"
            }
          },
          "e28a": {
            "2c41": {
              "state": "success",
              "type": "standard"
            }
          },
          "7d77": {
            "fae7": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe4": {},
          "c2c3": {},
          "ad02": {},
          "85ae": {},
          "1a2e": {},
          "155c": {},
          "30c0": {},
          "c0d7": {},
          "8ffd": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "deviceGroupName": {
              "type": "string"
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "organizationName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "postStagingTemplate": {
              "type": "string"
            },
            "stagingType": {
              "type": "string"
            },
            "stagingController": {
              "type": "string"
            },
            "vnpProfileName": {
              "type": "string"
            },
            "caConfigOnBranchNotification": {
              "type": "boolean"
            },
            "enableStagingUrl": {
              "type": "boolean"
            },
            "enable2FactorAuth": {
              "type": "boolean"
            },
            "enableOneTimePassword": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "deviceGroupName",
            "adapterId",
            "organizationName",
            "email",
            "phone",
            "postStagingTemplate",
            "stagingType",
            "stagingController",
            "vnpProfileName",
            "caConfigOnBranchNotification",
            "enableStagingUrl",
            "enable2FactorAuth",
            "enableOneTimePassword",
            "description"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "deviceGroupName": {
              "type": "string"
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "organizationName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "postStagingTemplate": {
              "type": "string"
            },
            "stagingType": {
              "type": "string"
            },
            "stagingController": {
              "type": "string"
            },
            "vnpProfileName": {
              "type": "string"
            },
            "caConfigOnBranchNotification": {
              "type": "boolean"
            },
            "enableStagingUrl": {
              "type": "boolean"
            },
            "enable2FactorAuth": {
              "type": "boolean"
            },
            "enableOneTimePassword": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "versaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "createdDG": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.40.5-2021.1.28.0",
        "last_updated": "2025-01-24T11:12:22.921Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 5,
      "reference": "7e4b3716-d558-43c4-bf82-fbeba560bee5",
      "type": "workflow",
      "folder": "/Check Organization",
      "document": {
        "name": "Check Organization",
        "tasks": {
          "8114": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Org Name in List",
            "description": "Run an evaluation to check organization name",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "result",
                          "task": "6a5"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 432,
              "y": 672
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 432,
              "y": 144
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 432,
              "y": 1080
            }
          },
          "990c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Initialize Org Check Result - Not Exists",
            "description": "Initialize result if organization does not exist",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "orgNameExists",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 792,
              "y": 672
            }
          },
          "bb19": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Set Org Check Result - Exists",
            "description": "Initialize result if the organization exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "orgNameExists",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 432,
              "y": 816
            }
          },
          "74f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query List of Org Names",
            "description": "Query list of all organization names",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.organizations[*name]",
                "obj": "$var.5f28.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 432,
              "y": 432
            }
          },
          "6a5": {
            "name": "arrayIncludes",
            "canvasName": "includes",
            "summary": "Check Organization in Versa",
            "description": "Check if an organization in versa response",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.74f.return_data",
                "searchElement": "$var.job.organizationName",
                "fromIndex": ""
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 432,
              "y": 564
            }
          },
          "5f28": {
            "name": "getOrganizations",
            "canvasName": "getOrganizations",
            "summary": "Get Organizations",
            "description": "Find all the organizations",
            "location": "Adapter",
            "locationType": "VersaDirector",
            "app": "VersaDirector",
            "type": "automatic",
            "displayName": "VersaDirector",
            "variables": {
              "incoming": {
                "deep": false,
                "filters": "",
                "limit": "",
                "offset": 0,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.versaError"
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 432,
              "y": 300
            }
          },
          "6f0e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Versa Director Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Versa Director Error",
                "message": "",
                "body": "$var.job.versaError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 12,
              "y": 300
            }
          }
        },
        "transitions": {
          "8114": {
            "bb19": {
              "type": "standard",
              "state": "success"
            },
            "990c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "workflow_start": {
            "5f28": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "990c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "bb19": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "74f": {
            "6a5": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a5": {
            "8114": {
              "type": "standard",
              "state": "success"
            }
          },
          "5f28": {
            "74f": {
              "type": "standard",
              "state": "success"
            },
            "6f0e": {
              "type": "standard",
              "state": "error"
            }
          },
          "6f0e": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "organizationName": {
              "type": [
                "array",
                "string",
                "boolean",
                "integer",
                "number",
                "object"
              ],
              "title": "searchElement",
              "examples": ["Device3"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["organizationName", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "organizationName": {
              "type": [
                "array",
                "string",
                "boolean",
                "integer",
                "number",
                "object"
              ],
              "title": "searchElement",
              "examples": ["Device3"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "orgNameExists": {
              "type": "boolean"
            },
            "versaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "font_size": 12,
        "createdVersion": "5.10.4-2020.1.28.0",
        "last_updated": "2025-01-24T11:12:22.919Z",
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 6,
      "reference": "61ae2b66054d000158bbe9c6",
      "type": "transformation",
      "folder": "/Create Device Group",
      "document": {
        "_id": "61ae2b66054d000158bbe9c6",
        "name": "Create Device Group Payload",
        "description": "",
        "incoming": [
          {
            "$id": "deviceGroupName",
            "type": "string"
          },
          {
            "$id": "organizationName",
            "type": "string"
          },
          {
            "$id": "email",
            "type": "string"
          },
          {
            "$id": "phone",
            "type": "string"
          },
          {
            "$id": "postStagingTemplate",
            "type": "string"
          },
          {
            "$id": "stagingType",
            "type": "string"
          },
          {
            "$id": "stagingController",
            "type": "string"
          },
          {
            "$id": "vnpProfileName",
            "type": "string"
          },
          {
            "$id": "caConfigOnBranchNotification",
            "type": "boolean"
          },
          {
            "$id": "enableStagingUrl",
            "type": "boolean"
          },
          {
            "$id": "enable2FactorAuth",
            "type": "boolean"
          },
          {
            "$id": "enableOneTimePassword",
            "type": "boolean"
          },
          {
            "$id": "description",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "deviceGroupWriteWrapper",
            "type": "object",
            "properties": {
              "device-group": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": ["{{dgFullMeshName}}"]
                  },
                  "dg:organization": {
                    "type": "string",
                    "examples": ["{{newOrgName}}"]
                  },
                  "dg:enable-2factor-auth": {
                    "type": "boolean",
                    "examples": [true, false]
                  },
                  "dg:ca-config-on-branch-notification": {
                    "type": "boolean",
                    "examples": [true, false]
                  },
                  "dg:enable-staging-url": {
                    "type": "boolean",
                    "examples": [true, false]
                  },
                  "dg:staging-type": {
                    "type": "string",
                    "examples": ["staging"]
                  },
                  "dg:staging-controller": {
                    "type": "string",
                    "examples": ["{{cntrl1Name}}"]
                  },
                  "dg:vpn-profile-name": {
                    "type": "string",
                    "examples": ["{{stagingVpnProf}}"]
                  },
                  "dg:enable-one-time-password": {
                    "type": "boolean"
                  },
                  "dg:poststaging-template": {
                    "type": "string",
                    "examples": ["{{templateFullMeshName}}"]
                  },
                  "dg:email": {
                    "type": "string"
                  },
                  "dg:phone": {
                    "type": "string"
                  },
                  "dg:description": {
                    "type": "string"
                  }
                }
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceGroupName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/name"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "organizationName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:organization"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "postStagingTemplate",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:poststaging-template"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "stagingType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:staging-type"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "stagingController",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:staging-controller"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vnpProfileName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:vpn-profile-name"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "caConfigOnBranchNotification",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:ca-config-on-branch-notification"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "enableStagingUrl",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:enable-staging-url"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "enable2FactorAuth",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:enable-2factor-auth"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "enableOneTimePassword",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:enable-one-time-password"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "email",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:email"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "phone",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:phone"
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceGroupWriteWrapper",
              "ptr": "/device-group/dg:description"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T19:49:44.558Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T11:12:22.922Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 7,
      "reference": "65fdb03beda0a80317ab45c6",
      "type": "transformation",
      "folder": "/Create New Organization",
      "document": {
        "_id": "65fdb03beda0a80317ab45c6",
        "name": "Create Organization Payload",
        "description": "",
        "incoming": [
          {
            "$id": "ikeAuthType",
            "type": "string"
          },
          {
            "$id": "vrfs",
            "type": "array"
          },
          {
            "$id": "supportedRoles",
            "type": "array"
          },
          {
            "$id": "analyticsClusters",
            "type": "array"
          },
          {
            "$id": "cmsConnectors",
            "type": "array"
          },
          {
            "$id": "parentOrganization",
            "type": "string"
          },
          {
            "$id": "organizationName",
            "type": "string"
          },
          {
            "$id": "cpeDeploymentType",
            "type": "string"
          },
          {
            "$id": "controllers",
            "type": "array"
          },
          {
            "$id": "sharedControlPlane",
            "type": "boolean"
          }
        ],
        "outgoing": [
          {
            "$id": "orgPayload",
            "type": "object",
            "properties": {
              "cpeDeploymentType": {
                "type": "string",
                "examples": ["vCPE"]
              },
              "ikeAuthType": {
                "type": "string",
                "examples": ["psk"]
              },
              "orgName": {
                "type": "string",
                "examples": ["orgA"]
              },
              "sharedControlPlane": {
                "type": "boolean",
                "examples": [true, false]
              },
              "analyticsClusters": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["Itential-VAN"]
                }
              },
              "supportedRoles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["TenantDashboardOperator"]
                }
              },
              "vrfs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": ["LAN-VR"]
                    },
                    "id": {
                      "type": "integer",
                      "examples": [11]
                    },
                    "description": {
                      "type": "string"
                    },
                    "enableVPN": {
                      "type": "boolean",
                      "examples": [true, false]
                    },
                    "mode": {
                      "type": "string",
                      "examples": ["edit"]
                    }
                  },
                  "required": []
                }
              },
              "controllers": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["Controller1"]
                }
              },
              "parentOrg": {
                "type": "string",
                "examples": ["Parent"]
              },
              "cmsConnectors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["AWS2"]
                }
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "cpeDeploymentType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/cpeDeploymentType"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ikeAuthType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/ikeAuthType"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "organizationName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/orgName"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "parentOrganization",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/parentOrg"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "controllers",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/controllers"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "cmsConnectors",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/cmsConnectors"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vrfs",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/vrfs"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "analyticsClusters",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/analyticsClusters"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "supportedRoles",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/supportedRoles"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "sharedControlPlane",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "orgPayload",
              "ptr": "/sharedControlPlane"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-23T19:49:44.553Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T11:12:22.921Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 8,
      "reference": "65fd935deda0a80317ab45c5",
      "type": "transformation",
      "folder": "/Create Spoke Group",
      "document": {
        "_id": "65fd935deda0a80317ab45c5",
        "name": "Create Spoke Group Data",
        "description": "Last JST before call to adapter",
        "incoming": [
          {
            "$id": "spokeGroupName",
            "type": "string"
          },
          {
            "$id": "organization",
            "type": "string"
          },
          {
            "$id": "hubType",
            "type": "string"
          },
          {
            "$id": "region",
            "type": "string"
          },
          {
            "$id": "vrfs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": ["Tenant1-LAN-VR"]
                },
                "hubs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "examples": ["New"]
                      },
                      "priority": {
                        "type": "number",
                        "examples": [1]
                      }
                    },
                    "required": []
                  }
                },
                "groupType": {
                  "type": "string",
                  "examples": ["directSpokeToSpoke"]
                },
                "communityRef": {
                  "type": "string",
                  "examples": ["CO1"]
                }
              },
              "required": []
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "spokeGroupBean",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": ["SG1"]
              },
              "org": {
                "type": "string",
                "examples": ["Tenant1"]
              },
              "vrfs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": ["Tenant1-LAN-VR"]
                    },
                    "groupType": {
                      "type": "string",
                      "examples": ["SpokeToSpokeViaHub"]
                    },
                    "communityRef": {
                      "type": "string",
                      "examples": ["CO1"]
                    },
                    "hubs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": ["New"]
                          },
                          "priority": {
                            "type": "number",
                            "examples": [1]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                }
              },
              "hubType": {
                "type": "string",
                "examples": ["hub"]
              },
              "region": {
                "type": "string"
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "spokeGroupName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "spokeGroupBean",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "organization",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "spokeGroupBean",
              "ptr": "/org"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "hubType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "spokeGroupBean",
              "ptr": "/hubType"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "region",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "spokeGroupBean",
              "ptr": "/region"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vrfs",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "spokeGroupBean",
              "ptr": "/vrfs"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-23T19:49:44.556Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T11:12:22.929Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Create New Organization",
      "children": [
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 7,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Create Spoke Group",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Create Device Group",
      "children": [
        {
          "iid": 4,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Deploy Device",
      "children": [
        {
          "iid": 2,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Create Director Version",
      "children": [
        {
          "iid": 3,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Check Organization",
      "children": [
        {
          "iid": 5,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-28T18:34:03.797Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T11:12:22.909Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 61,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
