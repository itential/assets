{
  "_id": "66cf708821161b4df271748b",
  "name": "Infoblox DDI",
  "description": "Infoblox DDI Project has assets for Create Network, Create Network Container, Create DNS A Record, Create CNS CNAME Record, Create DNS Fixed Address Record, Create DNS NS Record, Create DNS PRT Record",
  "components": [
    {
      "iid": 0,
      "reference": "9fa050c2-903e-4976-a9f3-8618c1166203",
      "type": "workflow",
      "folder": "/",
      "document": {
        "name": "Assign Next IP",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2100,
              "y": -2232
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2100,
              "y": -1968
            }
          },
          "6fa": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": {},
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2460,
              "y": -2088
            }
          },
          "ee17": {
            "name": "assignNextIP2",
            "canvasName": "assignNextIP2",
            "summary": "assignNextIP2",
            "description": "assignNextIP2 will register the IP in the system",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "networkIP": "$var.job.networkIP",
                "hostName": "$var.job.hostName",
                "comment": "$var.job.comment",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.assignedNextIp"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2100,
              "y": -2100
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "ee17": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6fa": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "ee17": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "6fa": {
              "type": "standard",
              "state": "error"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {},
          "3c0c": {},
          "2f5f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "networkIP": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "hostName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "comment": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["networkIP", "hostName", "comment", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "networkIP": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "hostName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "comment": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "assignedNextIp": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.012Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "6b93df36-f87d-424a-8278-bf62e9a86dbc",
      "type": "workflow",
      "folder": "/DNS PTR Record",
      "document": {
        "name": "Modify DNS PTR Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1524,
              "y": -2880
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1488,
              "y": -1968
            }
          },
          "b1dc": {
            "name": "merge",
            "summary": "Build PTR Query Payload",
            "description": "Build PTR Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "currentIpAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "ptrdname",
                    "value": {
                      "task": "job",
                      "variable": "currentHostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1524,
              "y": -2760
            }
          },
          "26fb": {
            "name": "getObject",
            "summary": "Get PTR Record",
            "description": "Get PTR Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:ptr",
                "queryObject": "$var.b1dc.merged_object",
                "returnFields": "name,ipv4addr",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1524,
              "y": -2652
            }
          },
          "3b": {
            "name": "query",
            "summary": "Query PTR Record _ref",
            "description": "Query PTR Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.26fb.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -1524,
              "y": -2520
            }
          },
          "77b8": {
            "name": "merge",
            "summary": "Build PTR Modify Payload",
            "description": "Build PTR Modify Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "newIpAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "ptrdname",
                    "value": {
                      "task": "job",
                      "variable": "newHostname",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1512,
              "y": -2280
            }
          },
          "46b8": {
            "name": "updateObject",
            "summary": "Update PTR Record",
            "description": "Update PTR Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.3b.return_data",
                "body": "$var.77b8.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedPTRRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1500,
              "y": -2148
            }
          },
          "db34": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "PTR Record Not Found",
            "description": "PTR Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "PTR Record Not Found",
                "message": "",
                "body": "The PTR record for <!ipv4addr!>/<!ptrdname!> was not found in Infoblox.",
                "variables": "$var.b1dc.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -936,
              "y": -2364
            }
          },
          "b2bb": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if PTR Record _ref Exists",
            "description": "Check if PTR record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "3b",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1524,
              "y": -2412
            }
          },
          "1d3c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1896,
              "y": -2136
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "b1dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "b1dc": {
            "26fb": {
              "type": "standard",
              "state": "success"
            }
          },
          "26fb": {
            "3b": {
              "type": "standard",
              "state": "success"
            }
          },
          "3b": {
            "b2bb": {
              "state": "success",
              "type": "standard"
            }
          },
          "77b8": {
            "46b8": {
              "type": "standard",
              "state": "success"
            }
          },
          "46b8": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "1d3c": {
              "type": "standard",
              "state": "error"
            }
          },
          "db34": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "b2bb": {
            "77b8": {
              "state": "success",
              "type": "standard"
            },
            "db34": {
              "type": "standard",
              "state": "failure"
            }
          },
          "1d3c": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {},
          "b825": {},
          "419b": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "currentIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "currentIpAddress",
            "currentHostname",
            "dnsView",
            "adapterId",
            "newIpAddress",
            "newHostname"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "currentIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedPTRRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.016Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "d370c28a-cbe2-4f70-be7d-e0ba6062611b",
      "type": "workflow",
      "folder": "/DNS NS Record",
      "document": {
        "name": "Modify DNS NS Record",
        "tasks": {
          "833": {
            "name": "getObject",
            "summary": "Get NS Record",
            "description": "Get NS Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:ns",
                "queryObject": "$var.35fa.merged_object",
                "returnFields": "name,nameserver",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1008,
              "y": 4992
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1008,
              "y": 4740
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1008,
              "y": 5712
            }
          },
          "35fa": {
            "name": "merge",
            "summary": "Build NS Query Payload",
            "description": "Build NS Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "currentNsRecord",
                      "editable": true
                    }
                  },
                  {
                    "key": "nameserver",
                    "value": {
                      "task": "job",
                      "variable": "currentNameServer",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": 1008,
              "y": 4872
            }
          },
          "7ea9": {
            "name": "query",
            "summary": "Query NS Record _ref",
            "description": "Query NS Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.833.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": 1008,
              "y": 5124
            }
          },
          "fe74": {
            "name": "updateObject",
            "summary": "Update NS Record",
            "description": "Update NS Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.7ea9.return_data",
                "body": "$var.102a.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedNSRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1008,
              "y": 5520
            }
          },
          "102a": {
            "name": "merge",
            "summary": "Build NS Update Payload",
            "description": "Build NS Update Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "nameserver",
                    "value": {
                      "task": "job",
                      "variable": "newNameServer",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": 1008,
              "y": 5388
            }
          },
          "cd86": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "NS Record Not Found",
            "description": "NS Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "NS Record Not Found",
                "message": "",
                "body": "The NS record for <!name!>/<!nameserver!> was not found in Infoblox.",
                "variables": "$var.35fa.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1428,
              "y": 5256
            }
          },
          "a74f": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if NS Record _ref Exists",
            "description": "Check if NS record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "7ea9",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1008,
              "y": 5256
            }
          },
          "0e55": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 660,
              "y": 5532
            }
          }
        },
        "transitions": {
          "220": {},
          "346": {},
          "833": {
            "7ea9": {
              "type": "standard",
              "state": "success"
            }
          },
          "3973": {},
          "5806": {},
          "7588": {},
          "9200": {},
          "9296": {},
          "workflow_start": {
            "35fa": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "35fa": {
            "833": {
              "type": "standard",
              "state": "success"
            }
          },
          "7ea9": {
            "a74f": {
              "state": "success",
              "type": "standard"
            }
          },
          "fe74": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "0e55": {
              "type": "standard",
              "state": "error"
            }
          },
          "102a": {
            "fe74": {
              "type": "standard",
              "state": "success"
            }
          },
          "cd86": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "a74f": {
            "102a": {
              "state": "success",
              "type": "standard"
            },
            "cd86": {
              "type": "standard",
              "state": "failure"
            }
          },
          "0e55": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "b1dc": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "cde7": {},
          "a1d5": {},
          "26fb": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentNsRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentNameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newNameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "adapterId",
            "currentNsRecord",
            "currentNameServer",
            "dnsView",
            "newNameServer"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentNsRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentNameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newNameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedNSRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.014Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "cd3160bc-323a-4992-96fc-e8ae646bdd49",
      "type": "workflow",
      "folder": "/DNS Fixed Address Record",
      "document": {
        "name": "Modify DNS Fixed Address Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -72,
              "y": 2700
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -72,
              "y": 3552
            }
          },
          "38b6": {
            "name": "merge",
            "summary": "Build Fixed Address Query Payload",
            "description": "Build Fixed Address Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "currentIpAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "mac",
                    "value": {
                      "task": "job",
                      "variable": "currentMacAddress",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -72,
              "y": 2820
            }
          },
          "a3c4": {
            "name": "getObject",
            "summary": "Get Fixed Address Record",
            "description": "Get Fixed Address Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "fixedaddress",
                "queryObject": "$var.38b6.merged_object",
                "returnFields": "ipv4addr,mac",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -72,
              "y": 2928
            }
          },
          "97a5": {
            "name": "query",
            "summary": "Query Fixed Address Record _ref",
            "description": "Query Fixed Address Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.a3c4.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -72,
              "y": 3048
            }
          },
          "ada6": {
            "name": "updateObject",
            "summary": "Update Fixed Address Record",
            "description": "Update Fixed Address Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.97a5.return_data",
                "body": "$var.631a.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedFixedAddress"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -72,
              "y": 3384
            }
          },
          "631a": {
            "name": "merge",
            "summary": "Build Fixed Address Modify Payload",
            "description": "Build Fixed Address Modify Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "newIpAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "mac",
                    "value": {
                      "task": "job",
                      "variable": "newMacAddress",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -72,
              "y": 3276
            }
          },
          "1c7f": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Fixed Address Record Not Found",
            "description": "Fixed Address Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Fixed Address Record Not Found",
                "message": "",
                "body": "The fixed address record for <!ipv4addr!>/<!mac!> was not found in Infoblox.",
                "variables": "$var.38b6.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -504,
              "y": 3168
            }
          },
          "d778": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Fixed Address Record _ref Exists",
            "description": "Check if fixed address record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "97a5",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -72,
              "y": 3168
            }
          },
          "d20e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 288,
              "y": 3384
            }
          }
        },
        "transitions": {
          "220": {},
          "2088": {},
          "3962": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "38b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "38b6": {
            "a3c4": {
              "type": "standard",
              "state": "success"
            }
          },
          "a3c4": {
            "97a5": {
              "type": "standard",
              "state": "success"
            }
          },
          "97a5": {
            "d778": {
              "state": "success",
              "type": "standard"
            }
          },
          "ada6": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "d20e": {
              "type": "standard",
              "state": "error"
            }
          },
          "631a": {
            "ada6": {
              "type": "standard",
              "state": "success"
            }
          },
          "1c7f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "d778": {
            "631a": {
              "state": "success",
              "type": "standard"
            },
            "1c7f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "d20e": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "fc1d": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "cde7": {},
          "a63c": {},
          "acba": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "currentIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentMacAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newMacAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "currentIpAddress",
            "currentMacAddress",
            "adapterId",
            "newIpAddress",
            "newMacAddress"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "currentIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentMacAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newMacAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedFixedAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.016Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "35b053a8-5587-494b-a501-c156510472a6",
      "type": "workflow",
      "folder": "/DNS CNAME Record",
      "document": {
        "name": "Modify DNS CNAME Record",
        "tasks": {
          "5806": {
            "name": "merge",
            "summary": "Build CNAME Query Payload",
            "description": "Build CNAME Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "currentAliasName",
                      "editable": true
                    }
                  },
                  {
                    "key": "canonical",
                    "value": {
                      "task": "job",
                      "variable": "currentCanonicalName",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1764,
              "y": -12
            }
          },
          "7275": {
            "name": "query",
            "summary": "Query CNAME Record _ref",
            "description": "Query CNAME Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.7ae7.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -1764,
              "y": 204
            }
          },
          "8520": {
            "name": "updateObject",
            "summary": "Update CNAME Record",
            "description": "Update CNAME Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.7275.return_data",
                "body": "$var.a102.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedCnameRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1752,
              "y": 528
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1764,
              "y": -120
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1752,
              "y": 684
            }
          },
          "7ae7": {
            "name": "getObject",
            "summary": "Get CNAME Record",
            "description": "Get CNAME Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:cname",
                "queryObject": "$var.5806.merged_object",
                "returnFields": "name,canonical",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1764,
              "y": 84
            }
          },
          "a102": {
            "name": "merge",
            "summary": "Build CNAME Modify Payload",
            "description": "Build CNAME Modify Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "newAliasName",
                      "editable": true
                    }
                  },
                  {
                    "key": "canonical",
                    "value": {
                      "task": "job",
                      "variable": "newCanonicalName",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1752,
              "y": 420
            }
          },
          "a150": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "CNAME Record Not Found",
            "description": "CNAME Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "CNAME Record Not Found",
                "message": "",
                "body": "The CNAME record for <!name!>/<!canonical!> was not found in Infoblox.",
                "variables": "$var.5806.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2112,
              "y": 324
            }
          },
          "3dd2": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if CNAME Record _ref Exists",
            "description": "Check if CNAME record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "7275",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1764,
              "y": 312
            }
          },
          "d484": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1428,
              "y": 540
            }
          }
        },
        "transitions": {
          "220": {},
          "3962": {},
          "3973": {},
          "5806": {
            "7ae7": {
              "type": "standard",
              "state": "success"
            }
          },
          "7275": {
            "3dd2": {
              "state": "success",
              "type": "standard"
            }
          },
          "7588": {},
          "7780": {},
          "8520": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "d484": {
              "type": "standard",
              "state": "error"
            }
          },
          "workflow_start": {
            "5806": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "7ae7": {
            "7275": {
              "type": "standard",
              "state": "success"
            }
          },
          "a102": {
            "8520": {
              "type": "standard",
              "state": "success"
            }
          },
          "a150": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3dd2": {
            "a102": {
              "state": "success",
              "type": "standard"
            },
            "a150": {
              "type": "standard",
              "state": "failure"
            }
          },
          "d484": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "5da8": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "36e8": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "38b6": {},
          "426c": {},
          "cde7": {},
          "79ff": {},
          "b02e": {},
          "a1d5": {},
          "ad70": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "currentAliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentCanonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newAliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newCanonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "currentAliasName",
            "currentCanonicalName",
            "dnsView",
            "adapterId",
            "newAliasName",
            "newCanonicalName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "currentAliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentCanonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newAliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "newCanonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedCnameRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.016Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 5,
      "reference": "e4af82a1-e756-42ed-ae32-3432494a25fe",
      "type": "workflow",
      "folder": "/DNS A Record",
      "document": {
        "name": "Modify DNS A Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -60,
              "y": -4404
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -72,
              "y": -3420
            }
          },
          "36e8": {
            "name": "merge",
            "summary": "Build A Record Query Object",
            "description": "Build A Record Query Object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "currentHostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "currentIpAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -60,
              "y": -4260
            }
          },
          "5dfb": {
            "name": "getObject",
            "summary": "Get DNS A Record",
            "description": "Get DNS A Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:a",
                "queryObject": "$var.36e8.merged_object",
                "returnFields": "name,ipv4addr",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -60,
              "y": -4140
            }
          },
          "654b": {
            "name": "updateObject",
            "summary": "Update DNS A Record",
            "description": "Update DNS A Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.f77e.return_data",
                "body": "$var.138d.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedARecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -60,
              "y": -3648
            }
          },
          "138d": {
            "name": "merge",
            "summary": "Build A Record Modify Payload",
            "description": "Build A Record Modify Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "updatedHostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "updatedIpAddress",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -60,
              "y": -3768
            }
          },
          "4a41": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "DNS A Record Not Found",
            "description": "DNS A Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "DNS A Record Not Found",
                "message": "",
                "body": "The DNS A record for <!ipv4addr!>/<!name!> was not found in Infoblox.",
                "variables": "$var.36e8.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -384,
              "y": -3900
            }
          },
          "f77e": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query A Record _ref",
            "description": "Query A Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.5dfb.result"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -60,
              "y": -4020
            }
          },
          "e17c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if A Record _ref Exists",
            "description": "Check if A record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "f77e",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -60,
              "y": -3900
            }
          },
          "c315": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 252,
              "y": -3660
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "36e8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "36e8": {
            "5dfb": {
              "type": "standard",
              "state": "success"
            }
          },
          "5dfb": {
            "f77e": {
              "state": "success",
              "type": "standard"
            }
          },
          "654b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "c315": {
              "type": "standard",
              "state": "error"
            }
          },
          "138d": {
            "654b": {
              "type": "standard",
              "state": "success"
            }
          },
          "4a41": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f77e": {
            "e17c": {
              "state": "success",
              "type": "standard"
            }
          },
          "e17c": {
            "4a41": {
              "type": "standard",
              "state": "failure"
            },
            "138d": {
              "state": "success",
              "type": "standard"
            }
          },
          "c315": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "be54": {},
          "73f4": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "cde7": {},
          "39a4": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "currentHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "updatedHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "updatedIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "currentHostname",
            "currentIpAddress",
            "dnsView",
            "adapterId",
            "updatedHostname",
            "updatedIpAddress"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "currentHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "currentIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "updatedHostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "updatedIpAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedARecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "4.5.3-2019.2.7.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.014Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 6,
      "reference": "b2308a09-e7ab-4782-a471-0fc3a1c4ed56",
      "type": "workflow",
      "folder": "/Network Container",
      "document": {
        "name": "Delete Network Container",
        "tasks": {
          "1261": {
            "name": "getNetworkContainerDetails",
            "canvasName": "getNetworkContainerDetails",
            "summary": "getNetworkContainerDetails",
            "description": "getNetworkContainerDetails will get the container details",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "networkIP": "$var.job.networkIP",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3012,
              "y": -2196
            }
          },
          "3441": {
            "name": "substring",
            "canvasName": "substring",
            "summary": "Get Valid Network Container ref",
            "description": "Get Network Container ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.b02e.return_data",
                "indexStart": 17,
                "indexEnd": ""
              },
              "outgoing": {
                "substring": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -3012,
              "y": -1836
            }
          },
          "4081": {
            "name": "deleteNetworkContainer",
            "canvasName": "deleteNetworkContainer",
            "summary": "Delete Network Container",
            "description": "",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "networkRef": "$var.3441.substring",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedNetworkContainer"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3012,
              "y": -1692
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3012,
              "y": -2364
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3012,
              "y": -1452
            }
          },
          "b02e": {
            "name": "query",
            "summary": "Query Network Container _ref",
            "description": "Query Network Container _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.1261.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -3012,
              "y": -2076
            }
          },
          "a21b": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Network Container Not Found",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Network Container Not Found",
                "message": "",
                "body": "Network container was not found in Infoblox.",
                "variables": {},
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3468,
              "y": -1968
            }
          },
          "4ffb": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": {},
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2580,
              "y": -2196
            }
          },
          "6d60": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Network Container _ref Exists",
            "description": "Check if network container _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "b02e",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -3012,
              "y": -1956
            }
          }
        },
        "transitions": {
          "220": {},
          "1261": {
            "b02e": {
              "type": "standard",
              "state": "success"
            },
            "4ffb": {
              "state": "error",
              "type": "standard"
            }
          },
          "1599": {},
          "3441": {
            "4081": {
              "state": "success",
              "type": "standard"
            }
          },
          "3973": {},
          "4081": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "4ffb": {
              "type": "standard",
              "state": "error"
            }
          },
          "7588": {},
          "7780": {},
          "workflow_start": {
            "1261": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "b02e": {
            "6d60": {
              "state": "success",
              "type": "standard"
            }
          },
          "a21b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "4ffb": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6d60": {
            "3441": {
              "state": "success",
              "type": "standard"
            },
            "a21b": {
              "type": "standard",
              "state": "failure"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {},
          "170f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "networkIP": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["networkIP", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "networkIP": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deletedNetworkContainer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.015Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 7,
      "reference": "d33684b6-9bcc-4298-9816-0a5ad08e7ce7",
      "type": "workflow",
      "folder": "/Network",
      "document": {
        "name": "Delete Network",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3132,
              "y": -2244
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3144,
              "y": -1956
            }
          },
          "6fa": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": {},
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -3480,
              "y": -2088
            }
          },
          "694a": {
            "name": "deleteNetworkv2",
            "canvasName": "deleteNetworkv2",
            "summary": "Delete Network",
            "description": "",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "networkIP": "$var.job.networkIP",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedNetwork"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3144,
              "y": -2100
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "694a": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6fa": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "694a": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "6fa": {
              "type": "standard",
              "state": "error"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {},
          "3c0c": {},
          "efca": {},
          "dbad": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "networkIP": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["networkIP", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "networkIP": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deletedNetwork": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.017Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 8,
      "reference": "6f0bc552-bb38-4e1e-bd3c-191835b1df4d",
      "type": "workflow",
      "folder": "/DNS PTR Record",
      "document": {
        "name": "Delete DNS PTR Record",
        "tasks": {
          "1485": {
            "name": "getObject",
            "summary": "Get PTR Record",
            "description": "Get PTR Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:ptr",
                "queryObject": "$var.b1dc.merged_object",
                "returnFields": "name,ptrdname,ipv4addr",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1776,
              "y": -2472
            }
          },
          "3057": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if PTR Record _ref Exists",
            "description": "Check if PTR Record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "b02e",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1776,
              "y": -2232
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1776,
              "y": -2712
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1788,
              "y": -1932
            }
          },
          "b1dc": {
            "name": "merge",
            "summary": "Build PTR Query Payload",
            "description": "Build PTR Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ptrdname",
                    "value": {
                      "task": "job",
                      "variable": "hostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "ipAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1776,
              "y": -2592
            }
          },
          "b02e": {
            "name": "query",
            "summary": "Query PTR Record _ref",
            "description": "Query PTR Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.1485.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -1776,
              "y": -2364
            }
          },
          "f3c": {
            "name": "deleteObject",
            "summary": "Delete PTR Record",
            "description": "Delete PTR Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.b02e.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedPTRRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1776,
              "y": -2112
            }
          },
          "348f": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "PTR Record Not Found",
            "description": "PTR Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "PTR Record Not Found",
                "message": "",
                "body": "The PTR record for <!ipv4addr!>/<!ptrdname!> was not found in Infoblox.",
                "variables": "$var.b1dc.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2136,
              "y": -2232
            }
          },
          "18b0": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1464,
              "y": -2112
            }
          }
        },
        "transitions": {
          "220": {},
          "1485": {
            "b02e": {
              "type": "standard",
              "state": "success"
            }
          },
          "1599": {},
          "3057": {
            "f3c": {
              "state": "success",
              "type": "standard"
            },
            "348f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "b1dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "b1dc": {
            "1485": {
              "type": "standard",
              "state": "success"
            }
          },
          "b02e": {
            "3057": {
              "state": "success",
              "type": "standard"
            }
          },
          "f3c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "18b0": {
              "type": "standard",
              "state": "error"
            }
          },
          "348f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "18b0": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "hostname", "ipAddress", "dnsView"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedPTRRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.018Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 9,
      "reference": "ae0a78db-b35b-486f-b089-778cac55cc23",
      "type": "workflow",
      "folder": "/DNS NS Record",
      "document": {
        "name": "Delete DNS NS Record",
        "tasks": {
          "8073": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1860,
              "y": 4692
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1488,
              "y": 4044
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1488,
              "y": 4884
            }
          },
          "ac8b": {
            "name": "getObject",
            "summary": "Get NS Record",
            "description": "Get NS Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:ns",
                "queryObject": "$var.6b90.merged_object",
                "returnFields": "name,nameserver",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1488,
              "y": 4284
            }
          },
          "fcb1": {
            "name": "query",
            "summary": "Query NS Record _ref",
            "description": "Query NS Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.ac8b.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -1488,
              "y": 4404
            }
          },
          "16fe": {
            "name": "deleteObject",
            "summary": "Delete NS Record",
            "description": "Delete NS Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.fcb1.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedNSRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1488,
              "y": 4692
            }
          },
          "6b90": {
            "name": "merge",
            "summary": "Build NS Query Payload",
            "description": "Build NS Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "nsRecord",
                      "editable": true
                    }
                  },
                  {
                    "key": "nameserver",
                    "value": {
                      "task": "job",
                      "variable": "nameServer",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1488,
              "y": 4164
            }
          },
          "892a": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "NS Record Not Found",
            "description": "NS Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "NS Record Not Found",
                "message": "",
                "body": "The NS record for <!name!>/<!nameserver!> was not found in Infoblox.",
                "variables": "$var.6b90.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -1056,
              "y": 4548
            }
          },
          "c7bb": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if NS Record _ref Exists",
            "description": "Check if NS record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "fcb1",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1488,
              "y": 4536
            }
          }
        },
        "transitions": {
          "220": {},
          "346": {},
          "3973": {},
          "5806": {},
          "7588": {},
          "8073": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "9200": {},
          "9296": {},
          "workflow_start": {
            "6b90": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "ac8b": {
            "fcb1": {
              "type": "standard",
              "state": "success"
            }
          },
          "fcb1": {
            "c7bb": {
              "state": "success",
              "type": "standard"
            }
          },
          "16fe": {
            "8073": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6b90": {
            "ac8b": {
              "type": "standard",
              "state": "success"
            }
          },
          "892a": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "c7bb": {
            "16fe": {
              "state": "success",
              "type": "standard"
            },
            "892a": {
              "type": "standard",
              "state": "failure"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "b1dc": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "cde7": {},
          "a1d5": {},
          "26fb": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nsRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "nsRecord", "nameServer", "dnsView"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nsRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deletedNSRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.018Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 10,
      "reference": "42b54555-d889-48a5-9436-dafc777a646d",
      "type": "workflow",
      "folder": "/DNS Fixed Address Record",
      "document": {
        "name": "Delete DNS Fixed Address Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1896,
              "y": 2004
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1908,
              "y": 2808
            }
          },
          "38b6": {
            "name": "merge",
            "summary": "Build Fixed Address Query Payload",
            "description": "Build Fixed Address Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "ipAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "mac",
                    "value": {
                      "task": "job",
                      "variable": "macAddress",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1896,
              "y": 2124
            }
          },
          "71a7": {
            "name": "getObject",
            "summary": "Get Fixed Address Record",
            "description": "Get Fixed Address Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "fixedaddress",
                "queryObject": "$var.38b6.merged_object",
                "returnFields": "ipv4addr,mac",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1896,
              "y": 2244
            }
          },
          "ac62": {
            "name": "query",
            "summary": "Query Fixed Address Record _ref",
            "description": "Query Fixed Address Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.71a7.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -1896,
              "y": 2364
            }
          },
          "444a": {
            "name": "deleteObject",
            "summary": "Delete Fixed Address Record",
            "description": "Delete Fixed Address Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.ac62.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedFixedAddress"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1896,
              "y": 2628
            }
          },
          "f425": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Fixed Address Record Not Found",
            "description": "Fixed Address Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Fixed Address Record Not Found",
                "message": "",
                "body": "The fixed address record for <!ipv4addr!>/<!mac!> was not found in Infoblox.",
                "variables": "$var.38b6.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2268,
              "y": 2484
            }
          },
          "e187": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Fixed Address Record _ref Exists",
            "description": "Check if fixed address record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "ac62",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1896,
              "y": 2484
            }
          },
          "eb4b": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1512,
              "y": 2616
            }
          }
        },
        "transitions": {
          "220": {},
          "2088": {},
          "3962": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "38b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "38b6": {
            "71a7": {
              "type": "standard",
              "state": "success"
            }
          },
          "71a7": {
            "ac62": {
              "type": "standard",
              "state": "success"
            }
          },
          "ac62": {
            "e187": {
              "state": "success",
              "type": "standard"
            }
          },
          "444a": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "eb4b": {
              "type": "standard",
              "state": "error"
            }
          },
          "f425": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "e187": {
            "444a": {
              "state": "success",
              "type": "standard"
            },
            "f425": {
              "type": "standard",
              "state": "failure"
            }
          },
          "eb4b": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "fc1d": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "cde7": {},
          "a63c": {},
          "acba": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "macAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["ipAddress", "macAddress", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "macAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedFixedAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.019Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 11,
      "reference": "861e3dfa-c674-40a5-8fbb-e8f1869e1a06",
      "type": "workflow",
      "folder": "/DNS CNAME Record",
      "document": {
        "name": "Delete DNS CNAME Record",
        "tasks": {
          "5806": {
            "name": "merge",
            "summary": "Build CNAME Query Payload",
            "description": "Build CNAME Query Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "aliasName",
                      "editable": true
                    }
                  },
                  {
                    "key": "canonical",
                    "value": {
                      "task": "job",
                      "variable": "canonicalName",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1908,
              "y": 108
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1908,
              "y": -12
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1920,
              "y": 768
            }
          },
          "2cb3": {
            "name": "getObject",
            "summary": "Get CNAME Record",
            "description": "Get CNAME Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:cname",
                "queryObject": "$var.5806.merged_object",
                "returnFields": "name,canonical",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1908,
              "y": 216
            }
          },
          "eab9": {
            "name": "query",
            "summary": "Query CNAME Record _ref",
            "description": "Query CNAME Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.2cb3.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -1908,
              "y": 336
            }
          },
          "12a1": {
            "name": "deleteObject",
            "summary": "Delete CNAME Record",
            "description": "Delete CNAME Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.eab9.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedCnameRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1908,
              "y": 576
            }
          },
          "a20f": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "CNAME Record Not Found",
            "description": "CNAME Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "CNAME Record Not Found",
                "message": "",
                "body": "The CNAME record for <!name!>/<!canonical!> was not found in Infoblox.",
                "variables": "$var.5806.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2232,
              "y": 468
            }
          },
          "2e2d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if CNAME Record _ref Exists",
            "description": "Check if CNAME record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "eab9",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1908,
              "y": 456
            }
          },
          "b179": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1596,
              "y": 576
            }
          }
        },
        "transitions": {
          "220": {},
          "3962": {},
          "3973": {},
          "5806": {
            "2cb3": {
              "type": "standard",
              "state": "success"
            }
          },
          "7588": {},
          "7780": {},
          "workflow_start": {
            "5806": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "2cb3": {
            "eab9": {
              "type": "standard",
              "state": "success"
            }
          },
          "eab9": {
            "2e2d": {
              "state": "success",
              "type": "standard"
            }
          },
          "12a1": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "b179": {
              "type": "standard",
              "state": "error"
            }
          },
          "a20f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "2e2d": {
            "12a1": {
              "state": "success",
              "type": "standard"
            },
            "a20f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "b179": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "5da8": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "36e8": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "38b6": {},
          "426c": {},
          "cde7": {},
          "79ff": {},
          "b02e": {},
          "a1d5": {},
          "ad70": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "aliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "canonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["aliasName", "canonicalName", "dnsView", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "aliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "canonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedCnameRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.020Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 12,
      "reference": "e2c06a2e-db81-4124-a410-cb8aae9eda08",
      "type": "workflow",
      "folder": "/DNS A Record",
      "document": {
        "name": "Delete DNS A Record",
        "tasks": {
          "5227": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Build A Record Query Object",
            "description": "Build A Record Query Object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "hostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "ipAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2364,
              "y": -5028
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2364,
              "y": -5148
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2364,
              "y": -4308
            }
          },
          "c287": {
            "name": "getObject",
            "summary": "Get DNS A Record",
            "description": "Get DNS A Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectType": "record:a",
                "queryObject": "$var.5227.merged_object",
                "returnFields": "name,ipv4addr",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2364,
              "y": -4896
            }
          },
          "5a0f": {
            "name": "query",
            "summary": "Query A Record _ref",
            "description": "Query A Record _ref",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.result[0]._ref",
                "obj": "$var.c287.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "canvasName": "query",
            "nodeLocation": {
              "x": -2364,
              "y": -4764
            }
          },
          "4f72": {
            "name": "deleteObject",
            "summary": "Delete DNS A Record",
            "description": "Delete DNS A Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "objectReference": "$var.5a0f.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedARecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2364,
              "y": -4500
            }
          },
          "8a0": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "DNS A Record Not Found",
            "description": "DNS A Record Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "DNS A Record Not Found",
                "message": "",
                "body": "The DNS A record for <!ipv4addr!>/<!name!> was not found in Infoblox.",
                "variables": "$var.5227.merged_object",
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2724,
              "y": -4632
            }
          },
          "c614": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if A Record _ref Exists",
            "description": "Check if A record _ref exists",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "5a0f",
                          "variable": "return_data"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -2364,
              "y": -4632
            }
          },
          "16b7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -2004,
              "y": -4512
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "5227": {
            "c287": {
              "type": "standard",
              "state": "success"
            }
          },
          "7588": {},
          "7780": {},
          "workflow_start": {
            "5227": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "c287": {
            "5a0f": {
              "type": "standard",
              "state": "success"
            }
          },
          "5a0f": {
            "c614": {
              "state": "success",
              "type": "standard"
            }
          },
          "4f72": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "16b7": {
              "type": "standard",
              "state": "error"
            }
          },
          "8a0": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "c614": {
            "4f72": {
              "state": "success",
              "type": "standard"
            },
            "8a0": {
              "type": "standard",
              "state": "failure"
            }
          },
          "16b7": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "73f4": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "cde7": {},
          "36b9": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["hostname", "ipAddress", "dnsView", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedARecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.020Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 13,
      "reference": "eca02aca-d44a-428b-a52d-05a3366dab75",
      "type": "workflow",
      "folder": "/Network Container",
      "document": {
        "name": "Create Network Container",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3900,
              "y": -2220
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3900,
              "y": -1884
            }
          },
          "6fa": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": {},
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -4212,
              "y": -1992
            }
          },
          "f30c": {
            "name": "createNetworkContainer",
            "canvasName": "createNetworkContainer",
            "summary": "createNetworkContainer",
            "description": "createNetworkContainer will create a new network container",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "payload": "$var.976e.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdNetworkContainer"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3900,
              "y": -1992
            }
          },
          "976e": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Build Input to Create Network Container",
            "description": "Builds input to create network container",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "network",
                    "value": {
                      "task": "job",
                      "variable": "network",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -3900,
              "y": -2100
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "976e": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6fa": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f30c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "6fa": {
              "type": "standard",
              "state": "error"
            }
          },
          "976e": {
            "f30c": {
              "type": "standard",
              "state": "success"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {},
          "3c0c": {},
          "99e5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "network": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "network"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "network": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "createdNetworkContainer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.021Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 14,
      "reference": "af5f455d-0a4a-4420-bd66-cfb0ce755c7f",
      "type": "workflow",
      "folder": "/Network",
      "document": {
        "name": "Create Network",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2256,
              "y": -2268
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2244,
              "y": -1956
            }
          },
          "6fa": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": {},
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -2580,
              "y": -2100
            }
          },
          "710e": {
            "name": "createNetwork",
            "canvasName": "createNetwork",
            "summary": "createNetwork",
            "description": "createNetwork will create a network",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "network": "$var.job.network",
                "comment": "$var.job.comment",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdNetwork"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2244,
              "y": -2112
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "710e": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6fa": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "710e": {
            "6fa": {
              "type": "standard",
              "state": "error"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {},
          "3c0c": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "network": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "comment": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["network", "comment", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "network": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "comment": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "createdNetwork": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.021Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 15,
      "reference": "55e92522-b9b6-40a7-bf78-cfb6f2a7e641",
      "type": "workflow",
      "folder": "/DNS PTR Record",
      "document": {
        "name": "Create DNS PTR Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2424,
              "y": -2700
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2424,
              "y": -2196
            }
          },
          "8a5a": {
            "name": "createPtrRecord",
            "summary": "Create PTR Record",
            "description": "Creates a PTR record, e.g. for 'server1' in the zone 'info.com'",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "body": "$var.b1dc.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.ptrRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2772,
              "y": -2328
            }
          },
          "b1dc": {
            "name": "merge",
            "summary": "Build PTR Payload",
            "description": "Build PTR Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ptrdname",
                    "value": {
                      "task": "job",
                      "variable": "hostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "ipAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -2424,
              "y": -2580
            }
          },
          "f8a1": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "PTR Record Already Exists?",
            "description": "PTR Record Already Exists?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.result",
                        "operand_1": {
                          "variable": "result",
                          "task": "b519"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2424,
              "y": -2328
            }
          },
          "b519": {
            "name": "getObject",
            "canvasName": "getObject",
            "summary": "Get PTR Record",
            "description": "Get PTR Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "objectType": "record:ptr",
                "queryObject": "$var.b1dc.merged_object",
                "returnFields": "name,ptrdname,ipv4addr",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.ptrRecord"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2424,
              "y": -2460
            }
          },
          "d276": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -2772,
              "y": -2196
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "b1dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "8a5a": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "d276": {
              "type": "standard",
              "state": "error"
            }
          },
          "b1dc": {
            "b519": {
              "type": "standard",
              "state": "success"
            }
          },
          "f8a1": {
            "8a5a": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "b519": {
            "f8a1": {
              "type": "standard",
              "state": "success"
            }
          },
          "d276": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "426c": {},
          "cde7": {},
          "acba": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "hostname", "ipAddress", "dnsView"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "ptrRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.022Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 16,
      "reference": "6b441c40-4e82-4393-8ead-fc4d13d4bf60",
      "type": "workflow",
      "folder": "/DNS NS Record",
      "document": {
        "name": "Create DNS NS Record",
        "tasks": {
          "1405": {
            "name": "getObject",
            "canvasName": "getObject",
            "summary": "Get NS Record",
            "description": "Get NS Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "objectType": "record:ns",
                "queryObject": "$var.01c2.merged_object",
                "returnFields": "name,nameserver",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1152,
              "y": 4692
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1152,
              "y": 4308
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -1152,
              "y": 4980
            }
          },
          "35fa": {
            "name": "merge",
            "summary": "Build NS Record Payload",
            "description": "Build NS Record Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "nsRecord",
                      "editable": true
                    }
                  },
                  {
                    "key": "nameserver",
                    "value": {
                      "task": "job",
                      "variable": "nameServer",
                      "editable": true
                    }
                  },
                  {
                    "key": "addresses",
                    "value": {
                      "task": "job",
                      "variable": "addresses",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1152,
              "y": 4440
            }
          },
          "c0e5": {
            "name": "createNsRecord",
            "summary": "Create NS Record",
            "description": "Creates a NS record, e.g. for the zone 'info.com'",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "body": "$var.35fa.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdNSRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -1512,
              "y": 4824
            }
          },
          "def1": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "NS Record Already Exists?",
            "description": "NS Record Already Exists?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.result",
                        "operand_1": {
                          "variable": "result",
                          "task": "1405"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -1152,
              "y": 4812
            }
          },
          "21d2": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -1512,
              "y": 4968
            }
          },
          "01c2": {
            "name": "merge",
            "summary": "Build Get NS Record Query",
            "description": "Build Get NS Record Query",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "nsRecord",
                      "editable": true
                    }
                  },
                  {
                    "key": "nameserver",
                    "value": {
                      "task": "job",
                      "variable": "nameServer",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -1152,
              "y": 4572
            }
          }
        },
        "transitions": {
          "220": {},
          "346": {},
          "1405": {
            "def1": {
              "type": "standard",
              "state": "success"
            }
          },
          "3973": {},
          "5806": {},
          "7588": {},
          "9200": {},
          "9296": {},
          "workflow_start": {
            "35fa": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "35fa": {
            "01c2": {
              "state": "success",
              "type": "standard"
            }
          },
          "c0e5": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "21d2": {
              "type": "standard",
              "state": "error"
            }
          },
          "def1": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "c0e5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "21d2": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "01c2": {
            "1405": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "b1dc": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "cde7": {},
          "a1d5": {},
          "26fb": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nsRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "addresses": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "adapterId",
            "nsRecord",
            "nameServer",
            "addresses",
            "dnsView"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nsRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "nameServer": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "addresses": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createdNSRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.022Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 17,
      "reference": "100132cf-a7b9-454f-b1d8-88803fa5201a",
      "type": "workflow",
      "folder": "/DNS Fixed Address Record",
      "document": {
        "name": "Create DNS Fixed Address Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2640,
              "y": 2100
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2640,
              "y": 2568
            }
          },
          "b4b3": {
            "name": "createFixedAddress",
            "summary": "Create Fixed Address",
            "description": "Creates a fixed address",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "body": "$var.38b6.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.fixedAddressRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2988,
              "y": 2436
            }
          },
          "38b6": {
            "name": "merge",
            "summary": "Build Fixed Address Payload",
            "description": "Build Fixed Address Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "ipAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "mac",
                    "value": {
                      "task": "job",
                      "variable": "macAddress",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -2640,
              "y": 2208
            }
          },
          "8b87": {
            "name": "getObject",
            "canvasName": "getObject",
            "summary": "Get Fixed Address Record",
            "description": "Get Fixed Address Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "objectType": "fixedaddress",
                "queryObject": "$var.38b6.merged_object",
                "returnFields": "ipv4addr,mac",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.fixedAddressRecord"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2640,
              "y": 2316
            }
          },
          "38ba": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Fixed Address Already Exists?",
            "description": "Fixed Address Already Exists?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.result",
                        "operand_1": {
                          "variable": "result",
                          "task": "8b87"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2640,
              "y": 2424
            }
          },
          "9b11": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -2976,
              "y": 2580
            }
          }
        },
        "transitions": {
          "220": {},
          "2088": {},
          "3962": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "38b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "b4b3": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "9b11": {
              "type": "standard",
              "state": "error"
            }
          },
          "38b6": {
            "8b87": {
              "type": "standard",
              "state": "success"
            }
          },
          "8b87": {
            "38ba": {
              "type": "standard",
              "state": "success"
            }
          },
          "38ba": {
            "b4b3": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "9b11": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "fc1d": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "3e61": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "cde7": {},
          "a63c": {},
          "acba": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "macAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "ipAddress", "macAddress"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "macAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "fixedAddressRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.024Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 18,
      "reference": "8043f69c-3f21-42e2-a24d-ad3b18ea51e7",
      "type": "workflow",
      "folder": "/DNS CNAME Record",
      "document": {
        "name": "Create DNS CNAME Record",
        "tasks": {
          "1018": {
            "name": "getObject",
            "canvasName": "getObject",
            "summary": "Get CNAME Record",
            "description": "Get CNAME Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "objectType": "record:cname",
                "queryObject": "$var.5806.merged_object",
                "returnFields": "name,canonical",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.cnameRecord"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2328,
              "y": 336
            }
          },
          "5806": {
            "name": "merge",
            "summary": "Build CNAME Payload",
            "description": "Build CNAME Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "aliasName",
                      "editable": true
                    }
                  },
                  {
                    "key": "canonical",
                    "value": {
                      "task": "job",
                      "variable": "canonicalName",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -2328,
              "y": 216
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -2328,
              "y": 84
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -2328,
              "y": 612
            }
          },
          "e19f": {
            "name": "createCNAMERecord",
            "summary": "Create CNAME Record",
            "description": "Creates a cname record, e.g. 'cnametest.demo' in the zone 'info.com' with a canonical name 'demo'",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "body": "$var.5806.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.cnameRecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "job",
            "scheduled": false,
            "nodeLocation": {
              "x": -2676,
              "y": 456
            }
          },
          "44e4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "CNAME Already Exists?",
            "description": "CNAME Already Exists?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.result",
                        "operand_1": {
                          "variable": "result",
                          "task": "1018"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -2328,
              "y": 444
            }
          },
          "63da": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "View Infoblox Error",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -2676,
              "y": 624
            }
          }
        },
        "transitions": {
          "220": {},
          "1018": {
            "44e4": {
              "type": "standard",
              "state": "success"
            }
          },
          "3962": {},
          "3973": {},
          "5806": {
            "1018": {
              "type": "standard",
              "state": "success"
            }
          },
          "7588": {},
          "7780": {},
          "workflow_start": {
            "5806": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "e19f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "63da": {
              "type": "standard",
              "state": "error"
            }
          },
          "44e4": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "e19f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "63da": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "5da8": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "36e8": {},
          "be54": {},
          "57a1": {},
          "762c": {},
          "38b6": {},
          "426c": {},
          "cde7": {},
          "79ff": {},
          "b02e": {},
          "a1d5": {},
          "ad70": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "aliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "canonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["adapterId", "aliasName", "canonicalName", "dnsView"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "aliasName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "canonicalName": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "cnameRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.025Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 19,
      "reference": "0ce6819c-e755-4be8-9943-ab8c23007daf",
      "type": "workflow",
      "folder": "/DNS A Record",
      "document": {
        "name": "Create DNS A Record",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -3000,
              "y": -4548
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -3000,
              "y": -3972
            }
          },
          "36e8": {
            "name": "merge",
            "summary": "Build A Record Payload",
            "description": "Build A Record Payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "hostname",
                      "editable": true
                    }
                  },
                  {
                    "key": "ipv4addr",
                    "value": {
                      "task": "job",
                      "variable": "ipAddress",
                      "editable": true
                    }
                  },
                  {
                    "key": "view",
                    "value": {
                      "task": "job",
                      "variable": "dnsView",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "canvasName": "merge",
            "nodeLocation": {
              "x": -3000,
              "y": -4400
            }
          },
          "b4ad": {
            "name": "createARecord",
            "summary": "Create DNS A Record",
            "description": "Create DNS A Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "displayName": "Infoblox",
            "type": "automatic",
            "variables": {
              "incoming": {
                "body": "$var.36e8.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdARecord"
              },
              "error": "$var.job.infobloxError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -2688,
              "y": -4152
            }
          },
          "cc69": {
            "name": "getObject",
            "canvasName": "getObject",
            "summary": "Get DNS A Record",
            "description": "Get DNS A Record",
            "location": "Adapter",
            "locationType": "Infoblox",
            "app": "Infoblox",
            "type": "automatic",
            "displayName": "Infoblox",
            "variables": {
              "incoming": {
                "objectType": "record:a",
                "queryObject": "$var.36e8.merged_object",
                "returnFields": "name,ipv4addr",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.aRecord"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -3000,
              "y": -4284
            }
          },
          "6d9d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "DNS A Record Already Exists?",
            "description": "DNS A Record Already Exists?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.result",
                        "operand_1": {
                          "variable": "result",
                          "task": "cc69"
                        },
                        "operator": ">",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -3000,
              "y": -4152
            }
          },
          "00ca": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Infoblox Error",
            "description": "",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Infoblox Error",
                "message": "",
                "body": "$var.job.infobloxError",
                "variables": "",
                "btn_success": "Continue",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": -2688,
              "y": -3996
            }
          }
        },
        "transitions": {
          "220": {},
          "1599": {},
          "3973": {},
          "7588": {},
          "7780": {},
          "workflow_start": {
            "36e8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "36e8": {
            "cc69": {
              "type": "standard",
              "state": "success"
            }
          },
          "b4ad": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "00ca": {
              "type": "standard",
              "state": "error"
            }
          },
          "cc69": {
            "6d9d": {
              "type": "standard",
              "state": "success"
            }
          },
          "6d9d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "b4ad": {
              "type": "standard",
              "state": "failure"
            }
          },
          "00ca": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4cd0": {},
          "f695": {},
          "b11a": {},
          "ea5a": {},
          "bca": {},
          "61c7": {},
          "a5b6": {},
          "e9e0": {},
          "c233": {},
          "24a4": {},
          "9d3e": {},
          "ecf": {},
          "1a0c": {},
          "b6a2": {},
          "d470": {},
          "6ba6": {},
          "168c": {},
          "32da": {},
          "b133": {},
          "86f4": {},
          "7cd2": {},
          "4a91": {},
          "50a1": {},
          "e847": {},
          "4cb": {},
          "c5bd": {},
          "f50e": {},
          "98e0": {},
          "adc5": {},
          "d54a": {},
          "462d": {},
          "333c": {},
          "b03e": {},
          "e50": {},
          "5c83": {},
          "a11c": {},
          "be54": {},
          "73f4": {},
          "57a1": {},
          "762c": {},
          "a005": {},
          "cde7": {},
          "36b9": {},
          "a1d5": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": ["hostname", "ipAddress", "dnsView", "adapterId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "hostname": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "ipAddress": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "dnsView": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "adapterId": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createdARecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "infobloxError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "aRecord": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 22,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T11:00:39.025Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    }
  ],
  "folders": [
    {
      "iid": 0,
      "nodeType": "component"
    },
    {
      "nodeType": "folder",
      "name": "Network",
      "children": [
        {
          "iid": 14,
          "nodeType": "component"
        },
        {
          "iid": 7,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Network Container",
      "children": [
        {
          "iid": 13,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "DNS A Record",
      "children": [
        {
          "iid": 19,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        },
        {
          "iid": 12,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "DNS CNAME Record",
      "children": [
        {
          "iid": 18,
          "nodeType": "component"
        },
        {
          "iid": 4,
          "nodeType": "component"
        },
        {
          "iid": 11,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "DNS Fixed Address Record",
      "children": [
        {
          "iid": 17,
          "nodeType": "component"
        },
        {
          "iid": 3,
          "nodeType": "component"
        },
        {
          "iid": 10,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "DNS NS Record",
      "children": [
        {
          "iid": 16,
          "nodeType": "component"
        },
        {
          "iid": 2,
          "nodeType": "component"
        },
        {
          "iid": 9,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "DNS PTR Record",
      "children": [
        {
          "iid": 15,
          "nodeType": "component"
        },
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-28T18:46:32.736Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T11:00:38.997Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 51,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
