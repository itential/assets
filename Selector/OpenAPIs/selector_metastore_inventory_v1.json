{
  "openapi": "3.0.0",
  "info": {
    "title": "Selector AI Metastore Inventory",
    "description": "Selector Software Metastore Inventory OpenAPI 3.0",
    "contact": {
      "name": "Selector AI",
      "url": "http://www.selector.ai",
      "email": "info@selector.ai"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://demo2.selector.ai/api/inventory-manager/",
      "variables": {}
    }
  ],
  "paths": {
    "/v1/inventory": {
      "get": {
        "tags": [
          "Metastore Inventory Names Download"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Get_all_inventory_v1_inventory_get",
        "description": "The Api returns current metastore inventory names in the form of a json object. \n\nThe response section of the json contains a list of metastore inventory objects which has 2 keys:\n- **type**: The type of the Metastore inventory object\n- **name**: The name of the Metastore inventory object\n",
        "operationId": "Get_all_inventory_v1_inventory_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventory"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Metastore Inventory Name Upload"
        ],
        "summary": "Inventory_creation_v1_inventory_post",
        "description": "Executes a post operation to the API to create a new inventory name in the metasore",
        "operationId": "Inventory_creation_v1_inventory_post",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventorySchemaNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Inventory already exist",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory/{name}": {
      "put": {
        "tags": [
          "Metastore Inventory Name Update"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Inventory_update_v1_inventory__name__put",
        "description": "Executes a put operation to the API to update existing inventory tags in the metasore",
        "operationId": "Inventory_update_v1_inventory__name__put",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the inventory to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Metastore Inventory Name Delete"
        ],
        "summary": "Deleting_Specific_Inventory_v1_inventory__name__delete",
        "description": "Executes a delete operation through the API to delete an inventory in the metasore",
        "operationId": "Deleting_Specific_Inventory_v1_inventory__name__delete",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the inventory to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Metastore Inventory Data Download"
        ],
        "summary": "Inventory_Item_get_v1_inventory__name__get",
        "description": "The Api returns inventory data of the inventory name provided in the API endpoint in the form of a list of jsons. \n\nThe response section of the json contains a list of jsons which map the column name to a value along with an extra key named **ID**. \n\nThe **ID** key is unique for all the elements in the inventory and we need to use this for all **row specific operations**.\n",
        "operationId": "Inventory_Item_get_v1_inventory__name__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Metastore Inventory Data Upload"
        ],
        "summary": "Inventory_Item_creation_v1_inventory__name__post",
        "description": "Executes a post operation through the API to upload a row from an inventory table in the metasore",
        "operationId": "Inventory_Item_creation_v1_inventory__name__post",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDataMessage"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory/{name}/{id}": {
      "get": {
        "tags": [
          "Metastore Inventory Data Download"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Inventory_Item_get_v1_inventory__name___id__get",
        "description": "The Api returns inventory data of the inventory name and ID provided in the API endpoint in the form of a json. \n\nThe response section of the json contains a list of jsons which map the column name to a value along with an extra key named **ID**. \n\nThe **ID** key is unique for all the elements in the inventory and we need to use this for all **row specific operations**.\n",
        "operationId": "Inventory_Item_get_v1_inventory__name___id__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          },
          "404": {
            "description": "Inventory entry not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryEntryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Metastore Inventory Data Edit"
        ],
        "summary": "Inventory_Item_creation_v1_inventory__name___id__put",
        "description": "Executes a put operation through the API to edit a row in the metasore",
        "operationId": "Inventory_Item_creation_v1_inventory__name___id__put",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDataMessage"
                }
              }
            }
          },
          "404": {
            "description": "Inventory entry not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryEntryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Metastore Inventory Data Delete"
        ],
        "summary": "Inventory_Item_deletion_v1_inventory__name___id__delete",
        "description": "Executes a delete operation through the API to delete a row from an inventory table in the metasore",
        "operationId": "Inventory_Item_deletion_v1_inventory__name___id__delete",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDataMessage"
                }
              }
            }
          },
          "404": {
            "description": "Inventory entry not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInventoryEntryNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory/bulk/{name}": {
      "post": {
        "tags": [
          "Metastore Inventory Bulk Data Upload"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Inventory_Item_creation_v1_inventory_bulk__name__post",
        "description": "The bulk upload supports 3 operations:\n- **Merge** : This will merge the data into the exisiting metastore and no items will be deleted. Any overlap will just lead to an overlap and will overwrite that row. This can be enabled by setting the **merge flag** to **true** in the body params of the API call.\n- **Overwrite** : This will overwrite the entire metastore entries. If the **merge flag** is set to **false** the data upload will replace the entire metastore by delteing the old entires and adding only the new entries. \n- **Delete** : This will delete all the entires. If the data is **empty** array, all the entires in inventory will be deleted. \n",
        "operationId": "Inventory_Item_creation_v1_inventory_bulk__name__post",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "description": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory/csv/{name}": {
      "post": {
        "tags": [
          "Metastore Inventory CSV Data Upload"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Inventory_Item_creation_v1_inventory_csv__name__post",
        "description": "The bulk upload supports 2 operations:\n- **Merge** : This will merge the data into the exisiting metastore and no items will be deleted. Any overlap will just lead to an overlap and will overwrite that row. This can be enabled by setting the **merge flag** to **true** in the body params of the API call.\n- **Overwrite** : This will overwrite the entire metastore entries. If the **merge flag** is set to **false** the data upload will replace the entire metastore by delteing the old entires and adding only the new entries. \n",
        "operationId": "Inventory_Item_creation_v1_inventory_csv__name__post",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-items": {
      "get": {
        "tags": [
          "Metastore Inventory Items"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Inventory_Item_get_v1_inventory_items_get",
        "description": "Executes a get operation through the API to get all inventory data of same type",
        "operationId": "Inventory_Item_get_v1_inventory_items_get",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-schema": {
      "get": {
        "tags": [
          "Metastore Inventory Schema Get"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Get_all_inventory_v1_inventory_schema_get",
        "description": "Executes a get operation though the API to get all inventory schemas",
        "operationId": "Get_all_inventory_v1_inventory_schema_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSchemaModle"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Inventory schema creation"
        ],
        "summary": "Post_inventory_v1_inventory_schema",
        "description": "Executes a psot operation though the API to post inventory schemas",
        "operationId": "Post_inventory_v1_inventory_schema",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The YAML file to be uploaded",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "inventory schema added",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaAdded"
                }
              }
            }
          },
          "409": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Inventory schema update"
        ],
        "summary": "Put_inventory_v1_inventory_schema",
        "description": "Executes a put operation though the API to update inventory schemas",
        "operationId": "Put_inventory_v1_inventory_schema",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The YAML file to be uploaded",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaUpdated"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaDoesNotExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Inventory Schema Delete"
        ],
        "summary": "Process inventory schema delete",
        "description": "Executes a delete operation though the API to delete all inventory schemas",
        "operationId": "Processinventoryschemadelete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-schema/{type}": {
      "delete": {
        "tags": [
          "Inventory Schema Delete Type"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Process inventory schema delete",
        "description": "Executes a delete operation though the API to delete specific inventory schemas",
        "operationId": "DeleteProcessinventoryschemadelete",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/inventory-schema": {
      "get": {
        "tags": [
          "Metastore V2 Inventory Schema Get"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Gets All Inventory schema",
        "description": "Executes a get operation though the API to get all inventory schemas",
        "operationId": "GetsAllInventoryschema",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventorySchemaRequest"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Inventory V2 Schema Upload"
        ],
        "summary": "Process inventory schema JSON input",
        "description": "Executes a post operation though the API to post inventory schemas",
        "operationId": "ProcessinventoryschemaJSONinput",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySchemaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Inventory schema created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponse"
                }
              }
            }
          },
          "409": {
            "description": "Inventory schema exist",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Inventory V2 Schema Delete All"
        ],
        "summary": "Process inventory schema delete",
        "description": "Executes a delete operation though the API to delete all inventory schemas",
        "operationId": "DeleteProcessinventoryschemadelete1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/inventory-schema/{type}": {
      "put": {
        "tags": [
          "Inventory V2 Schema Update"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Process inventory schema JSON input",
        "description": "Executes a put operation though the API to post inventory schemas",
        "operationId": "PutProcessinventoryschemaJSONinput",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySchemaPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Inventory schema updated",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Inventory V2 Schema Delete Type"
        ],
        "summary": "Process inventory schema delete",
        "description": "Executes a delete operation though the API to delete specific inventory schemas",
        "operationId": "DeleteProcessinventoryschemadelete2",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-schema-files/import": {
      "post": {
        "tags": [
          "Inventory Schema File Upload"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Porcess upload JSON file",
        "description": "Executes a post operation though the API to upload inventory schema file",
        "operationId": "PorcessuploadJSONfile",
        "parameters": [
          {
            "name": "encodeType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Typeofencodejsoncsv"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Inventory schema created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponseString"
                }
              }
            }
          },
          "409": {
            "description": "Inventory schema exist",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-schema-files/export": {
      "post": {
        "tags": [
          "Inventory Schema File Download"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "Download inventory schema JSON file",
        "description": "Executes a post operation though the API to download inventory schema file",
        "operationId": "DownloadinventoryschemaJSONfile",
        "parameters": [
          {
            "name": "encodeType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Typeofencodejsoncsv"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySchemaListExport"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful response returning a JSON file",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventorySchemaRequest"
                  },
                  "description": ""
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Inventory schema exist",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSchemaDoesNotExist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-files/import": {
      "post": {
        "tags": [
          "Metastore Inventory files import"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "handle_inventory_files_post_inventory_files_import_post",
        "description": "Executes a post operation through the API to import inventories zip file",
        "operationId": "handle_inventory_files_post_inventory_files_import_post",
        "parameters": [
          {
            "name": "encodeType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "None"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "zip_file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadFileRequestError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-files/export": {
      "post": {
        "tags": [
          "Metastore Inventory files export"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "handle_inventory_files_get_inventory_files_export_post",
        "description": "Executes a post operation through the API to export inventories zip file",
        "operationId": "handle_inventory_files_get_inventory_files_export_post",
        "parameters": [
          {
            "name": "encodeType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1InventoryFilesExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "zip file attachment",
            "headers": {
              "Content-Disposition": {
                "description": "Attachment information",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Attachment information"
                    }
                  }
                }
              }
            },
            "content": {
              "application/zip": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadFileRequestError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/inventory-file/csv/{name}": {
      "get": {
        "tags": [
          "Metastore Inventory csv file export"
        ],
        "security": [{"bearerAuth": []}],
        "summary": "handle_inventory_csv_file_get",
        "description": "",
        "operationId": "handle_inventory_csv_file_get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the inventory item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV file attachment",
            "headers": {
              "Content-Disposition": {
                "description": "Attachment information",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Attachment information"
                    }
                  }
                }
              }
            },
            "content": {
              "application/csv": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadFileRequestError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/": {
      "get": {
        "summary": "home_page__get",
        "description": "",
        "operationId": "home_page__get",
        "parameters": [],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/opstats": {
      "get": {
        "summary": "opstats_opstats_get",
        "description": "Rest endpoint /opstats\nReturns service opstats",
        "operationId": "opstats_opstats_get",
        "parameters": [],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/version": {
      "get": {
        "summary": "version_version_get",
        "description": "Rest endpoint /version\nReturns version info",
        "operationId": "version_version_get",
        "parameters": [],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/config": {
      "get": {
        "summary": "config_config_get",
        "description": "Rest endpoint /config",
        "operationId": "config_config_get",
        "parameters": [],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/health": {
      "get": {
        "summary": "health_health_get",
        "description": "Rest endpoint for /health\n\nHealth status for the service",
        "operationId": "health_health_get",
        "parameters": [],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/logs": {
      "get": {
        "summary": "health_logs_get",
        "description": "Rest endpoint /logs",
        "operationId": "health_logs_get",
        "parameters": [],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
        "securitySchemes": {
        "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
        }
    },
    "schemas": {
      "Body_Inventory_Item_creation_v1_inventory_csv__name__post": {
        "title": "Body_Inventory_Item_creation_v1_inventory_csv__name__post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "description": ""
          }
        }
      },
      "InventoryItemCreate": {
        "title": "InventoryItemCreate",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "ResponseInventory": {
        "title": "ResponseInventory",
        "required": [
          "message",
          "response"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInventoryField"
            },
            "description": ""
          }
        }
      },
      "ResponseInventoryField": {
        "title": "ResponseInventoryField",
        "required": [
          "name",
          "type",
          "nosql",
          "numEntries"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "nosql": {
            "type": "string"
          },
          "numEntries": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "ResponseMessage": {
        "title": "ResponseMessage",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseSchemaField": {
        "title": "ResponseSchemaField",
        "required": [
          "Name",
          "Source"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Source": {
            "type": "string"
          }
        }
      },
      "ResponseSchemaInventory": {
        "title": "ResponseSchemaInventory",
        "required": [
          "Type",
          "Keys",
          "Fields"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "Keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseSchemaField"
            },
            "description": ""
          }
        }
      },
      "ResponseSchemaModle": {
        "title": "ResponseSchemaModle",
        "required": [
          "Inventory"
        ],
        "type": "object",
        "properties": {
          "Inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseSchemaInventory"
            },
            "description": ""
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "msg": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "UploadInventoryExist": {
        "title": "UploadInventoryExist",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "Inventory <inventory-name> already exists"
          }
        }
      },
      "UploadInventorySchemaNotFound": {
        "title": "UploadInventorySchemaNotFound",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "Schema get failed"
          }
        }
      },
      "UploadInventoryNotFound": {
        "title": "UploadInventoryNotFound",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "Table does not exist"
          }
        }
      },
      "UploadInventoryEntryNotFound": {
        "title": "UploadInventoryEntryNotFound",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "Inventory entry does not exist"
          }
        }
      },
      "UploadSchemaExist": {
        "title": "UploadSchemaExist",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "inventory schema exist"
          }
        }
      },
      "UploadSchemaDoesNotExist": {
        "title": "UploadSchemaDoesNotExist",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "inventory schema does not exist"
          }
        }
      },
      "UploadSchemaAdded": {
        "title": "UploadSchemaAdded",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "inventory schema added"
          }
        }
      },
      "UploadSchemaUpdated": {
        "title": "UploadSchemaUpdated",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "inventory schema updated"
          }
        }
      },
      "UploadSchemaDeleted": {
        "title": "UploadSchemaDeleted",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "inventory schema deleted"
          }
        }
      },
      "BadRequestError": {
        "title": "BadRequestError",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "Invalid Parameters"
          }
        }
      },
      "BadFileRequestError": {
        "title": "BadFileRequestError",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "default": "Could not process zip files, inserted []"
          }
        }
      },
      "ResponseDataMessage": {
        "title": "ResponseDataMessage",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "response": {
            "type": "object"
          }
        }
      },
      "InventorySchemaPutRequest": {
        "title": "InventorySchemaPutRequest",
        "required": [
          "fields",
          "keys"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldItem"
            },
            "description": ""
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "retention_in_days": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InventorySchemaRequest": {
        "title": "InventorySchemaRequest",
        "required": [
          "type",
          "fields",
          "keys"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "fields": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldItem"
            },
            "description": ""
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "retention_in_days": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FieldItem": {
        "title": "FieldItem",
        "required": [
          "name",
          "source"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "InventoryResponse": {
        "title": "InventoryResponse",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/InventorySchemaRequest"
          }
        }
      },
      "InventoryResponseString": {
        "title": "InventoryResponseString",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "InventorySchemaListExport": {
        "title": "InventorySchemaListExport",
        "type": "object",
        "properties": {
          "inventory": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "Typeofencodejsoncsv": {
        "title": "Typeofencodejsoncsv",
        "enum": [
          "json"
        ],
        "type": "string"
      },
      "V1InventoryFilesExportRequest": {
        "title": "V1InventoryFilesExportRequest",
        "type": "object",
        "properties": {
          "inventoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Metastore Inventory Names Download",
      "description": "Selector Software Metastore Inventory Names Download"
    },
    {
      "name": "Metastore Inventory Name Upload",
      "description": "Selector Software Metastore Inventory Name Upload"
    },
    {
      "name": "Metastore Inventory Name Update",
      "description": "Selector Software Metastore Inventory Name Update"
    },
    {
      "name": "Metastore Inventory Name Delete",
      "description": "Selector Software Metastore Inventory Name Delete"
    },
    {
      "name": "Metastore Inventory Data Download",
      "description": "Selector Software Metastore Inventory Data Download"
    },
    {
      "name": "Metastore Inventory Data Upload",
      "description": "Selector Software Metastore Inventory Data Upload"
    },
    {
      "name": "Metastore Inventory Data Edit",
      "description": "Selector Software Metastore Inventory Data Edit"
    },
    {
      "name": "Metastore Inventory Data Delete",
      "description": "Selector Software Metastore Inventory Data Delete"
    },
    {
      "name": "Metastore Inventory Bulk Data Upload",
      "description": "Selector Software Metastore Inventory Bulk Data Upload"
    },
    {
      "name": "Metastore Inventory CSV Data Upload",
      "description": "Selector Software Metastore Inventory CSV Data Upload"
    },
    {
      "name": "Metastore Inventory Schema",
      "description": "Selector Software Metastore Inventory Schema Get"
    },
    {
      "name": "Metastore Inventory Items",
      "description": "Selector Software Metastore Inventory Items Get"
    },
    {
      "name": "Metastore Inventory Schema Get",
      "description": ""
    },
    {
      "name": "Inventory schema creation",
      "description": ""
    },
    {
      "name": "Inventory schema update",
      "description": ""
    },
    {
      "name": "Inventory Schema Delete",
      "description": ""
    },
    {
      "name": "Inventory Schema Delete Type",
      "description": ""
    },
    {
      "name": "Metastore V2 Inventory Schema Get",
      "description": ""
    },
    {
      "name": "Inventory V2 Schema Upload",
      "description": ""
    },
    {
      "name": "Inventory V2 Schema Delete All",
      "description": ""
    },
    {
      "name": "Inventory V2 Schema Update",
      "description": ""
    },
    {
      "name": "Inventory V2 Schema Delete Type",
      "description": ""
    },
    {
      "name": "Inventory Schema File Upload",
      "description": ""
    },
    {
      "name": "Inventory Schema File Download",
      "description": ""
    },
    {
      "name": "Metastore Inventory files import",
      "description": ""
    },
    {
      "name": "Metastore Inventory files export",
      "description": ""
    },
    {
      "name": "Metastore Inventory csv file export",
      "description": ""
    }
  ]
}