{
  "_id": "66d0ccea21161b4df27174c0",
  "name": "Cisco ASA",
  "description": "Cisco ASA project includes assets for Software Upgrade, ACL rules and Command Template runner",
  "components": [
    {
      "iid": 0,
      "reference": "196b5195-8bdb-4a7e-80ca-421ca067d842",
      "type": "workflow",
      "folder": "/Command Template Runner",
      "document": {
        "name": "Command Template Runner",
        "tasks": {
          "525": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 96,
              "y": 456
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 648,
              "y": 288
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 684,
              "y": 1440
            }
          },
          "8ce4": {
            "name": "RunCommandTemplate",
            "canvasName": "RunCommandTemplate",
            "summary": "Run Command Template against Device",
            "description": "Run a Command Template against a device",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "template": "$var.job.templateName",
                "variables": "$var.job.templateVariables",
                "devices": "$var.job.devices"
              },
              "outgoing": {
                "mop_template_results": "$var.job.templateResults"
              },
              "error": "$var.job.templateError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 648,
              "y": 444
            }
          },
          "81d8": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 84,
              "y": 1428
            }
          },
          "f1a7": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Template Error",
            "description": "Show the template failure message and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Template Errored",
                "message": "$var.a7f3.errorMessage",
                "body": "$var.8ce4.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Continue"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1416,
              "y": 1440
            }
          },
          "543a": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Errored and If Reattempting",
            "description": "Check if template errored and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 984,
              "y": 456
            }
          },
          "849c": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Reattempt Template",
            "description": "Reattempt the template after waiting the specified number of minutes",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "connection",
                "minutes": "$var.job.reattemptWaitTime",
                "attempts": "$var.job.reattemptQuantity"
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 648,
              "y": 828
            }
          },
          "f884": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Reattempting",
            "description": "Check if template failed and if reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 648,
              "y": 660
            }
          },
          "b1a0": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Passed and If Suppressing Success Message",
            "description": "Check if template passed and if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      },
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": 672
            }
          },
          "fe84": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 348,
              "y": 1260
            }
          },
          "6bd2": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Template Failed and If Not Reattempting",
            "description": "Check if template failed and if not reattempting template",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "result",
                        "operand_1": {
                          "variable": "mop_template_results",
                          "task": "8ce4"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      },
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "reattempt",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 360,
              "y": 576
            }
          },
          "9c18": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1440,
              "y": 444
            }
          },
          "955f": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressFailureMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1032,
              "y": 900
            }
          },
          "f36c": {
            "name": "viewTemplateResults",
            "canvasName": "viewTemplateResults",
            "summary": "View Command Template Results",
            "description": "View the results of the command template",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "mop_template_results": "$var.8ce4.mop_template_results"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/viewTemplateResults",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 492,
              "y": 1140
            }
          },
          "a7f3": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Command Template Runner Error Message",
            "description": "Create Command Template Runner error message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6553e5b9fb4afe017442d30c",
                "variableMap": {
                  "templateName": "$var.job.templateName"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "errorMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1428,
              "y": 1128
            }
          },
          "580e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Template Errored",
            "description": "Check if template errored",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "8ce4",
                          "variable": "error"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": null
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1032,
              "y": 1128
            }
          }
        },
        "transitions": {
          "525": {
            "81d8": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "8ce4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "8ce4": {
            "525": {
              "type": "standard",
              "state": "success"
            },
            "543a": {
              "type": "standard",
              "state": "error"
            },
            "f884": {
              "type": "standard",
              "state": "success"
            },
            "b1a0": {
              "type": "standard",
              "state": "success"
            },
            "6bd2": {
              "type": "standard",
              "state": "success"
            }
          },
          "81d8": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f1a7": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "8ce4": {
              "type": "revert",
              "state": "success"
            }
          },
          "543a": {
            "849c": {
              "type": "standard",
              "state": "success"
            },
            "9c18": {
              "type": "standard",
              "state": "failure"
            }
          },
          "849c": {
            "8ce4": {
              "type": "revert",
              "state": "success"
            },
            "955f": {
              "state": "error",
              "type": "standard"
            }
          },
          "f884": {
            "849c": {
              "type": "standard",
              "state": "success"
            }
          },
          "b1a0": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe84": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "81d8": {
              "type": "standard",
              "state": "failure"
            }
          },
          "6bd2": {
            "fe84": {
              "state": "success",
              "type": "standard"
            }
          },
          "9c18": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "a7f3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "955f": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            },
            "580e": {
              "state": "failure",
              "type": "standard"
            }
          },
          "f36c": {
            "8ce4": {
              "type": "revert",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "a7f3": {
            "f1a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "580e": {
            "f36c": {
              "state": "failure",
              "type": "standard"
            },
            "a7f3": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["Device 2", "Device 1"]
              }
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": ["test"]
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          },
          "required": [
            "suppressSuccessMessage",
            "templateName",
            "templateVariables",
            "devices",
            "reattempt",
            "_id",
            "reattemptWaitTime",
            "reattemptQuantity",
            "suppressFailureMessage"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "title": "template",
              "type": "string",
              "examples": ["show version"]
            },
            "templateVariables": {
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "device_name": "my-device1"
                }
              ]
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["Device 2", "Device 1"]
              }
            },
            "reattempt": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "reattemptWaitTime": {
              "title": "minutes",
              "type": "integer",
              "examples": [1]
            },
            "reattemptQuantity": {
              "title": "attempts",
              "type": "integer",
              "examples": [2]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "initiator": {
              "type": "string"
            },
            "templateResults": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "all_pass_flag": {
                  "type": "boolean"
                },
                "evaluated": {
                  "type": "string",
                  "examples": ["show version"]
                },
                "parameters": {
                  "type": "object",
                  "properties": {}
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rule": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "eval": {
                        "type": "string",
                        "examples": ["contains"]
                      },
                      "raw": {
                        "type": "string",
                        "examples": ["show version"]
                      },
                      "result": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "device": {
                  "type": "string",
                  "examples": ["device1"]
                },
                "response": {
                  "type": "string",
                  "examples": ["version: 10.0.0"]
                },
                "result": {
                  "type": "boolean"
                }
              }
            },
            "templateError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.30.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated": "2025-01-24T10:44:41.687Z",
        "created": "2023-11-15T15:14:12.334Z",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 1,
      "reference": "abd70f87-e9aa-4619-8d8c-62b1fae4d08e",
      "type": "workflow",
      "folder": "/Software Upgrade",
      "document": {
        "name": "Push Configuration to Device",
        "tasks": {
          "9722": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 420,
              "y": 1260
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 552
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 1584
            }
          },
          "ca47": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "Ansible Role itential_cli",
            "description": "Ansible Role itential_cli",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.582e.deviceList",
                "_groups": "",
                "command": "$var.582e.configurationList"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 120,
              "y": 1140
            }
          },
          "b9ed": {
            "name": "renderJinjaTemplate",
            "canvasName": "renderJinjaTemplate",
            "summary": "Render Device Configuration",
            "description": "Render Device Configuration",
            "location": "Application",
            "locationType": null,
            "app": "TemplateBuilder",
            "type": "automatic",
            "displayName": "TemplateBuilder",
            "variables": {
              "incoming": {
                "name": "$var.job.templateName",
                "context": "$var.job.templateVariables"
              },
              "outgoing": {
                "renderedTemplate": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 120,
              "y": 780
            }
          },
          "7a4c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Error",
            "description": "Show configuration error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Configuration Error",
                "message": "$var.582e.deviceConfigurationPushFailedMessage",
                "body": "$var.ca47.stdout",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 732,
              "y": 1260
            }
          },
          "f14d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Provision Succeeded",
            "description": "Check if provisioning configuration to device succeeded",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "ca47",
                          "variable": "stdout"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": []
                        },
                        "operator": "!=",
                        "query": "completed",
                        "rightQuery": ""
                      },
                      {
                        "query": "completed[0].response[*].status",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "ca47"
                        },
                        "operator": "!contains",
                        "operand_2": {
                          "variable": "FAILURE",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 1260
            }
          },
          "cba5": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Configuration",
            "description": "Show the proposed configuration and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Configuration",
                "message": "$var.582e.deviceConfigurationPushMessage",
                "body": "$var.582e.renderedTemplate",
                "variables": {},
                "btn_success": "Provision",
                "btn_failure": "End Job"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 924,
              "y": 1008
            }
          },
          "c4c9": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Success Message",
            "description": "Check if suppressing success message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressSuccessMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 1020
            }
          },
          "da74": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Suppressing Failure Message",
            "description": "Check if suppressing failure message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "suppressFailureMessage",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": -204,
              "y": 780
            }
          },
          "9a05": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Jinja Template Error",
            "description": "Show configuration error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Jinja Template Error",
                "message": "The Jinja template had an error, retry or abort?",
                "body": "$var.b9ed.error",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Abort"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -540,
              "y": 780
            }
          },
          "61a7": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -192,
              "y": 1308
            }
          },
          "98a4": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 420,
              "y": 1368
            }
          },
          "582e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Push Configuration Data",
            "description": "Process push configuration data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "65566996fb4afe017442d30d",
                "variableMap": {
                  "renderedJinja2Template": "$var.b9ed.renderedTemplate",
                  "deviceName": "$var.job.device"
                },
                "options": ""
              },
              "outgoing": {
                "renderedTemplate": "$var.job.configurationToPush",
                "configurationList": null,
                "deviceList": null,
                "deviceConfigurationPushMessage": null,
                "deviceConfigurationPushFailedMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 900
            }
          },
          "ef0a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "SUCCESS"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 1392
            }
          },
          "f0d6": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Initialize Result of Push Configuration",
            "description": "Initialize result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "IN PROGRESS"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 120,
              "y": 660
            }
          },
          "3a05": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "FAILED"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 420,
              "y": 1476
            }
          },
          "08e4": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Update Result of Push Configuration",
            "description": "Update result of push configuration",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "pushConfigurationResult",
                "value": "FAILED"
              },
              "outgoing": {
                "value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 936,
              "y": 1464
            }
          }
        },
        "transitions": {
          "9722": {
            "7a4c": {
              "type": "standard",
              "state": "failure"
            },
            "98a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "f0d6": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "ca47": {
            "9722": {
              "type": "standard",
              "state": "error"
            },
            "f14d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b9ed": {
            "da74": {
              "type": "standard",
              "state": "error"
            },
            "582e": {
              "state": "success",
              "type": "standard"
            }
          },
          "7a4c": {
            "b9ed": {
              "type": "revert",
              "state": "success"
            },
            "98a4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f14d": {
            "9722": {
              "type": "standard",
              "state": "failure"
            },
            "ef0a": {
              "state": "success",
              "type": "standard"
            }
          },
          "cba5": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "08e4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c4c9": {
            "ca47": {
              "type": "standard",
              "state": "success"
            },
            "cba5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "da74": {
            "9a05": {
              "type": "standard",
              "state": "failure"
            },
            "61a7": {
              "state": "success",
              "type": "standard"
            }
          },
          "9a05": {
            "b9ed": {
              "state": "success",
              "type": "revert"
            },
            "61a7": {
              "type": "standard",
              "state": "failure"
            }
          },
          "61a7": {
            "98a4": {
              "state": "success",
              "type": "standard"
            }
          },
          "98a4": {
            "3a05": {
              "state": "success",
              "type": "standard"
            }
          },
          "582e": {
            "c4c9": {
              "state": "success",
              "type": "standard"
            }
          },
          "ef0a": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "f0d6": {
            "b9ed": {
              "state": "success",
              "type": "standard"
            }
          },
          "3a05": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "08e4": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "ed0d": {},
          "7a2f": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": "string",
              "examples": ["device"]
            }
          },
          "required": [
            "suppressFailureMessage",
            "templateName",
            "templateVariables",
            "suppressSuccessMessage",
            "device"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "templateName": {
              "type": "string",
              "examples": [
                "Template name 1",
                "Template name 2",
                "Template name 3"
              ]
            },
            "templateVariables": {
              "type": "object",
              "examples": [
                {
                  "name": "John",
                  "DOB": "2000/1/1"
                }
              ]
            },
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "device": {
              "type": "string",
              "examples": ["device"]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "configurationToPush": {
              "$id": "renderedTemplate",
              "type": "string",
              "examples": ["test"]
            },
            "pushConfigurationResult": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.28.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:44:41.687Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 2,
      "reference": "e95356de-c315-4880-9387-390a31ea64f8",
      "type": "workflow",
      "folder": "/Software Upgrade",
      "document": {
        "name": "Software Upgrade",
        "tasks": {
          "2113": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Verify After Reload",
            "description": "Child job Command Runner to verify after reload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0ccea21161b4df27174c0: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0ccea21161b4df27174c0: Show Version"
                  },
                  "templateVariables": {
                    "task": "ed1e",
                    "value": "templateVars"
                  },
                  "devices": {
                    "task": "ed1e",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": true
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 20
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -288,
              "y": 936
            }
          },
          "2457": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Pre-Checks",
            "description": "Child job Command Runner for pre-checks",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0ccea21161b4df27174c0: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0ccea21161b4df27174c0: Software Upgrade Checks"
                  },
                  "templateVariables": {
                    "task": "ed1e",
                    "value": "templateVars"
                  },
                  "devices": {
                    "task": "ed1e",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -288,
              "y": 576
            }
          },
          "4644": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Set Boot Marker",
            "description": "Child job Configuration Change to set boot marker",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0ccea21161b4df27174c0: Push Configuration to Device",
                "variables": {
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0ccea21161b4df27174c0: Set Boot Marker"
                  },
                  "templateVariables": {
                    "task": "ed1e",
                    "value": "templateVars"
                  },
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "device": {
                    "task": "ed1e",
                    "value": "deviceArray"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -288,
              "y": 696
            }
          },
          "5380": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Reload",
            "description": "Child job Command Runner to reload device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0ccea21161b4df27174c0: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0ccea21161b4df27174c0: Reload"
                  },
                  "templateVariables": {
                    "task": "ed1e",
                    "value": "templateVars"
                  },
                  "devices": {
                    "task": "ed1e",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -288,
              "y": 816
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -288,
              "y": 240
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -264,
              "y": 1584
            }
          },
          "d597": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "File Verification",
            "description": "Child job Command Runner for file verification",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0ccea21161b4df27174c0: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0ccea21161b4df27174c0: File Verification"
                  },
                  "templateVariables": {
                    "task": "ed1e",
                    "value": "templateVars"
                  },
                  "devices": {
                    "task": "ed1e",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -288,
              "y": 456
            }
          },
          "94f6": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Post-Checks",
            "description": "Child job Command Runner to perform post-checks",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "@66d0ccea21161b4df27174c0: Command Template Runner",
                "variables": {
                  "suppressSuccessMessage": {
                    "task": "job",
                    "value": "suppressSuccessMessage"
                  },
                  "templateName": {
                    "task": "static",
                    "value": "@66d0ccea21161b4df27174c0: Software Upgrade Checks"
                  },
                  "templateVariables": {
                    "task": "ed1e",
                    "value": "templateVars"
                  },
                  "devices": {
                    "task": "ed1e",
                    "value": "deviceArray"
                  },
                  "reattempt": {
                    "task": "static",
                    "value": false
                  },
                  "reattemptWaitTime": {
                    "task": "static",
                    "value": 1
                  },
                  "reattemptQuantity": {
                    "task": "static",
                    "value": 1
                  },
                  "suppressFailureMessage": {
                    "task": "job",
                    "value": "suppressFailureMessage"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "nodeLocation": {
              "x": -288,
              "y": 1044
            }
          },
          "ee0b": {
            "name": "runTemplatesDiff",
            "canvasName": "runTemplatesDiff",
            "summary": "Pre Post Compare",
            "description": "Diff pre and post check",
            "location": "Application",
            "app": "MOP",
            "displayName": "MOP",
            "type": "manual",
            "variables": {
              "incoming": {
                "pre": "$var.e0b7.return_data",
                "post": "$var.31b1.return_data"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/mop/task/runTemplatesDiff",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -444,
              "y": 1416
            }
          },
          "ed1e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Input Variables",
            "description": "Process ASA Software Upgrade Job Variables",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "62a1edfe7b7b56017266d46b",
                "variableMap": {
                  "deviceName": "$var.job.deviceName",
                  "targetVersion": "$var.job.targetVersion",
                  "disk": "$var.job.disk",
                  "currentVersion": "$var.job.currentVersion"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "templateVars": null,
                "device": null,
                "deviceArray": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Process ASA Software Upgrade Job Variables",
            "retrySettings": null,
            "nodeLocation": {
              "x": -288,
              "y": 348
            }
          },
          "e0b7": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Pre-Check",
            "description": "Query Pre-Check",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.2457.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -108,
              "y": 1164
            }
          },
          "31b1": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Post-Check",
            "description": "Query Post-Check",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templateResults",
                "obj": "$var.94f6.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -456,
              "y": 1164
            }
          },
          "e14c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Suppress Success",
            "description": "Verify Suppress Success",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "suppressSuccessMessage"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": false
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -276,
              "y": 1296
            }
          }
        },
        "transitions": {
          "2113": {
            "94f6": {
              "type": "standard",
              "state": "success"
            }
          },
          "2457": {
            "4644": {
              "type": "standard",
              "state": "success"
            }
          },
          "4644": {
            "5380": {
              "type": "standard",
              "state": "success"
            }
          },
          "5380": {
            "2113": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "ed1e": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "d597": {
            "2457": {
              "type": "standard",
              "state": "success"
            }
          },
          "94f6": {
            "e0b7": {
              "type": "standard",
              "state": "success"
            },
            "31b1": {
              "type": "standard",
              "state": "success"
            }
          },
          "ee0b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "ed1e": {
            "d597": {
              "type": "standard",
              "state": "success"
            }
          },
          "e0b7": {
            "e14c": {
              "state": "success",
              "type": "standard"
            }
          },
          "31b1": {
            "e14c": {
              "state": "success",
              "type": "standard"
            }
          },
          "e14c": {
            "ee0b": {
              "state": "success",
              "type": "standard"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "eb55": {},
          "f92": {},
          "90d3": {},
          "5fa1": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": "string"
            },
            "targetVersion": {
              "type": "string"
            },
            "disk": {
              "type": "string"
            },
            "currentVersion": {
              "type": "string"
            }
          },
          "required": [
            "suppressSuccessMessage",
            "suppressFailureMessage",
            "deviceName",
            "targetVersion",
            "disk",
            "currentVersion"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "suppressSuccessMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "suppressFailureMessage": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            },
            "deviceName": {
              "type": "string"
            },
            "targetVersion": {
              "type": "string"
            },
            "disk": {
              "type": "string"
            },
            "currentVersion": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.72.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:44:41.688Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 3,
      "reference": "33bacad0-4a2f-405f-8625-754a5a9480e6",
      "type": "workflow",
      "folder": "/ACL Rules/Delete ACL Rule",
      "document": {
        "name": "Delete ACL Rule",
        "tasks": {
          "328": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify No Errors",
            "description": "Verify No Errors",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "errorFound",
                          "task": "89d7"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1032,
              "y": 972
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 1032,
              "y": 420
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 1032,
              "y": 1164
            }
          },
          "aaac": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build ACL Rule Delete Data",
            "description": "Build ACL Rule Delete Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "626a7ddb4ed12301aa080f2d",
                "variableMap": {
                  "aclIdentifier": "$var.job.aclIdentifier",
                  "deviceName": "$var.job.deviceName"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "aclRuleCmdArray": null,
                "deviceArray": null,
                "aclRuleCmd": null
              }
            },
            "groups": [],
            "task_name": "Build ACL Rule Delete Data",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1032,
              "y": 516
            }
          },
          "56a0": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "Delete ACL Rule on Device",
            "description": "Delete ACL Rule on Device",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.aaac.deviceArray",
                "_groups": "",
                "command": "$var.aaac.aclRuleCmdArray"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "$var.job.asaError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1032,
              "y": 624
            }
          },
          "a84c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify Device Found",
            "description": "Verify Device Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "56a0"
                        },
                        "operator": "!contains",
                        "operand_2": {
                          "variable": "Not all devices available",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 1032,
              "y": 732
            }
          },
          "97c2": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Error Occurred",
            "description": "Error Occurred",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Occurred",
                "message": "",
                "body": "$var.89d7.errorMessage",
                "variables": {},
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1380,
              "y": 972
            }
          },
          "89d7": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Evaluate ACL Rule Result",
            "description": "Evaluate ACL rule results",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6234ddfb1678ea01c7fbcd3d",
                "variableMap": {
                  "commandResult": "$var.56a0.stdout"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "errorMessage": null,
                "errorFound": null
              }
            },
            "groups": [],
            "task_name": "Evaluate ACL Rule Result",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1032,
              "y": 852
            }
          },
          "3e2e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Device Not Found",
            "description": "Device Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Device Not Found",
                "message": "Device not found.  Please check device name and try again.",
                "body": "",
                "variables": {},
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 672,
              "y": 732
            }
          }
        },
        "transitions": {
          "328": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "97c2": {
              "type": "standard",
              "state": "failure"
            }
          },
          "workflow_start": {
            "aaac": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "aaac": {
            "56a0": {
              "type": "standard",
              "state": "success"
            }
          },
          "56a0": {
            "a84c": {
              "type": "standard",
              "state": "success"
            }
          },
          "a84c": {
            "89d7": {
              "type": "standard",
              "state": "success"
            },
            "3e2e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "97c2": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "89d7": {
            "328": {
              "type": "standard",
              "state": "success"
            }
          },
          "3e2e": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "7feb": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "aclIdentifier": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            }
          },
          "required": ["aclIdentifier", "deviceName"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "aclIdentifier": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "asaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "createdVersion": "5.40.5-2021.1.72.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:44:41.688Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 4,
      "reference": "4dc914c3-5391-4efe-afba-e50abe5e6ae3",
      "type": "workflow",
      "folder": "/ACL Rules/Add ACL Rule",
      "document": {
        "name": "Add ACL Rule",
        "tasks": {
          "328": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Verify No Errors",
            "description": "Verify No Errors occurred",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "errorFound",
                          "task": "89d7"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": 936
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": 408
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": 1092
            }
          },
          "aaac": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build ACL Rule Add Data",
            "description": "Build ACL Rule Add Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6234c9881678ea01c7fbcd3c",
                "variableMap": {
                  "aclIdentifier": "$var.job.aclIdentifier",
                  "aclRuleLineNumber": "$var.job.aclRuleLineNumber",
                  "aclRuleAction": "$var.job.aclRuleAction",
                  "aclRuleSource": "$var.job.aclRuleSource",
                  "aclRuleSourceNetmask": "$var.job.aclRuleSourceNetmask",
                  "aclRuleDestination": "$var.job.aclRuleDestination",
                  "aclRuleDestinationNetmask": "$var.job.aclRuleDestinationNetmask",
                  "deviceName": "$var.job.deviceName",
                  "protocol": "$var.job.protocol"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "aclRuleCmdArray": null,
                "deviceArray": null,
                "aclRuleCmd": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Build ACL Rule Command",
            "retrySettings": null,
            "nodeLocation": {
              "x": 960,
              "y": 516
            }
          },
          "56a0": {
            "name": "itential_cli",
            "canvasName": "itential_cli",
            "summary": "Add ACL Rule to Device",
            "description": "Add ACL Rule to Device",
            "location": "Application",
            "locationType": null,
            "app": "AGManager",
            "type": "automatic",
            "displayName": "AG Manager",
            "variables": {
              "incoming": {
                "_hosts": "$var.aaac.deviceArray",
                "_groups": "",
                "command": "$var.aaac.aclRuleCmdArray"
              },
              "outgoing": {
                "stdout": null
              },
              "error": "$var.job.asaError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 960,
              "y": 624
            }
          },
          "a84c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Device Found?",
            "description": "Device Found?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "stdout",
                          "task": "56a0"
                        },
                        "operator": "!contains",
                        "operand_2": {
                          "variable": "Not all devices available",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": 732
            }
          },
          "97c2": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Error Occurred",
            "description": "Error Occurred",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Occurred",
                "message": "",
                "body": "$var.89d7.errorMessage",
                "variables": {},
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1284,
              "y": 924
            }
          },
          "89d7": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Evaluate ACL Rule Result",
            "description": "Evaluate ACL Rule Result",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6234ddfb1678ea01c7fbcd3d",
                "variableMap": {
                  "commandResult": "$var.56a0.stdout"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "errorMessage": null,
                "errorFound": null
              }
            },
            "groups": [],
            "task_name": "Evaluate ACL Rule Result",
            "retrySettings": null,
            "nodeLocation": {
              "x": 960,
              "y": 840
            }
          },
          "3e2e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Device Not Found",
            "description": "Device Not Found",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Device Not Found",
                "message": "Device not found.  Please check device name and try again.",
                "body": "",
                "variables": {},
                "btn_success": "OK",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 600,
              "y": 732
            }
          }
        },
        "transitions": {
          "328": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "97c2": {
              "type": "standard",
              "state": "failure"
            }
          },
          "workflow_start": {
            "aaac": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "aaac": {
            "56a0": {
              "state": "success",
              "type": "standard"
            }
          },
          "56a0": {
            "a84c": {
              "type": "standard",
              "state": "success"
            }
          },
          "a84c": {
            "89d7": {
              "type": "standard",
              "state": "success"
            },
            "3e2e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "97c2": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "89d7": {
            "328": {
              "type": "standard",
              "state": "success"
            }
          },
          "3e2e": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "7feb": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "aclIdentifier": {
              "type": "string"
            },
            "aclRuleLineNumber": {
              "type": ["string", "number"]
            },
            "aclRuleAction": {
              "type": "string"
            },
            "aclRuleSource": {
              "type": "string"
            },
            "aclRuleSourceNetmask": {
              "type": "string"
            },
            "aclRuleDestination": {
              "type": "string"
            },
            "aclRuleDestinationNetmask": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          },
          "required": [
            "aclIdentifier",
            "aclRuleLineNumber",
            "aclRuleAction",
            "aclRuleSource",
            "aclRuleSourceNetmask",
            "aclRuleDestination",
            "aclRuleDestinationNetmask",
            "deviceName",
            "protocol"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "aclIdentifier": {
              "type": "string"
            },
            "aclRuleLineNumber": {
              "type": ["string", "number"]
            },
            "aclRuleAction": {
              "type": "string"
            },
            "aclRuleSource": {
              "type": "string"
            },
            "aclRuleSourceNetmask": {
              "type": "string"
            },
            "aclRuleDestination": {
              "type": "string"
            },
            "aclRuleDestinationNetmask": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "asaError": {
              "type": ["array", "boolean", "null", "number", "object", "string"]
            }
          }
        },
        "decorators": [],
        "createdVersion": "5.40.5-2021.1.52.0",
        "font_size": 12,
        "lastUpdatedVersion": "5.55.2-2023.2.13",
        "last_updated": "2025-01-24T10:44:41.689Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "created": "1970-01-01T00:00:00.000Z",
        "canvasVersion": 3,
        "created_by": {
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false,
          "sso": true,
          "nameID": "admin@itential"
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 3
      }
    },
    {
      "iid": 15,
      "reference": "@66d0ccea21161b4df27174c0: File Verification",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "File Verification",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show ver | i System image file is",
            "passRule": true,
            "rules": [
              {
                "rule": "<!targetVersion!>",
                "eval": "!contains",
                "severity": "error",
                "flags": {
                  "case": true
                },
                "evaluation": "pass"
              }
            ]
          },
          {
            "command": "dir <!disk!><!version!>",
            "passRule": true,
            "rules": [
              {
                "rule": "No such file or directory",
                "eval": "!contains",
                "severity": "error",
                "evaluation": "error"
              },
              {
                "rule": "Directory of <!disk!><!targetVersion!>",
                "eval": "contains",
                "severity": "error",
                "evaluation": "error"
              }
            ]
          },
          {
            "command": "show running | inc boot",
            "passRule": true,
            "rules": [
              {
                "rule": "boot system <!disk!>",
                "eval": "contains",
                "severity": "error",
                "evaluation": "error"
              }
            ]
          }
        ],
        "created": 1724972784014,
        "createdBy": null,
        "lastUpdated": 1737715481697,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 5,
      "reference": "@66d0ccea21161b4df27174c0: Reload",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Reload",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "reload",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724972798485,
        "createdBy": null,
        "lastUpdated": 1737715481697,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 6,
      "reference": "@66d0ccea21161b4df27174c0: Show Version",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Show Version",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show version",
            "passRule": true,
            "rules": [
              {
                "rule": "Configuration",
                "eval": "contains",
                "severity": "error"
              },
              {
                "rule": "<!targetVersion!>",
                "eval": "contains",
                "severity": "error"
              }
            ]
          }
        ],
        "created": 1724972802632,
        "createdBy": null,
        "lastUpdated": 1737715481728,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 7,
      "reference": "@66d0ccea21161b4df27174c0: Software Upgrade Checks",
      "type": "mopCommandTemplate",
      "folder": "/Software Upgrade",
      "document": {
        "tags": [],
        "name": "Software Upgrade Checks",
        "os": "",
        "passRule": true,
        "ignoreWarnings": null,
        "commands": [
          {
            "command": "show ver",
            "passRule": false,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show ver",
            "ruleValues": [
              {
                "rule": "Configuration register is 0x2102",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show run",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error",
                "flags": {
                  "case": false
                }
              }
            ],
            "tempCommand": "show running",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error",
                "flags": {
                  "case": false
                }
              }
            ]
          },
          {
            "command": "sh interface ip brief",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show ip int br",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show clock",
            "passRule": true,
            "rules": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ],
            "tempCommand": "show clock",
            "ruleValues": [
              {
                "rule": "",
                "eval": "contains",
                "severity": "error"
              }
            ]
          },
          {
            "command": "show ntp status",
            "passRule": true,
            "rules": [
              {
                "rule": "NTP is not enabled.",
                "eval": "!contains",
                "severity": "warning"
              },
              {
                "rule": "Clock is unsynchronized",
                "eval": "!contains",
                "severity": "warning"
              }
            ],
            "tempCommand": "show ntp status",
            "ruleValues": [
              {
                "rule": "NTP is not enabled.",
                "eval": "!contains",
                "severity": "warning"
              },
              {
                "rule": "Clock is unsynchronized",
                "eval": "!contains",
                "severity": "warning"
              }
            ]
          }
        ],
        "created": 1724972789719,
        "createdBy": null,
        "lastUpdated": 1737715481746,
        "lastUpdatedBy": "admin@itential"
      }
    },
    {
      "iid": 8,
      "reference": "62a1eacabd5af200d7a82621",
      "type": "template",
      "folder": "/Software Upgrade",
      "document": {
        "_id": "62a1eacabd5af200d7a82621",
        "command": "",
        "template": "conf t\n\nno boot system {{disk}}{{currentVersion}}\nboot system {{disk}}{{targetVersion}}\n\nexit\n\ncopy run start",
        "type": "jinja2",
        "name": "Set Boot Marker",
        "version": 1,
        "tags": [],
        "data": "{\n  \"disk\": \"disk0:/\",\n  \"currentVersion\": \"asa9-14-3-11-smp-k8.bin\", \n  \"targetVersion\":\"asa9-12-4-37-smp-k8.bin\"\n}",
        "group": "Cisco ASA Configs",
        "description": "",
        "created": "2024-02-01T21:26:48.205Z",
        "lastUpdated": "2025-01-24T10:44:41.694Z",
        "createdBy": null,
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential",
          "firstname": "admin@itential",
          "inactive": false
        }
      }
    },
    {
      "iid": 9,
      "reference": "6234c9881678ea01c7fbcd3c",
      "type": "transformation",
      "folder": "/ACL Rules/Add ACL Rule",
      "document": {
        "_id": "6234c9881678ea01c7fbcd3c",
        "name": "Build ACL Rule Add Data",
        "description": "",
        "incoming": [
          {
            "$id": "aclIdentifier",
            "type": "string"
          },
          {
            "$id": "aclRuleLineNumber",
            "type": ["string", "number"]
          },
          {
            "$id": "aclRuleAction",
            "type": "string"
          },
          {
            "$id": "aclRuleSource",
            "type": "string"
          },
          {
            "$id": "aclRuleSourceNetmask",
            "type": "string"
          },
          {
            "$id": "aclRuleDestination",
            "type": "string"
          },
          {
            "$id": "aclRuleDestinationNetmask",
            "type": "string"
          },
          {
            "$id": "deviceName",
            "type": "string"
          },
          {
            "$id": "protocol",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "aclRuleCmdArray",
            "type": "array"
          },
          {
            "$id": "deviceArray",
            "type": "array"
          },
          {
            "$id": "aclRuleCmd",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [null],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [null, null, null],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 8,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleLineNumber",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 14,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": ["line", null],
            "view": {
              "row": 2,
              "col": 1
            },
            "polymorphIndex": 0
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleLineNumber",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 14,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 17,
            "type": "method",
            "library": "Array",
            "method": "join",
            "args": [null, " "],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 17,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 20,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              "access-list",
              null,
              "extended",
              "extended",
              null,
              null,
              null,
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 4
            },
            "polymorphIndex": 0
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclIdentifier",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 27,
            "type": "method",
            "library": "Array",
            "method": "join",
            "args": [null, " "],
            "view": {
              "row": 1,
              "col": 5
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 20,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 27,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleSource",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/6/value"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleSourceNetmask",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/7/value"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleDestination",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/8/value"
            }
          },
          {
            "id": 35,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleDestinationNetmask",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/9/value"
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclRuleAction",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/4/value"
            }
          },
          {
            "id": 37,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 4,
              "col": 1
            },
            "polymorphIndex": 0
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 37,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 39,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 37,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceArray",
              "ptr": ""
            }
          },
          {
            "id": 41,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": ["configure terminal", null],
            "view": {
              "row": 1,
              "col": 6
            },
            "polymorphIndex": 0
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 41,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "aclRuleCmdArray",
              "ptr": ""
            }
          },
          {
            "id": 44,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 27,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 41,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 45,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 27,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "aclRuleCmd",
              "ptr": ""
            }
          },
          {
            "id": 46,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "protocol",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 20,
              "ptr": "/args/5/value"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 6,
          "row": 5
        },
        "created": "2025-01-15T15:21:37.826Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:44:41.695Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 10,
      "reference": "626a7ddb4ed12301aa080f2d",
      "type": "transformation",
      "folder": "/ACL Rules/Delete ACL Rule",
      "document": {
        "_id": "626a7ddb4ed12301aa080f2d",
        "name": "Build ACL Rule Delete Data",
        "description": "",
        "incoming": [
          {
            "$id": "aclIdentifier",
            "type": "string"
          },
          {
            "$id": "deviceName",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "aclRuleCmdArray",
            "type": "array"
          },
          {
            "$id": "deviceArray",
            "type": "array"
          },
          {
            "$id": "aclRuleCmd",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 37,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 1
            },
            "polymorphIndex": 0
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 37,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 39,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 37,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceArray",
              "ptr": ""
            }
          },
          {
            "id": 41,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": ["configure terminal", null],
            "view": {
              "row": 1,
              "col": 2
            },
            "polymorphIndex": 0
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 41,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "aclRuleCmdArray",
              "ptr": ""
            }
          },
          {
            "id": 44,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "clear configure access-list ${aclIdentifier}",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 45,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "aclIdentifier",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 44,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 46,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 44,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 41,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 47,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 44,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "aclRuleCmd",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T15:21:37.857Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:44:41.701Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 11,
      "reference": "66d0ccb9cddf0c8da2752c77",
      "type": "transformation",
      "folder": "/Command Template Runner",
      "document": {
        "_id": "66d0ccb9cddf0c8da2752c77",
        "name": "Create Command Template Runner Error Message",
        "description": "Create Command Template Runner error message",
        "incoming": [
          {
            "$id": "templateName",
            "type": "string",
            "examples": ["Template A"]
          }
        ],
        "outgoing": [
          {
            "$id": "errorMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "templateName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "The Command Template ${templateName} has errored. See details below. Select \"Retry\" to retry Command Template or select \"Continue\" to continue to end of job.",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "errorMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-15T15:21:37.869Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:44:41.702Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 12,
      "reference": "6234ddfb1678ea01c7fbcd3d",
      "type": "transformation",
      "folder": "/ACL Rules",
      "document": {
        "_id": "6234ddfb1678ea01c7fbcd3d",
        "name": "Evaluate ACL Rule Result",
        "description": "",
        "incoming": [
          {
            "$id": "commandResult",
            "type": "object",
            "properties": {
              "completed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "examples": ["FAILURE"]
                          },
                          "results": {
                            "type": "object",
                            "properties": {
                              "msg": {
                                "type": "string",
                                "examples": [
                                  "ccess-list my-acl  extended permit ip 10%2E20%2E30%2E0 255%2E255%2E255%2E0 192%2E$\r\n\r\naccess-list my-acl  extended permit ip 10%2E20%2E30%2E0 255%2E255%2E255%2E0 192%2E168%2E1%2E0 255%2E  ^255%2E255%2E0\r\n\r\nERROR: % Invalid input detected at '^' marker%2E\r\n\rciscoasa# \r\n\rciscoasa# "
                                ]
                              },
                              "changed": {
                                "type": "boolean",
                                "examples": [true, false]
                              },
                              "item": {
                                "type": "string",
                                "examples": [
                                  "access-list my-acl  extended permit ip 10%2E20%2E30%2E0 255%2E255%2E255%2E0 192%2E168%2E1%2E0 255%2E255%2E255%2E0"
                                ]
                              }
                            },
                            "required": []
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "errorMessage",
            "type": "string"
          },
          {
            "$id": "errorFound",
            "type": "boolean"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [null, 0],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commandResult",
              "ptr": "/completed"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [null, "response"],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [null, 1],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 5,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [null, "status"],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [null, "FAILURE"],
            "view": {
              "row": 2,
              "col": 4
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "errorFound",
              "ptr": ""
            }
          },
          {
            "id": 14,
            "type": "method",
            "library": "Object",
            "method": "optional chaining",
            "args": [null, "results", "msg"],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "errorMessage",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2025-01-15T15:21:37.860Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:44:41.703Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 13,
      "reference": "62a1edfe7b7b56017266d46b",
      "type": "transformation",
      "folder": "/Software Upgrade",
      "document": {
        "_id": "62a1edfe7b7b56017266d46b",
        "name": "Software Upgrade",
        "description": "",
        "incoming": [
          {
            "$id": "deviceName",
            "type": "string"
          },
          {
            "$id": "targetVersion",
            "type": "string"
          },
          {
            "$id": "disk",
            "type": "string"
          },
          {
            "$id": "currentVersion",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "templateVars",
            "type": "object",
            "properties": {
              "deviceName": {
                "type": "string"
              },
              "targetVersion": {
                "type": "string"
              },
              "disk": {
                "type": "string"
              },
              "currentVersion": {
                "type": "string"
              }
            },
            "required": []
          },
          {
            "$id": "device",
            "type": "string"
          },
          {
            "$id": "deviceArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "templateVars",
              "ptr": "/deviceName"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "disk",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "templateVars",
              "ptr": "/disk"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentVersion",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "templateVars",
              "ptr": "/currentVersion"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "targetVersion",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "templateVars",
              "ptr": "/targetVersion"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "device",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 12,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceArray",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 12,
              "ptr": "/args/0/value"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-15T15:21:37.868Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:44:41.704Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    },
    {
      "iid": 14,
      "reference": "66d0ccb9cddf0c8da2752c78",
      "type": "transformation",
      "folder": "/Software Upgrade",
      "document": {
        "_id": "66d0ccb9cddf0c8da2752c78",
        "name": "Process Push Configuration Data",
        "description": "Process push configuration data",
        "incoming": [
          {
            "$id": "renderedJinja2Template",
            "type": "object",
            "properties": {
              "renderedTemplate": {
                "type": "string",
                "examples": ["test"]
              }
            },
            "required": []
          },
          {
            "$id": "deviceName",
            "type": "string",
            "examples": ["device"]
          }
        ],
        "outgoing": [
          {
            "$id": "renderedTemplate",
            "type": "string",
            "examples": ["test"]
          },
          {
            "$id": "configurationList",
            "type": "array"
          },
          {
            "$id": "deviceList",
            "type": "array"
          },
          {
            "$id": "deviceConfigurationPushMessage",
            "type": "string"
          },
          {
            "$id": "deviceConfigurationPushFailedMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 2,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedJinja2Template",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 2,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [null],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 5,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "See configuration below to provision against the device \"${deviceName}\". Select \"Provision\" to attempt to push the configuration to the device or select \"End Job\" to skip pushing configuration and to end the job.",
            "args": [null],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "configurationList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceConfigurationPushMessage",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "renderedJinja2Template",
              "ptr": "/renderedTemplate"
            },
            "to": {
              "location": "outgoing",
              "name": "renderedTemplate",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "Pushing configuration to device \"${deviceName}\" failed. See details below. Select \"Retry\" to retry provisioning the configuration against the device or select \"End Job\" to end the job without pushing configuration to the device.\n\n\n\n\n\n\n",
            "args": [null],
            "view": {
              "row": 4,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 11,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceConfigurationPushFailedMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-15T15:21:37.875Z",
        "createdBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "lastUpdated": "2025-01-24T10:44:41.703Z",
        "lastUpdatedBy": {
          "_id": "66d1e2b552e6dc384b5d6626",
          "provenance": "Okta",
          "username": "admin@itential"
        },
        "version": "4.3.6-2023.2.5",
        "tags": []
      }
    }
  ],
  "folders": [
    {
      "nodeType": "folder",
      "name": "Software Upgrade",
      "children": [
        {
          "iid": 2,
          "nodeType": "component"
        },
        {
          "iid": 13,
          "nodeType": "component"
        },
        {
          "iid": 15,
          "nodeType": "component"
        },
        {
          "iid": 7,
          "nodeType": "component"
        },
        {
          "iid": 1,
          "nodeType": "component"
        },
        {
          "iid": 14,
          "nodeType": "component"
        },
        {
          "iid": 8,
          "nodeType": "component"
        },
        {
          "iid": 5,
          "nodeType": "component"
        },
        {
          "iid": 6,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "ACL Rules",
      "children": [
        {
          "nodeType": "folder",
          "name": "Add ACL Rule",
          "children": [
            {
              "iid": 4,
              "nodeType": "component"
            },
            {
              "iid": 9,
              "nodeType": "component"
            }
          ]
        },
        {
          "nodeType": "folder",
          "name": "Delete ACL Rule",
          "children": [
            {
              "iid": 3,
              "nodeType": "component"
            },
            {
              "iid": 10,
              "nodeType": "component"
            }
          ]
        },
        {
          "iid": 12,
          "nodeType": "component"
        }
      ]
    },
    {
      "nodeType": "folder",
      "name": "Command Template Runner",
      "children": [
        {
          "iid": 0,
          "nodeType": "component"
        },
        {
          "iid": 11,
          "nodeType": "component"
        }
      ]
    }
  ],
  "created": "2024-08-29T19:32:58.581Z",
  "createdBy": {
    "_id": "6786b32af921f091fd105007",
    "provenance": "Local AAA",
    "username": "admin@itential"
  },
  "lastUpdated": "2025-01-24T10:44:41.757Z",
  "lastUpdatedBy": {
    "_id": "66d1e2b552e6dc384b5d6626",
    "provenance": "Okta",
    "username": "admin@itential"
  },
  "iid": 35,
  "thumbnail": "",
  "backgroundColor": "#FFFFFF"
}
